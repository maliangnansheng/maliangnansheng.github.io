<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nan&#39;s Blog</title>
  
  <subtitle>弱者才言命，强者只言运！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="/"/>
  <updated>2019-06-10T08:40:53.564Z</updated>
  <id>/</id>
  
  <author>
    <name>马亮南生</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>VPS搭建属于自己的SS代理</title>
    <link href="/2019/06/10/VPS%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84SS%E4%BB%A3%E7%90%86/"/>
    <id>/2019/06/10/VPS搭建属于自己的SS代理/</id>
    <published>2019-06-10T08:09:06.000Z</published>
    <updated>2019-06-10T08:40:53.564Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装shadowsocks"><a href="#安装shadowsocks" class="headerlink" title="安装shadowsocks"></a>安装shadowsocks</h2><h3 id="第一条命令"><a href="#第一条命令" class="headerlink" title="第一条命令"></a>第一条命令</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载脚本shadowsocks.sh</span></span><br><span class="line">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待下载完成...</span></span><br></pre></td></tr></table></figure><h3 id="第二条命令"><a href="#第二条命令" class="headerlink" title="第二条命令"></a>第二条命令</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 为shadowsocks.sh添加执行权限</span></span><br><span class="line">chmod +x shadowsocks.sh</span><br></pre></td></tr></table></figure><h3 id="第三条命令"><a href="#第三条命令" class="headerlink" title="第三条命令"></a>第三条命令</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 中间会提示我们输入一些信息</span></span><br></pre></td></tr></table></figure><p><strong>中间会提示你输入你的SS server的账号，和端口。不输入就是默认。跑完命令后会出来你的SS客户端的信息。特别注意，由于iphone端的目前只支持到<code>cfb</code>，所以我们选择<code>aes-256-cfb</code>，即7，这一步按回车继续然后需要几分钟的安装过程，请耐心等待出现下面的画面！</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/shadowsocks001.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装shadowsocks&quot;&gt;&lt;a href=&quot;#安装shadowsocks&quot; class=&quot;headerlink&quot; title=&quot;安装shadowsocks&quot;&gt;&lt;/a&gt;安装shadowsocks&lt;/h2&gt;&lt;h3 id=&quot;第一条命令&quot;&gt;&lt;a href=&quot;#第一条命
      
    
    </summary>
    
      <category term="shadowsocks" scheme="/categories/shadowsocks/"/>
    
    
      <category term="vps" scheme="/tags/vps/"/>
    
      <category term="shadowsocks" scheme="/tags/shadowsocks/"/>
    
      <category term="翻墙" scheme="/tags/%E7%BF%BB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title>Centos7.x中磁盘管理及扩展</title>
    <link href="/2019/05/28/Centos7-x%E4%B8%AD%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%E5%8F%8A%E6%89%A9%E5%B1%95/"/>
    <id>/2019/05/28/Centos7-x中磁盘管理及扩展/</id>
    <published>2019-05-28T06:51:39.000Z</published>
    <updated>2019-05-28T09:21:20.090Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前提要求："><a href="#前提要求：" class="headerlink" title="前提要求："></a>前提要求：</h2><p>虚拟机：centos7.x</p><p>在安装Centos系统时，磁盘选择为<code>LVM</code>逻辑卷。当选择为LVM后才能创建逻辑卷等（必须）</p><p>数据格式选择的是<code>xfs</code>，很多讲解使用的是ext3，但以后xfs的优势会比ext越来越大。（可选）</p><p>LVM是Logical Volume Manager（逻辑卷管理）的简写，它是Linux环境下对硬盘分区进行管理的一种机制。LVM是建立在硬盘和分区上的逻辑层，它允许跨硬盘、分区创建逻辑卷并创建文件系统，可以很方便执行<code>增加、扩展、删除</code>等操作。</p><h2 id="物理卷（PV）"><a href="#物理卷（PV）" class="headerlink" title="物理卷（PV）"></a>物理卷（PV）</h2><p>物理卷（Physical Volume,PV）：就是指硬盘分区，也可以是整个硬盘或已创建的软RAID，是LVM的基本存储设备。在创建逻辑卷之前需要先创建物理卷，然后将多个物理卷组合创建卷组，最后在卷组的基础上创建逻辑卷。</p><p>可以将空白硬盘或分区加入主机，系统识别到新的硬盘sdb后，使用pvcreate对硬盘创建PV。</p><p>添加新硬盘或直接扩展分区的方式：`直接扩展/或直接新添加一个硬盘</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lsblk<span class="comment">#列出系统上所有的磁盘</span></span><br><span class="line">df -h<span class="comment">#检查文件系统的磁盘空间占用情况</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/lvm1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看出磁盘vda还有200多G的空白磁盘没有挂载。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/vda<span class="comment">#回车</span></span><br><span class="line">p<span class="comment">#回车</span></span><br><span class="line">n<span class="comment">#回车</span></span><br><span class="line">默认   <span class="comment">#回车</span></span><br><span class="line">默认   <span class="comment">#回车</span></span><br><span class="line">默认   <span class="comment">#回车</span></span><br><span class="line">默认   <span class="comment">#回车</span></span><br><span class="line">t<span class="comment">#回车</span></span><br><span class="line">默认   <span class="comment">#回车</span></span><br><span class="line">8e<span class="comment">#回车</span></span><br><span class="line">p<span class="comment">#回车</span></span><br><span class="line">w<span class="comment">#回车</span></span><br><span class="line">reboot<span class="comment">#回车</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/lvm2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/lvm3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pvcreate /dev/vda3<span class="comment">#创建物理卷</span></span><br><span class="line">pvdisplay</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/lvm4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="卷组（VG）"><a href="#卷组（VG）" class="headerlink" title="卷组（VG）"></a>卷组（VG）</h2><p>卷组（Volume Group,VG）：是由一个或多个物理卷所组成的存储池，在卷组上能创建一个或多个逻辑卷。现在使用<code>vgcreate</code>命令对上文创建的PV（单个物理卷）创建卷组。 </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vgcreate -s 10M vg0 /dev/vda3<span class="comment">#创建卷组vg0,指定物理块PE大小10M,并将pv:/dev/vda3加入vg0</span></span><br><span class="line">vgdisplay<span class="comment"># 查看所有卷组的信息.后面接具体卷组名,可查看指定卷组信息</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/lvm5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvdisplay<span class="comment"># 查看所当前物理卷的信息.后面可接具体物理卷设备,可查看指定物理卷信息</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/lvm6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="创建逻辑卷（LV）"><a href="#创建逻辑卷（LV）" class="headerlink" title="创建逻辑卷（LV）"></a>创建逻辑卷（LV）</h2><p>逻辑卷（Logical Volume,LV）：类似于非LVM系统中的硬盘分区，它建立在卷组之上，是一个标准的块设备，在逻辑卷之上可以建立文件系统。可以使用<code>lvcreate</code>命令创建逻辑卷 </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@hewanli-mysql ~]<span class="comment"># lvcreate -n lv0 -l 100%vg vg0#使用vg0的全部空间创建逻辑卷lv0</span></span><br><span class="line">  Logical volume <span class="string">"lv0"</span> created.</span><br><span class="line">[root@hewanli-mysql ~]<span class="comment"># lvdisplay</span></span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/vg0/lv0</span><br><span class="line">  LV Name                lv0</span><br><span class="line">  VG Name                vg0</span><br><span class="line">  LV UUID                uz1Ej1-mC6D-9MBf-Sdbc-2UQS-frMm-AsuzbC</span><br><span class="line">  LV Write Access        <span class="built_in">read</span>/write</span><br><span class="line">  LV Creation host, time hewanli-mysql, 2019-05-28 03:44:32 -0400</span><br><span class="line">  LV Status              available</span><br><span class="line">  <span class="comment"># open                 0</span></span><br><span class="line">  LV Size                249.99 GiB</span><br><span class="line">  Current LE             25599</span><br><span class="line">  Segments               1</span><br><span class="line">  Allocation             inherit</span><br><span class="line">  Read ahead sectors     auto</span><br><span class="line">  - currently <span class="built_in">set</span> to     8192</span><br><span class="line">  Block device           253:3</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pvdisplay</span><br><span class="line">lsblk -f /dev/vda</span><br><span class="line"><span class="comment">#会在/dev下生成一个新的设备文件：</span></span><br><span class="line">ll /dev/vg0/lv0</span><br><span class="line">ll /dev/dm-0</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/lvm7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h2><p>在逻辑卷lv0创建完成后还需要创建文件系统并挂载到指定目录才能够使用,当然还需要将挂载信息写入/etc/fstab文件 </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mkfs.xfs /dev/vg0/lv0<span class="comment"># 创建文件系统</span></span><br><span class="line">lsblk /dev/vda -f</span><br><span class="line">lsblk /dev/vg0/lv0 -f</span><br><span class="line">mkdir /data &amp;&amp; mount /dev/vg0/lv0 /data<span class="comment"># 将逻辑卷挂载到制定目录</span></span><br><span class="line">df -T<span class="comment"># 查看挂载点</span></span><br><span class="line">blkid /dev/vg0/lv0<span class="comment">#注意UUID，下面命令会使用</span></span><br><span class="line">df -T /dev/vg0/lv0</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"UUID=2fb5642b-0167-4709-9d35-85a407b4801a /data                 xfs    defaults        0 0"</span> &gt;&gt; /etc/fstab<span class="comment">#UUID填自己的（上面命令结果有输出）</span></span><br><span class="line">cat /etc/fstab | egrep <span class="string">"UUID"</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/lvm8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lsblk<span class="comment">#列出系统上所有的磁盘</span></span><br><span class="line">df -h<span class="comment">#检查文件系统的磁盘空间占用情况</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/lvm9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="扩展逻辑卷"><a href="#扩展逻辑卷" class="headerlink" title="扩展逻辑卷"></a>扩展逻辑卷</h2><p>我们可以很方便的多逻辑卷进行扩展，不论是使用新的空白磁盘还是已有的空白分区。其大致实现原理为：对空白分区创建物理卷，然后将物理卷加入到需要扩展逻辑卷所在的卷组，最后扩大逻辑卷空间。如果逻辑卷所在的卷组还有空闲的空间（PE）可被使用且足够大，则甚至不需要另外的分区或者磁盘。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsblk -f /dev/vda</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前提要求：&quot;&gt;&lt;a href=&quot;#前提要求：&quot; class=&quot;headerlink&quot; title=&quot;前提要求：&quot;&gt;&lt;/a&gt;前提要求：&lt;/h2&gt;&lt;p&gt;虚拟机：centos7.x&lt;/p&gt;
&lt;p&gt;在安装Centos系统时，磁盘选择为&lt;code&gt;LVM&lt;/code&gt;逻辑卷
      
    
    </summary>
    
      <category term="Linux" scheme="/categories/Linux/"/>
    
    
      <category term="Centos7.x" scheme="/tags/Centos7-x/"/>
    
      <category term="磁盘管理及扩展" scheme="/tags/%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%E5%8F%8A%E6%89%A9%E5%B1%95/"/>
    
  </entry>
  
  <entry>
    <title>Gson使用技巧</title>
    <link href="/2019/05/22/Gson%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>/2019/05/22/Gson使用技巧/</id>
    <published>2019-05-22T07:29:44.000Z</published>
    <updated>2019-05-22T07:36:30.343Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Gson获取json字符串中key对应的值"><a href="#Gson获取json字符串中key对应的值" class="headerlink" title="Gson获取json字符串中key对应的值"></a>Gson获取json字符串中key对应的值</h2><p>字符串 ：</p><p>//得到服务器返回的具体内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> String res = response.body().string();</span><br></pre></td></tr></table></figure><p>例1：<code>{&quot;code&quot;:100,&quot;msg&quot;:&quot;处理成功！&quot;,&quot;extend&quot;:{&quot;jsonString&quot;:{&quot;userId&quot;:1,&quot;userName&quot;:&quot;123&quot;,&quot;userPwd&quot;:&quot;123&quot;}}}</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">jsonObject = (JsonObject) <span class="keyword">new</span> JsonParser().parse(res).getAsJsonObject();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取  code：</span></span><br><span class="line">jsonObject.get(<span class="string">"code"</span>).getAsInt();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取  userName：</span></span><br><span class="line">jsonObject.get(<span class="string">"extend"</span>)</span><br><span class="line">    .getAsJsonObject().get(<span class="string">"jsonString"</span>)</span><br><span class="line">    .getAsJsonObject().get(<span class="string">"userName"</span>)</span><br><span class="line">    .getAsString()</span><br></pre></td></tr></table></figure><p>例2：<code>{&quot;code&quot;:100,&quot;msg&quot;:&quot;处理成功！&quot;,&quot;extend&quot;:{&quot;jsonString&quot;:[{&quot;userId&quot;:1,&quot;userName&quot;:&quot;123&quot;,&quot;userPwd&quot;:&quot;123&quot;}]}}</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">jsonObject = (JsonObject) <span class="keyword">new</span> JsonParser().parse(res).getAsJsonObject();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取  code：</span></span><br><span class="line">String code = jsonObject.get(<span class="string">"code"</span>).getAsInt();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取  userName：</span></span><br><span class="line">String userName = jsonObject.get(<span class="string">"extend"</span>)</span><br><span class="line">    .getAsJsonObject().get(<span class="string">"jsonString"</span>)</span><br><span class="line">    .getAsJsonArray().get(<span class="number">0</span>)</span><br><span class="line">    .getAsJsonObject().get(<span class="string">"userName"</span>)</span><br><span class="line">    .getAsString()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Gson获取json字符串中key对应的值&quot;&gt;&lt;a href=&quot;#Gson获取json字符串中key对应的值&quot; class=&quot;headerlink&quot; title=&quot;Gson获取json字符串中key对应的值&quot;&gt;&lt;/a&gt;Gson获取json字符串中key对应的值&lt;/
      
    
    </summary>
    
      <category term="Gson" scheme="/categories/Gson/"/>
    
    
      <category term="Java" scheme="/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>java调用外部接口</title>
    <link href="/2019/05/22/java%E8%B0%83%E7%94%A8%E5%A4%96%E9%83%A8%E6%8E%A5%E5%8F%A3/"/>
    <id>/2019/05/22/java调用外部接口/</id>
    <published>2019-05-22T07:24:59.000Z</published>
    <updated>2019-05-22T07:28:42.223Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java调用外部接口的方法，最终返回接口response的信息"><a href="#Java调用外部接口的方法，最终返回接口response的信息" class="headerlink" title="Java调用外部接口的方法，最终返回接口response的信息"></a>Java调用外部接口的方法，最终返回接口<code>response</code>的信息</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">String strURL = <span class="string">"这里是你要调用的接口地址"</span>;</span><br><span class="line">URL url = <span class="keyword">new</span> URL(strURL);</span><br><span class="line">HttpURLConnection httpConn = (HttpURLConnection)url.openConnection();</span><br><span class="line">httpConn.setRequestMethod(<span class="string">"GET"</span>);</span><br><span class="line">httpConn.connect();</span><br><span class="line">BufferedReader reader = <span class="keyword">new</span> BufferedReader(</span><br><span class="line">    <span class="keyword">new</span> InputStreamReader(httpConn.getInputStream()));</span><br><span class="line">String line;</span><br><span class="line">StringBuffer buffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"><span class="keyword">while</span> ((line = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">    buffer.append(line);</span><br><span class="line">&#125;</span><br><span class="line">reader.close();</span><br><span class="line">httpConn.disconnect();</span><br><span class="line"></span><br><span class="line">System.out.println(buffer.toString());</span><br></pre></td></tr></table></figure><p><strong>最终这里<code>buffer.toString();</code>就是接口<code>response</code>的值</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Java调用外部接口的方法，最终返回接口response的信息&quot;&gt;&lt;a href=&quot;#Java调用外部接口的方法，最终返回接口response的信息&quot; class=&quot;headerlink&quot; title=&quot;Java调用外部接口的方法，最终返回接口response的信
      
    
    </summary>
    
      <category term="调用外部接口" scheme="/categories/%E8%B0%83%E7%94%A8%E5%A4%96%E9%83%A8%E6%8E%A5%E5%8F%A3/"/>
    
    
      <category term="Java" scheme="/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Jboss在Linux下的使用技巧</title>
    <link href="/2019/05/10/Jboss%E5%9C%A8Linux%E4%B8%8B%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>/2019/05/10/Jboss在Linux下的使用技巧/</id>
    <published>2019-05-10T08:52:52.000Z</published>
    <updated>2019-05-10T08:52:52.601Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux下远程连接MySQL数据库</title>
    <link href="/2019/05/08/Linux%E4%B8%8B%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>/2019/05/08/Linux下远程连接MySQL数据库/</id>
    <published>2019-05-08T15:43:12.000Z</published>
    <updated>2019-05-08T15:52:13.343Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p><strong>在服务器端开启远程访问</strong></p><p>首先进入mysql数据库，然后输入下面两个命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant all privileges on *.* to &apos;root&apos;@&apos;%&apos; identified by &apos;password&apos;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><ul><li><p>第一个*是数据库，可以改成允许访问的数据库名称</p></li><li><p>第二个<em> 是数据库的表名称，</em>代表允许访问任意的表</p></li><li>root代表远程登录使用的用户名，可以自定义</li><li>%代表允许任意ip登录，如果你想指定特定的IP，可以把%替换掉就可以了</li><li>password代表远程登录时使用的密码，可以自定义</li><li><code>flush privileges;</code>这是让权限立即生效</li></ul></li><li><p><strong>修改<code>my.cnf</code>配置文件</strong></p><p>这个是mysql的配置文件，如果你无标题文章找不到在哪里的话，可以输入<code>find /* -name my.cnf</code> 找到<br>通过vim编辑该文件，找到<code>bind-address = 127.0.0.1</code>这一句（如果没有就不管），然后在前面加个#号注释掉，保存退出</p></li><li><p><strong>重启服务</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service mysql restart</span><br></pre></td></tr></table></figure></li><li><p><strong>开放3306端口（端口以自己实际情况为准）</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=3306/tcp --permanent</span><br><span class="line"><span class="comment"># 重启防火墙</span></span><br><span class="line">systemctl restart firewalld</span><br></pre></td></tr></table></figure></li><li><p><strong>在本地远程连接</strong></p><p>在终端输入：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h 服务器ip地址 -P 3306 -u root -p</span><br></pre></td></tr></table></figure><p>然后输入密码即可。</p><p>也可以使用连接工具连接，例如<code>Navicat</code></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;在服务器端开启远程访问&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先进入mysql数据库，然后输入下面两个命令：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="MySQL" scheme="/categories/MySQL/"/>
    
    
      <category term="Linux" scheme="/tags/Linux/"/>
    
      <category term="远程连接" scheme="/tags/%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJIDEA tomcat在浏览器js乱码问题解决</title>
    <link href="/2019/04/28/IntelliJIDEA-tomcat%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8js%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>/2019/04/28/IntelliJIDEA-tomcat在浏览器js乱码问题解决/</id>
    <published>2019-04-28T03:30:05.000Z</published>
    <updated>2019-04-28T03:57:34.814Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h2 id="在配置Tomcat的时候添加参数"><a href="#在配置Tomcat的时候添加参数" class="headerlink" title="在配置Tomcat的时候添加参数"></a>在配置Tomcat的时候添加参数</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Dfile.encoding=UTF-8</span><br></pre></td></tr></table></figure><p><img src="/img/idea-tomcat.png" alt=""></p></li><li><h2 id="修改idea64-exe-vmoptions和idea-exe-vmoptions文件"><a href="#修改idea64-exe-vmoptions和idea-exe-vmoptions文件" class="headerlink" title="修改idea64.exe.vmoptions和idea.exe.vmoptions文件"></a>修改<code>idea64.exe.vmoptions</code>和<code>idea.exe.vmoptions</code>文件</h2><p>找到idea安装目录bin目录下如下图所示两个文件，用编辑器打开，在文件末尾添加 <code>-Dfile.encoding=UTF-8</code> ，然后<code>重启idea</code>，再打开浏览器就会发现中文已经可以正常显示了</p><p><img src="/img/idea配置.png" alt=""></p><p><img src="/img/idea-v.png" alt=""></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;在配置Tomcat的时候添加参数&quot;&gt;&lt;a href=&quot;#在配置Tomcat的时候添加参数&quot; class=&quot;headerlink&quot; title=&quot;在配置Tomcat的时候添加参数&quot;&gt;&lt;/a&gt;在配置Tomcat的时候添加参数&lt;/h2&gt;&lt;figure 
      
    
    </summary>
    
      <category term="IDEA" scheme="/categories/IDEA/"/>
    
    
      <category term="IDEA" scheme="/tags/IDEA/"/>
    
      <category term="Tomcat" scheme="/tags/Tomcat/"/>
    
      <category term="浏览器" scheme="/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
      <category term="中文乱码" scheme="/tags/%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>手把手教你用frp实现内网穿透</title>
    <link href="/2019/04/12/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E7%94%A8frp%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    <id>/2019/04/12/手把手教你用frp实现内网穿透/</id>
    <published>2019-04-12T07:26:19.000Z</published>
    <updated>2019-04-16T09:16:39.538Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议。</p></blockquote><p><strong>数据准备：</strong></p><ul><li>公网IP: X.X.X.X</li><li>内网电脑使用的是win10-64系统</li><li>公网电脑为linux-64系统。</li></ul><h2 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h2><h3 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h3><p>下载地址：<a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noopener">frp下载</a></p><p>具有公网IP的电脑将作为frp服务端(frps)，首先去项目地址的releases页面下载与服务端系统匹配的文件并解压</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/frp-linux.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入home目录</span></span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"><span class="comment"># 下载对应的frp作为服务端</span></span><br><span class="line">wget https://github.com/fatedier/frp/releases/download/v0.26.0/frp_0.26.0_linux_amd64.tar.gz</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zxvf frp_0.26.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入frp</span></span><br><span class="line"><span class="built_in">cd</span> frp_0.26.0_linux_amd64/</span><br><span class="line"><span class="comment"># 编辑frps.ini配置文件</span></span><br><span class="line">vim frps.ini</span><br></pre></td></tr></table></figure><p>编辑frps.ini为以下内容：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/frp-配置.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p><code>bind_port</code>为客户端与服务端进行通信的端口。其它更丰富的配置可参考frps_full.ini和项目帮助文档。</p><h3 id="启动服务端"><a href="#启动服务端" class="headerlink" title="启动服务端"></a>启动服务端</h3><p>进行到解压后的frp目录，然后通过<code>./frps -c frps.ini</code>命令即可启动服务端，如下图所示：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/frp_0.26.0_linux_amd64/</span><br><span class="line">./frps -c frps.ini</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/frp-启动.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="设置开机启动和后台运行"><a href="#设置开机启动和后台运行" class="headerlink" title="设置开机启动和后台运行"></a>设置开机启动和后台运行</h3><p>上一步中的frps占据了整个命令窗口，所以接下来要考虑如何让它在后台运行并且开机自启：<br>首先通过<code>vim /etc/systemd/system/frps.service</code>命令新建文件并写入以下内容:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=frps daemon</span><br><span class="line">After=syslog.target  network.target</span><br><span class="line">Wants=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/home/frp_0.26.0_linux_amd64/frps -c /home/frp_0.26.0_linux_amd64/frps.ini</span><br><span class="line">Restart= always</span><br><span class="line">RestartSec=1min</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p><strong>注意<code>ExecStart</code>中要配置成自己的路径.</strong><br>然后使用<code>systemctl start|stop|restart frps</code>即可操作frps, 用<code>systemctl enable frps</code>即可将frps设置为开机启动。</p><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><h3 id="文件下载-1"><a href="#文件下载-1" class="headerlink" title="文件下载"></a>文件下载</h3><p>具有内网IP的电脑将作为客户端(frpc)，在releases页面下载<code>frp_0.16.0_windows_amd64.zip</code>解压</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/frp-win.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="编辑配置文件-1"><a href="#编辑配置文件-1" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><p>编辑frpc.ini为以下内容：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = X.X.X.X</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">[ssh]</span><br><span class="line"><span class="built_in">type</span> = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22</span><br><span class="line">remote_port = 6000</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ol><li>sever_addr配置为公网电脑的IP，server_port与frps.ini中的bind_port一致。</li><li>ssh为远程桌面的配置。</li></ol><h3 id="启动服务端-1"><a href="#启动服务端-1" class="headerlink" title="启动服务端"></a>启动服务端</h3><p>双击frpc.exe或者用命令 <code>frpc -c frpc.ini</code>即可启动客户端，如下图所示：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/frp-win-启动.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p><strong>注意：</strong>这时候很可能启动不了，一般情况是因为服务器端（linux）7000端口没开放：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看端口开放情况</span></span><br><span class="line">firewall-cmd --list-all</span><br><span class="line"><span class="comment"># 添加开放端口</span></span><br><span class="line">firewall-cmd --zone=public --add-port=7000/tcp --permanent</span><br><span class="line"><span class="comment"># 重启防火墙</span></span><br><span class="line">systemctl restart firewalld</span><br></pre></td></tr></table></figure><p>然后再执行<code>frpc -c frpc.ini</code>就可以正常启动连接了。</p><h3 id="设置开机启动和后台运行-1"><a href="#设置开机启动和后台运行-1" class="headerlink" title="设置开机启动和后台运行"></a>设置开机启动和后台运行</h3><p>同样的道理，我们也需要对客户端设置后台运行和开机自启。借助 <a href="https://github.com/kohsuke/winsw/releases" target="_blank" rel="noopener">winsw</a> 工具可以将frpc注册为windows系统中的服务。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/winsw.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>下载winsw最新版，为了方便将其重命名为winsw.exe, 将该文件和frpc.exe放在一起,</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/winsw2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后新建winsw.xml写入以下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>frp<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>frp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>用frp发布本地电脑网站到外网<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executable</span>&gt;</span>frpc<span class="tag">&lt;/<span class="name">executable</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">arguments</span>&gt;</span>-c frpc.ini<span class="tag">&lt;/<span class="name">arguments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logmode</span>&gt;</span>reset<span class="tag">&lt;/<span class="name">logmode</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure><p>下载winsw后，在window上安装 <a href="https://www.microsoft.com/zh-cn/download/confirmation.aspx?id=17718" target="_blank" rel="noopener">.net framework4</a> ，否则后面会出问题。（很重要）</p><p>然后使用<code>winsw install</code>和<code>winsw start</code>命令即可将frpc安装为系统服务。</p><p>win+r后通过<code>services.msc</code>进入到服务列表页面找到frp服务。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/services.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;数据准备：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;公网IP: X.X.X.
      
    
    </summary>
    
      <category term="内网穿透" scheme="/categories/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
    
      <category term="Linux" scheme="/tags/Linux/"/>
    
      <category term="frp" scheme="/tags/frp/"/>
    
      <category term="Windows" scheme="/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>CloudStack介绍</title>
    <link href="/2019/04/04/CloudStack%E4%BB%8B%E7%BB%8D/"/>
    <id>/2019/04/04/CloudStack介绍/</id>
    <published>2019-04-04T06:27:56.000Z</published>
    <updated>2019-04-04T06:30:02.241Z</updated>
    
    <content type="html"><![CDATA[<p>基本上，云计算只是一种把 IT 资源当作服务来提供的手段。几乎所有 IT 资源都可以作为云服务来提供：应用程序、计算能力、存储容量、联网、编程工具，以至于通信服务和协作工具。</p><p>云计算最早为 Google、Amazon 等其他扩建基础设施的大型互联网服务提供商所采用。于是产生一种架构：大规模扩展、水平分布的系统资源，抽象为虚拟 IT 服务，并作为持续配置、合用的资源进行管理。</p><p><strong>就最终用户而言</strong>，云计算意味着没有硬件购置成本、没有需要管理的软件许可证或升级、不需要雇佣新的员工或咨询人员、不需要租赁设施、没有任何种类的基建投资，而且还没有隐性成本。只是一种用仪表测量出来的、根据使用情况支付的订购费或固定的订购费。只是用您所需的量，而且只按使用量付费。</p><p>云计算结构图如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="D:/gitRepository/blog/source/_posts/img/%E4%BA%91%E8%AE%A1%E7%AE%97%E7%BB%93%E6%9E%84.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="基础设施当做服务（IaaS）"><a href="#基础设施当做服务（IaaS）" class="headerlink" title="基础设施当做服务（IaaS）"></a>基础设施当做服务（IaaS）</h3><p>基础设施当作服务 (IaaS) 处于最低层级，而且是一种作为标准化服务在网上提供基本存储和计算能力的手段。服务器、存储系统、交换机、路由器和其他系统协作 (例如，通过虚拟化技术) 处理特定类型的工作负载 — 从批处理到峰值负载期间的服务器/存储扩大。</p><p>最著名的商业示例是 Amazon Web 服务 (AWS)，其 EC2 和 S3 服务分别提供基本计算和存储服务。国内代表阿里云、腾讯云、百度云、金山云等。</p><p>优势：</p><ul><li>利用率更高 — 在虚拟化之前，企业数据中心的服务器和存储利用率一般平均不到 50% (事实上，通常利用率为 10% 到 15%)。通过虚拟化，可以把工作负载封装一并转移到空闲或使用不足的系统，这就意味着可以整合现有系统，因而可以延迟或避免购买更多服务器容量。</li><li>资源整合 — 虚拟化使得整合多个 IT 资源成为可能。除服务器和存储整合之外，虚拟化提供一个整合系统架构、应用程序基础设施、数据和数据库、接口、网络、桌面系统甚至业务流程，因而可以节约成本和提高效率。</li><li>节省电能/成本 — 运行企业级数据中心所需的电能不再无限制地使用，而成本呈螺旋式上升趋势。在服务器硬件上每花一美元，就会在电费上增加一美元 (包括服务器运行和散热方面的成本)。利用虚拟化进行整合使得降低总能耗和节约大量资金成为可能。</li><li>节约空间 — 服务器膨胀仍然是多数企业数据中心面临的一个严重问题，可扩大数据中心并不总是一个良好的选择，因为每增大一平方米空间，就会平均增加很多成本。虚拟化通过把多个虚拟系统整合到较少物理系统上，可以缓解空间压力。</li><li>灾难恢复 (Disaster recovery) /业务连续 (Business Continuity) — 虚拟化可提高总体服务级利用率，并提供灾难恢复解决方案新选项。</li></ul><h3 id="CloudStack-介绍"><a href="#CloudStack-介绍" class="headerlink" title="CloudStack 介绍"></a>CloudStack 介绍</h3><p>官网：<a href="http://cloudstack.apache.org/" target="_blank" rel="noopener">http://cloudstack.apache.org/</a></p><p>CloudStack是一个开源的具有高可用性及扩展性的云计算平台CloudStack 是一个开源的云操作系统，它可以帮助用户利用自己的硬件提供类似于Amazon EC2那样的公共云服务。CloudStack可以通过组织和协调用户的虚拟化资源，构建一个和谐的环境。</p><p>CloudStack是一个开源的具有高可用性及扩展性的云计算平台CloudStack 是一个开源的云操作系统，它可以帮助用户利用自己的硬件提供类似于Amazon EC2那样的公共云服务。CloudStack可以通过组织和协调用户的虚拟化资源，构建一个和谐的环境。</p><p>Cloudstack支持管理大部分主流的hypervisors，如KVM，XenServer，VMware，Oracle VM，Xen等。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="D:/gitRepository/blog/source/_posts/img/cloudstack.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>CloudStack 部署图如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="D:/gitRepository/blog/source/_posts/img/cloudstack%E9%83%A8%E7%BD%B2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p><strong>Zone：</strong>Zone 对应于现实中的一个数据中心，它是 CloudStack 中最大的一个单元。</p><p>即从包含关系上来说，一个 zone 包含多个 pod，一个 pod 包含多个 cluster，一个 cluster 包含多个 host。</p><p><strong>提供点（Pods）：</strong>一个提供点通常代表一个机架，机柜里面的主机在同一个子网，每个区域中必须包含一个或多个提供点，提供点中包含主机和主存储服务器， CloudStack 的内部管理通信配置一个预留 IP 地址范围。预留的 IP 范围对云中的每个区域来说必须唯一。</p><p><strong>集群（Clusters）：</strong>Cluster 是多个主机组成的一个集群。</p><p>​    同一个cluster中的主机有相同的硬件，相同的 Hypervisor，和共用同样的存储。同一个 cluster 中的虚拟机，可以实现无中断服务地从一个主机迁移到另外一个上。</p><p>​    集群由一个或多个宿主机和一个或多个主要存储服务器构成。集群的大小取决于下层虚拟机软件。大多数情况下基本无建议。当使用VMware时，每个VMware集群都被vCenter 服务器管理。管理员必须在本产品中登记vCenter。每个zone下可以有多个vCenter服务器。每个vCenter服务器可能管理多个VMware集群</p><p><strong>主机（Hosts）：</strong></p><p>Host 就是运行的虚拟机（VM）主机。宿主机就是个独立的计算机。宿主机运行来宾虚拟机并提供其相应的计算资源。每个宿主机都装有虚拟机软件来运行来宾虚拟机。比如一个开启了kvm支持的服务器，一个思杰XenServer服务器，或者一个ESXi服务器都可以作为宿主机。</p><p>宿主机在CloudStack部署中属于最小的组织单元。宿主机包含于集群中，集群又属于提供点，而区域中包含提供点（就是在逻辑概念上<code>zone&gt;pod&gt;cluster&gt;host</code>），新增的宿主机可以随时添加以提供更多资源给来宾虚拟机，CloudStack自动探测宿主机的cpu数量和内存资源。宿主机对终端用户不可见。终端用户不能决定他们的虚拟机被分配到哪台宿主机。</p><p><strong>CloudStack 中存在两种存储：</strong></p><ul><li>Primary storage：一级存储与 cluster 关联，它<code>为该 cluster 中的主机的全部虚拟机提供磁盘卷</code>。一个 cluster 至少有一个一级存储，且在部署时位置要临近主机以提供高性能。</li><li>Secondary storage：二级存储与 zone 关联，<code>它存储模板文件，ISO 镜像和磁盘卷快照</code>。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;基本上，云计算只是一种把 IT 资源当作服务来提供的手段。几乎所有 IT 资源都可以作为云服务来提供：应用程序、计算能力、存储容量、联网、编程工具，以至于通信服务和协作工具。&lt;/p&gt;
&lt;p&gt;云计算最早为 Google、Amazon 等其他扩建基础设施的大型互联网服务提供商所
      
    
    </summary>
    
      <category term="Linux" scheme="/categories/Linux/"/>
    
    
      <category term="CloudStack" scheme="/tags/CloudStack/"/>
    
      <category term="介绍" scheme="/tags/%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
  <entry>
    <title>搭建http服务器-nginx</title>
    <link href="/2019/04/04/%E6%90%AD%E5%BB%BAhttp%E6%9C%8D%E5%8A%A1%E5%99%A8-nginx/"/>
    <id>/2019/04/04/搭建http服务器-nginx/</id>
    <published>2019-04-04T03:49:55.000Z</published>
    <updated>2019-05-15T09:58:46.255Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装 nginx </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum  -y install nginx</span><br></pre></td></tr></table></figure><p>这一步可能会遇到<code>&quot;No package nginx available.&quot;</code>问题，解决方法如下：</p><h3 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h3><p><strong>问题描述：</strong>见下图</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nginx.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p><strong>问题原因：</strong></p><p>nginx位于第三方的yum源里面，而不在centos官方yum源里面</p><p><strong>解决方法（一）：</strong></p><p>安装epel(Extra Packages for Enterprise Linux)</p><p>去<a href="http://fedoraproject.org/wiki/EPEL" target="_blank" rel="noopener">epel网站</a>下载对应版本</p><p>我的系统是centos7.6，cpu是x86_64</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载epel</span></span><br><span class="line">wget https://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-7-11.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装epel</span></span><br><span class="line">rpm -ivh epel-release-7-11.noarch.rpm</span><br></pre></td></tr></table></figure><p>再次执行 <code>yum install nginx</code>,则会提示安装成功了</p><p><strong>解决方法（二）：</strong></p><p>出现这个的原因是因为本地yum源中没有我们想要的nginx，那么我们就需要创建一个<code>/etc/yum.repos.d/nginx.repo</code>的文件，新增一个yum源</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/yum.repos.d/nginx.repo</span><br><span class="line"></span><br><span class="line"><span class="comment">#在文件中写入以下内容：</span></span><br><span class="line">[nginx]</span><br><span class="line">name=nginx repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><p>退出保存后，再次执行 <code>yum install nginx</code>,则会提示安装成功了</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li>删除<code>/usr/share/nginx/html/</code>目录下的所有文件</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /usr/share/nginx/html/*</span><br></pre></td></tr></table></figure><ul><li>防火墙中加入允许80 端口访问</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 加入80端口</span></span><br><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br><span class="line"></span><br><span class="line"><span class="comment">## 附加：</span></span><br><span class="line"><span class="comment"># 显示防火墙应用列表</span></span><br><span class="line">firewall-cmd --list-all</span><br></pre></td></tr></table></figure><ul><li>重启防火墙</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart firewalld</span><br></pre></td></tr></table></figure><ul><li>编辑<code>/etc/nginx/nginx.conf</code>配置文件，加入如下信息（追加到末尾），使能够访问目录</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">autoindex on;<span class="comment"># 显示目录</span></span><br><span class="line">autoindex_exact_size on;<span class="comment"># 显示文件大小</span></span><br><span class="line">autoindex_localtime on;<span class="comment"># 显示文件时间</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nginx%E9%85%8D%E7%BD%AE.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><ul><li>启动nginx</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx</span><br><span class="line">systemctl <span class="built_in">enable</span> nginx</span><br></pre></td></tr></table></figure><h2 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h2><p>将镜像上传到<code>/usr/share/nginx/html</code>目录，在浏览器访问可以看见如下图所示的文件信息，点击可下载</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nginx2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="附加"><a href="#附加" class="headerlink" title="附加"></a>附加</h2><h3 id="Nginx-显示中文乱码解决"><a href="#Nginx-显示中文乱码解决" class="headerlink" title="Nginx 显示中文乱码解决"></a>Nginx 显示中文乱码解决</h3><p>需要修改nginx的server的配置内容，增加一行：<code>charset utf-8;</code></p><p>情如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">upstream you.domainName.com &#123;</span><br><span class="line">        server 127.0.0.1:8081;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">server &#123;</span><br><span class="line">listen    80;</span><br><span class="line">server_name  you.domainName.com;</span><br><span class="line">    charset utf-8;</span><br><span class="line">    location /examples &#123;</span><br><span class="line">    <span class="built_in">return</span> 403;</span><br><span class="line">    &#125;</span><br><span class="line">    ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启Nginx服务(<code>nginx -s reload</code>)。最后，刷新，一切正常！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;安装 nginx &lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutte
      
    
    </summary>
    
      <category term="Linux" scheme="/categories/Linux/"/>
    
    
      <category term="ngnix" scheme="/tags/ngnix/"/>
    
  </entry>
  
  <entry>
    <title>CloudStack快速安装指南</title>
    <link href="/2019/04/03/CloudStack%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E5%BA%94%E7%94%A8%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/"/>
    <id>/2019/04/03/CloudStack安装配置应用操作手册/</id>
    <published>2019-04-03T09:32:32.000Z</published>
    <updated>2019-04-18T08:31:35.068Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CloudStack介绍"><a href="#CloudStack介绍" class="headerlink" title="CloudStack介绍"></a>CloudStack介绍</h2><p>介绍见： <a href="CloudStack介绍">CloudStack介绍</a></p><h2 id="CloudStack安装"><a href="#CloudStack安装" class="headerlink" title="CloudStack安装"></a>CloudStack安装</h2><h3 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h3><ol><li>至少两台（<code>cloudstack-management</code>和<code>cloudstack-agent</code>）支持并启用了硬件虚拟化的计算机。</li><li>一个<a href="http://mirrors.kernel.org/centos/7/isos/x86_64/" target="_blank" rel="noopener">CentOS的7.5 x86_64的ISO安装文件</a></li><li>网关位于xxx.xxx.xxx.1的A / 24网络，该网络上不应该有DHCP，运行CloudStack的计算机都不会有动态地址。同样，这是为了简单起见。</li></ol><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>一套基本的CloudStack环境，包括一台CloudStack管理端（cloudstack-management），一个mysql数据库，若干台支持KVM虚拟化的计算节点（cloudstack-agent）以及一台用来做为二级存储的nfs服务器：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/cloudstack结构.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在实际生产中，mysql数据库和管理端都可能配备多台作为高可用，计算节点一般也是配置较高的物理服务器，但在实验环境，我们可以采用<code>最小化安装模式</code>，把mysql,nfs和管理端安装在同一台虚拟机上，使用一台支持KVM虚拟化的虚拟机用来作为计算节点</p><h4 id="我们的环境"><a href="#我们的环境" class="headerlink" title="我们的环境"></a>我们的环境</h4><p><strong>本文使用两台虚拟机来搭建我们的环境</strong>，nfs,mysql和管理端都装在同一台虚拟机上，cloudstack-agent安装在一台开启了虚拟化支持的虚拟机上，部署架构如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/我们的cloudstack结构.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><ul><li>两台服务器的IP是：<ul><li>CloudStack管理端（cloudstack-management）：172.18.193.1</li><li>KVM虚拟化的计算节点（cloudstack-agent）：172.18.193.2</li></ul></li></ul><h3 id="CloudStack管理端"><a href="#CloudStack管理端" class="headerlink" title="CloudStack管理端"></a>CloudStack管理端</h3><h4 id="升级yum"><a href="#升级yum" class="headerlink" title="升级yum"></a>升级yum</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y upgrade</span><br></pre></td></tr></table></figure><h4 id="主机名"><a href="#主机名" class="headerlink" title="主机名"></a>主机名</h4><p>CloudStack要求正确设置主机名。如果您在安装中使用了默认选项，那么您的主机名当前设置为localhost.localdomain。为了测试这个，我们将运行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname --fqdn</span><br></pre></td></tr></table></figure><p>此时它可能会返回：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost</span><br></pre></td></tr></table></figure><p>要纠正这种情况 - 我们将通过编辑<code>/etc/hosts</code>文件来设置主机名，以便它遵循与此示例类似的格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1 localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">172.18.193.1    mng.cloud.priv</span><br><span class="line">172.18.193.1    mng</span><br><span class="line">172.18.193.2    cloud1.cloud.priv</span><br><span class="line">172.18.193.2    cld</span><br><span class="line">172.18.0.1      gw</span><br><span class="line">61.139.2.69     dns</span><br></pre></td></tr></table></figure><p>修改完该文件后，重新启动网络：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>现在使用<code>hostname -fqdn</code>命令重新检查并确保它返回FQDN响应</p><h4 id="设置SELinux"><a href="#设置SELinux" class="headerlink" title="设置SELinux"></a>设置SELinux</h4><p>目前，要使CloudStack正常工作，SELinux必须设置为允许。我们希望为将来的引导配置它，并在当前运行的系统中对其进行修改。</p><p>要在运行的系统中将SELinux配置为允许，我们需要运行以下命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br></pre></td></tr></table></figure><p>为了确保它保持在该状态，我们需要配置文件<code>/etc/selinux/config</code>以反映许可状态，如下例所示：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This file controls the state of SELinux on the system.</span></span><br><span class="line"><span class="comment"># SELINUX= can take one of these three values:</span></span><br><span class="line"><span class="comment"># enforcing - SELinux security policy is enforced.</span></span><br><span class="line"><span class="comment"># permissive - SELinux prints warnings instead of enforcing.</span></span><br><span class="line"><span class="comment"># disabled - No SELinux policy is loaded.</span></span><br><span class="line">SELINUX=permissive</span><br><span class="line"><span class="comment"># SELINUXTYPE= can take one of these two values:</span></span><br><span class="line"><span class="comment"># targeted - Targeted processes are protected,</span></span><br><span class="line"><span class="comment"># mls - Multi Level Security protection.</span></span><br><span class="line">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure><h4 id="NTP安装"><a href="#NTP安装" class="headerlink" title="NTP安装"></a>NTP安装</h4><p>NTP配置是保持云服务器中所有时钟同步的必要条件。但是，默认情况下不安装NTP。所以我们将在此阶段安装和配置NTP。安装完成如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install ntp</span><br></pre></td></tr></table></figure><p>实际的默认配置适用于我们的目的，因此我们只需要启用它并将其设置为在启动时启动，如下所示：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> ntpd</span><br><span class="line">systemctl start ntpd</span><br></pre></td></tr></table></figure><h4 id="配置CloudStack包存储库"><a href="#配置CloudStack包存储库" class="headerlink" title="配置CloudStack包存储库"></a>配置CloudStack包存储库</h4><p>我们需要将机器配置为使用CloudStack软件包存储库。</p><p>要添加CloudStack存储库，请创建<code>/etc/yum.repos.d/cloudstack.repo</code>并插入以下信息。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[cloudstack]</span><br><span class="line">name=cloudstack</span><br><span class="line">baseurl=http://download.cloudstack.org/centos/7/4.11/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure><h4 id="NFS-安装"><a href="#NFS-安装" class="headerlink" title="NFS 安装"></a>NFS 安装</h4><p>我们的配置将使用NFS进行主存储和二级存储。我们将继续为此目的设置两个NFS共享。我们首先安装nfs-utils。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install nfs-utils</span><br></pre></td></tr></table></figure><p>我们现在需要配置NFS以提供两个不同的共享。这在<code>/etc/exports</code>文件中相对容易处理。您应该确保它具有以下内容：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/data/primary *(rw,async,no_root_squash,no_subtree_check)</span><br><span class="line">/data/secondary *(rw,async,no_root_squash,no_subtree_check)</span><br></pre></td></tr></table></figure><p>您将注意到我们在系统上指定了两个目录（尚未存在）。我们将继续使用以下命令创建这些目录并在其上适当地设置权限：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/primary</span><br><span class="line">mkdir /data/secondary</span><br></pre></td></tr></table></figure><p>CentOS 7.x版本默认使用NFSv4。NFSv4要求域设置在所有客户端上匹配。在我们的示例中，域是cloud.priv，因此请确保取消注释<code>/etc/idmapd.conf</code>中的域设置并设置如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Domain = cloud.priv</span><br></pre></td></tr></table></figure><p>现在，您需要在<code>/etc/sysconfig/nfs</code>文件的底部添加配置值（或者仅取消注释并设置它们）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">LOCKD_TCPPORT=32803</span><br><span class="line">LOCKD_UDPPORT=32769</span><br><span class="line">MOUNTD_PORT=892</span><br><span class="line">RQUOTAD_PORT=875</span><br><span class="line">STATD_PORT=662</span><br><span class="line">STATD_OUTGOING_PORT=2020</span><br></pre></td></tr></table></figure><p>现在我们需要禁用防火墙，这样它就不会阻止连接</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure><p>我们现在需要配置nfs服务以在启动时启动，并通过执行以下命令实际在主机上启动它：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> rpcbind</span><br><span class="line">systemctl <span class="built_in">enable</span> nfs</span><br><span class="line">systemctl start rpcbind</span><br><span class="line">systemctl start nfs</span><br></pre></td></tr></table></figure><p>测试nfs服务端是否能访问</p><p>在 agent端执行<code>showmount -e 172.18.193.1</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/showmount.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="管理服务器安装"><a href="#管理服务器安装" class="headerlink" title="管理服务器安装"></a>管理服务器安装</h4><h5 id="数据库安装和配置"><a href="#数据库安装和配置" class="headerlink" title="数据库安装和配置"></a>数据库安装和配置</h5><p>我们将首先安装MySQL并配置一些选项，以确保它与CloudStack一起运行良好。</p><p>首先，由于CentOS 7不再提供MySQL二进制文件，我们需要添加一个存储库：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">yum -y update</span><br></pre></td></tr></table></figure><p>通过运行以下命令进行安装：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql-server</span><br></pre></td></tr></table></figure><p>现在安装了MySQL，我们需要对/etc/my.cnf进行一些配置更改。具体来说，我们需要在[mysqld]部分添加以下选项：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">innodb_rollback_on_timeout=1</span><br><span class="line">innodb_lock_wait_timeout=600</span><br><span class="line">max_connections=350</span><br><span class="line"><span class="built_in">log</span>-bin=mysql-bin</span><br><span class="line">binlog-format = <span class="string">'ROW'</span></span><br></pre></td></tr></table></figure><p>现在MySQL已正确配置，我们可以启动它并将其配置为在启动时启动，如下所示：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> mysqld</span><br><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><h5 id="MySQL连接器安装"><a href="#MySQL连接器安装" class="headerlink" title="MySQL连接器安装"></a>MySQL连接器安装</h5><p>使用官方MySQL软件包存储库安装Python MySQL连接器。<code>/etc/yum.repos.d/mysql.repo</code>使用以下内容创建文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[mysql-connectors-community]</span><br><span class="line">name=MySQL Community connectors</span><br><span class="line">baseurl=http://repo.mysql.com/yum/mysql-connectors-community/el/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br></pre></td></tr></table></figure><p>从MySQL导入GPG公钥：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm --import http://repo.mysql.com/RPM-GPG-KEY-mysql</span><br></pre></td></tr></table></figure><p>安装mysql-connector</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mysql-connector-python</span><br></pre></td></tr></table></figure><h5 id="安装管理服务器"><a href="#安装管理服务器" class="headerlink" title="安装管理服务器"></a>安装管理服务器</h5><p>我们现在要安装管理服务器。我们通过执行以下命令来做到这一点：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install cloudstack-management</span><br></pre></td></tr></table></figure><p>当<code>yum -y install cloudstack-management</code>命令不好使的时候，操作如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.cloudstack.org/centos/7/4.11/cloudstack-management-4.11.2.0-1.el7.centos.x86_64.rpm</span><br><span class="line">wget http://download.cloudstack.org/centos/7/4.11/cloudstack-common-4.11.2.0-1.el7.centos.x86_64.rpm</span><br><span class="line"></span><br><span class="line">yum localinstall cloudstack-management-4.11.2.0-1.el7.centos.x86_64.rpm cloudstack-common-4.11.2.0-1.el7.centos.x86_64.rpm</span><br></pre></td></tr></table></figure><p>安装了应用程序本身后，我们现在可以设置数据库，我们将使用以下命令和选项执行此操作：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudstack-setup-databases cloud:password@localhost --deploy-as=root</span><br></pre></td></tr></table></figure><p>完成此过程后，您应该看到“CloudStack has successfully initialized the database.”之类的消息。</p><p>既然已经创建了数据库，我们可以通过发出以下命令来设置管理服务器的最后一步：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudstack-setup-management</span><br></pre></td></tr></table></figure><h5 id="系统模板设置"><a href="#系统模板设置" class="headerlink" title="系统模板设置"></a>系统模板设置</h5><p>CloudStack使用许多系统VM来提供访问虚拟机控制台，提供各种网络服务以及管理存储的各个方面的功能。当我们引导您的云时，此步骤将获取准备部署的系统映像。</p><p>现在我们需要下载系统VM模板并将其部署到我们刚刚挂载的共享。管理服务器包括用于正确操纵系统VMs映像的脚本。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/cloudstack-common/scripts/storage/secondary/cloud-install-sys-tmplt -m /data/secondary -u </span><br><span class="line">http://download.cloudstack.org/systemvm/4.11/systemvmtemplate-4.11.2-kvm.qcow2.bz2 -h kvm -F</span><br></pre></td></tr></table></figure><p>这就结束了我们的管理服务器的安装</p><h3 id="CloudStack计算节点"><a href="#CloudStack计算节点" class="headerlink" title="CloudStack计算节点"></a>CloudStack计算节点</h3><h4 id="升级yum-1"><a href="#升级yum-1" class="headerlink" title="升级yum"></a>升级yum</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y upgrade</span><br></pre></td></tr></table></figure><h4 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h4><p>要将其配置为在您的环境中工作。由于我们指定在此环境中不存在DHCP服务器，因此我们将手动配置您的网络接口。</p><p>在继续之前，请确保安装了“brctl”并且可用：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install bridge-utils -y</span><br></pre></td></tr></table></figure><p>通过控制台连接，您应该以root用户身份登录。我们将首先创建Cloudstack将用于网络的桥梁。创建并打开<code>/etc/sysconfig/network-scripts/ifcfg-cloudbr0</code>并添加以下设置：</p><blockquote><p>IP寻址 - 在本文档中，我们假设您将拥有一个用于CloudStack实施的/24网络。这可以是任何RFC 1918网络。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=cloudbr0</span><br><span class="line">TYPE=Bridge</span><br><span class="line">ONBOOT=yes</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">IPV6INIT=no</span><br><span class="line">IPV6_AUTOCONF=no</span><br><span class="line">DELAY=5</span><br><span class="line">IPADDR=172.18.193.2</span><br><span class="line">PREFIX=16</span><br><span class="line">GATEWAY=172.18.0.1</span><br><span class="line">DNS1=61.139.2.69</span><br><span class="line">STP=yes</span><br></pre></td></tr></table></figure><p>保存配置并退出。然后我们将编辑界面，以便它使用这个桥。</p><p>打开您的交互接口的配置文件并按如下所示进行配置：</p><blockquote><p>接口名称仅用作示例。将em1替换为您的默认以太网接口名称。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=em1</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">ONBOOT=yes</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">BRIDGE=cloudbr0</span><br><span class="line">HWADDR=80:18:44:ea:71:84</span><br></pre></td></tr></table></figure><blockquote><p>您不应使用我们的示例中的硬件地址（也称为MAC地址或UUID）进行配置。它是特定于网络接口的，因此您应该保留UUID指令中已提供的地址。</p></blockquote><p>现在我们已经正确设置了配置文件，我们需要运行一些命令来启动网络：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> network</span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>请注意，如果您通过SSH连接，则会暂时（约5秒，具体取决于硬件）断开连接。如果断开连接，则配置中存在错误。</p><h4 id="主机名-1"><a href="#主机名-1" class="headerlink" title="主机名"></a>主机名</h4><p>CloudStack要求正确设置主机名。如果您在安装中使用了默认选项，那么您的主机名当前设置为localhost.localdomain。为了测试这个，我们将运行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname --fqdn</span><br></pre></td></tr></table></figure><p>此时它可能会返回：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost</span><br></pre></td></tr></table></figure><p>要纠正这种情况 - 我们将通过编辑<code>/etc/hosts</code>文件来设置主机名，以便它遵循与此示例类似的格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1 localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">172.18.193.1    mng.cloud.priv</span><br><span class="line">172.18.193.1    mng</span><br><span class="line">172.18.193.2    cloud1.cloud.priv</span><br><span class="line">172.18.193.2    cld</span><br><span class="line">172.18.0.1      gw</span><br><span class="line">61.139.2.69     dns</span><br></pre></td></tr></table></figure><p>修改完该文件后，重新启动网络：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>现在使用<code>hostname -fqdn</code>命令重新检查并确保它返回FQDN响应</p><h4 id="设置SELinux-1"><a href="#设置SELinux-1" class="headerlink" title="设置SELinux"></a>设置SELinux</h4><p>目前，要使CloudStack正常工作，SELinux必须设置为允许。我们希望为将来的引导配置它，并在当前运行的系统中对其进行修改。</p><p>要在运行的系统中将SELinux配置为允许，我们需要运行以下命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br></pre></td></tr></table></figure><p>为了确保它保持在该状态，我们需要配置文件<code>/etc/selinux/config</code>以反映许可状态，如下例所示：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This file controls the state of SELinux on the system.</span></span><br><span class="line"><span class="comment"># SELINUX= can take one of these three values:</span></span><br><span class="line"><span class="comment"># enforcing - SELinux security policy is enforced.</span></span><br><span class="line"><span class="comment"># permissive - SELinux prints warnings instead of enforcing.</span></span><br><span class="line"><span class="comment"># disabled - No SELinux policy is loaded.</span></span><br><span class="line">SELINUX=permissive</span><br><span class="line"><span class="comment"># SELINUXTYPE= can take one of these two values:</span></span><br><span class="line"><span class="comment"># targeted - Targeted processes are protected,</span></span><br><span class="line"><span class="comment"># mls - Multi Level Security protection.</span></span><br><span class="line">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure><h4 id="NTP安装-1"><a href="#NTP安装-1" class="headerlink" title="NTP安装"></a>NTP安装</h4><p>NTP配置是保持云服务器中所有时钟同步的必要条件。但是，默认情况下不安装NTP。所以我们将在此阶段安装和配置NTP。安装完成如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install ntp</span><br></pre></td></tr></table></figure><p>实际的默认配置适用于我们的目的，因此我们只需要启用它并将其设置为在启动时启动，如下所示：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> ntpd</span><br><span class="line">systemctl start ntpd</span><br></pre></td></tr></table></figure><h4 id="KVM设置和安装"><a href="#KVM设置和安装" class="headerlink" title="KVM设置和安装"></a>KVM设置和安装</h4><p>KVM是我们将要使用的虚拟机管理程序 - 我们将恢复已在虚拟机管理程序主机上完成的初始设置并涵盖代理软件的安装，您可以使用相同的步骤将其他KVM节点添加到您的CloudStack环境中。</p><h5 id="安装节点服务器"><a href="#安装节点服务器" class="headerlink" title="安装节点服务器"></a>安装节点服务器</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install cloudstack-agent</span><br></pre></td></tr></table></figure><p>当<code>yum -y install cloudstack-agent</code>命令不好使的时候，操作如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.cloudstack.org/centos/7/4.11/cloudstack-agent-4.11.2.0-1.el7.centos.x86_64.rpm</span><br><span class="line">wget http://download.cloudstack.org/centos/7/4.11/cloudstack-common-4.11.2.0-1.el7.centos.x86_64.rpm</span><br><span class="line"></span><br><span class="line">yum localinstall cloudstack-agent-4.11.2.0-1.el7.centos.x86_64.rpm cloudstack-common-4.11.2.0-1.el7.centos.x86_64.rpm</span><br></pre></td></tr></table></figure><p>我们有两个不同的KVM部分来配置，libvirt和QEMU。</p><h5 id="QEMU配置"><a href="#QEMU配置" class="headerlink" title="QEMU配置"></a>QEMU配置</h5><p>KVM配置只在一个项目上相对简单。我们需要编辑QEMU VNC配置。这是通过编辑/etc/libvirt/qemu.conf并确保以下行存在并取消注释来完成的。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vnc_listen=0.0.0.0</span><br></pre></td></tr></table></figure><h5 id="Libvirt配置"><a href="#Libvirt配置" class="headerlink" title="Libvirt配置"></a>Libvirt配置</h5><p>CloudStack使用libvirt来管理虚拟机。因此，正确配置libvirt至关重要。Libvirt是云代理的依赖，应该已经安装。</p><ol><li><p>为了实现实时迁移，libvirt必须监听不安全的TCP连接。我们还需要关闭libvirts尝试使用多播DNS广告。这两个设置都在<code>/etc/libvirt/libvirtd.conf</code>中</p><p>设置以下参数：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">listen_tls = 0</span><br><span class="line">listen_tcp = 1</span><br><span class="line">tcp_port = <span class="string">"16509"</span></span><br><span class="line">auth_tcp = <span class="string">"none"</span></span><br><span class="line">mdns_adv = 0</span><br></pre></td></tr></table></figure></li><li><p>在libvirtd.conf中打开“listen_tcp”是不够的，我们还要更改参数，我们还需要修改<code>/etc/sysconfig/libvirtd</code>：</p><p>取消注释以下行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LIBVIRTD_ARGS=&quot;--listen&quot;</span><br></pre></td></tr></table></figure></li><li><p>重启libvirt</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart libvirtd</span><br></pre></td></tr></table></figure></li></ol><h5 id="KVM配置完成"><a href="#KVM配置完成" class="headerlink" title="KVM配置完成"></a>KVM配置完成</h5><ul><li><p>为了完整起见，您应该检查KVM在您的计算机上是否正常运行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep kvm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">kvm_intel             183705  47 </span><br><span class="line">kvm                   615914  1 kvm_intel</span><br><span class="line">irqbypass              13503  37 kvm</span><br></pre></td></tr></table></figure></li></ul><p>这就结束了我们对KVM的安装和配置，现在我们将使用CloudStack UI来实际配置我们的云。</p><h2 id="CloudStack系统配置"><a href="#CloudStack系统配置" class="headerlink" title="CloudStack系统配置"></a>CloudStack系统配置</h2><p>访问地址：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://&lt;management-server-ip-address&gt;:8080/client</span><br><span class="line"><span class="comment"># 即：http://172.18.193.1:8080/client</span></span><br></pre></td></tr></table></figure><p>如果管理服务器是全新的安装,那么会出现一个安装向导。在稍后的访问中，你将看到一个登录界面,，你需要通过用户名和密码登入来查看你的仪表盘。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用户名 -&gt; 你账号的用户ID。默认用户名是admin。</span><br><span class="line">密码 -&gt; 用户ID对应的密码。默认用户名的密码是password。</span><br><span class="line">域 -&gt; 如果你是root用户，此处留空即可。</span><br></pre></td></tr></table></figure><p>CloudStack用户界面帮助云基础设施的用户查看和使用他们的云资源，包括虚拟机、模板和ISO、数据卷和快照、宾客网络，以及IP 地址。如果用户是一个或多个CloudStack项目的成员或管理员，用户界面能提供一个面向项目的视图。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/配置导向.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>选择”我以前是用过CloudStack，跳过此指南”按钮</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/资源域.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>选择“资源域”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/添加资源域.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>选择“添加资源域”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/资源域-基本.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>选择“基本”网络，点击”下一步”<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/资源域-配置区域.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置内容如下:</span></span><br><span class="line">名称：Zone1</span><br><span class="line">IPV4 DNS1：61.139.2.69</span><br><span class="line">内部 DNS1：</span><br><span class="line">虚拟机选择“KVM”</span><br><span class="line">网络方案默认</span><br><span class="line"><span class="comment"># 这些内容包括下面的填写仅为参考值。可根据实际情况进行修改</span></span><br></pre></td></tr></table></figure><p>点击”下一步”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/资源域-配置网络.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置内容如下:</span></span><br><span class="line">物理网络名称:默认 <span class="comment">#也可键入cloudstack-management实际网络名称</span></span><br></pre></td></tr></table></figure><p>点击”下一步”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/资源域-提供点.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置内容如下:</span></span><br><span class="line">提供名称：Pod1</span><br><span class="line">预留的系统网关：172.18.0.1</span><br><span class="line">预留的系统网络掩码：255.255.0.0</span><br><span class="line">起始预留系统IP：172.18.193.3</span><br><span class="line">结束预留系统IP：172.18.193.254</span><br></pre></td></tr></table></figure><p>点击”下一步”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/资源域-来宾流量.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置内容如下:</span></span><br><span class="line">来宾网关：172.18.0.1</span><br><span class="line">来宾网络掩码：255.255.0.0</span><br><span class="line">来宾起始IP:172.18.194.1</span><br><span class="line">来宾结束IP：172.18.194.254</span><br></pre></td></tr></table></figure><p>点击”下一步”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/资源域-集群.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置内容如下:</span></span><br><span class="line">虚拟机管理程序：KVM</span><br><span class="line">集群名称：Cluster</span><br></pre></td></tr></table></figure><p>点击”下一步”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/资源域-主机.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置内容如下:</span></span><br><span class="line">主机名称：172.18.193.2    <span class="comment">#cloudstack-agent计算节点地址</span></span><br><span class="line">用户名：root              <span class="comment">#cloudstack-agent计算节点用户名</span></span><br><span class="line">密码：password           <span class="comment">#cloudstack-agent计算节点密码</span></span><br><span class="line">主机标签：可不填</span><br></pre></td></tr></table></figure><p>点击”下一步”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/资源域-主存储.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置内容如下:</span></span><br><span class="line">名称：primary<span class="comment">#不是固定的，自己根据需要进行区分即可</span></span><br><span class="line">范围：选择群集</span><br><span class="line">协议：选择nfs</span><br><span class="line">服务器：172.18.193.1</span><br><span class="line">路径：/data/primary<span class="comment">#根据安装时的配置填写</span></span><br><span class="line">存储路径：可不填</span><br></pre></td></tr></table></figure><p>点击”下一步”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/资源域-二级存储.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置内容如下:</span></span><br><span class="line">提供程序：选择NFS</span><br><span class="line">名称：secondary<span class="comment">#不是固定的，自己根据需要进行区分即可</span></span><br><span class="line">服务器：172.18.193.1</span><br><span class="line">路径：/data/secondary<span class="comment">#根据安装时的配置填写</span></span><br></pre></td></tr></table></figure><p>点击”下一步”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/启动.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>点击“启动资源域”</p><p>成功后，先不启动资源域，我们可以先看下基础架构</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/基础架构.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>此时系统VM为0</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/启动资源域.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>资源启动成功后，系统VM会出现2台</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/基础架构-系统vm.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/系统vm.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>系统VM是不同于主机上创建的普通虚拟机的，他们是CloudStack云平台自带的用于<code>完成自身的一些任务的虚拟机</code>。</p><ul><li><strong>Secondary Storage VM：</strong>简称为SSVM，用于管理二级存储的相关操作，如模板跟镜像文件的上传与下载，快照，volumes的存放，第一次创建虚拟机时从二级存储拷贝模板到一级存储并且自动创建快照，每一个资源域可以有多个SSVM，当SSVM被删除或停止，它会自动被重建并启动。</li><li><strong>Console Proxy VM：</strong>用于在web 界面上展示控制台。</li></ul><p>通过<code>查看控制台</code>访问里面的虚拟机</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/系统vm-查看控制台.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="CloudStack-虚拟机实例"><a href="#CloudStack-虚拟机实例" class="headerlink" title="CloudStack 虚拟机实例"></a>CloudStack 虚拟机实例</h2><h3 id="虚拟机实例"><a href="#虚拟机实例" class="headerlink" title="虚拟机实例"></a>虚拟机实例</h3><p>默认的模板并没有被下载</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/模板.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>修改全局设置<code>secstorage.allowed.internal.sites</code>设置 ，二级存储ISO镜像和模板可以下载，IP网段</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/secs.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>重启服务<code>systemctl restart cloudstack-management</code></p><h3 id="搭建http服务器-nginx"><a href="#搭建http服务器-nginx" class="headerlink" title="搭建http服务器-nginx"></a>搭建http服务器-nginx</h3><p><strong>目的：</strong>注册ISO时需要填镜像的url，实时下载镜像，外网或者网速不是很好下载会很慢甚至下载失败，故搭建自己的http服务器以便在内网下载镜像，这样速度会快很多。</p><p><strong>注 ：在<code>cloudstack-management管理服务器节点</code>搭建nginx</strong> </p><p>操作教程见：<a href="搭建http服务器-nginx">搭建http服务器-nginx</a></p><h3 id="制作模板"><a href="#制作模板" class="headerlink" title="制作模板"></a>制作模板</h3><h4 id="注册ISO"><a href="#注册ISO" class="headerlink" title="注册ISO"></a>注册ISO</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/iso-注册.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/iso注册.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/添加实例.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/添加实例2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>接下来按步骤走，就可以创建出第一个虚拟机了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CloudStack介绍&quot;&gt;&lt;a href=&quot;#CloudStack介绍&quot; class=&quot;headerlink&quot; title=&quot;CloudStack介绍&quot;&gt;&lt;/a&gt;CloudStack介绍&lt;/h2&gt;&lt;p&gt;介绍见： &lt;a href=&quot;CloudStack介绍&quot;&gt;Cl
      
    
    </summary>
    
      <category term="Linux" scheme="/categories/Linux/"/>
    
    
      <category term="CloudStack" scheme="/tags/CloudStack/"/>
    
      <category term="虚拟机分配" scheme="/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%88%86%E9%85%8D/"/>
    
      <category term="安装指南" scheme="/tags/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/"/>
    
  </entry>
  
  <entry>
    <title>Java8 实现下载网页的完整代码</title>
    <link href="/2019/03/12/Java8-%E5%AE%9E%E7%8E%B0%E4%B8%8B%E8%BD%BD%E7%BD%91%E9%A1%B5%E7%9A%84%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81/"/>
    <id>/2019/03/12/Java8-实现下载网页的完整代码/</id>
    <published>2019-03-12T07:56:01.000Z</published>
    <updated>2019-03-12T08:22:42.205Z</updated>
    
    <content type="html"><![CDATA[<p>java8 实现网页下载，大致分为4步，分别是:给定目标网页链接-&gt;与目标主机建立连接-&gt;读入网页文件流-&gt;写入本地文件 。会用到java io 和 java net库。程序代码如下，留有注释。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.MalformedURLException;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">new</span> test().downloadPage();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">downloadPage</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 目标网页链接</span></span><br><span class="line">        String url = <span class="string">"https://hexo.io/zh-cn/"</span>;</span><br><span class="line">        String inputLine = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            URL pageUrl = <span class="keyword">new</span> URL(url);</span><br><span class="line">            BufferedReader br = <span class="keyword">new</span> BufferedReader(</span><br><span class="line">                <span class="keyword">new</span> InputStreamReader(pageUrl.openStream(), <span class="string">"utf-8"</span>));</span><br><span class="line">            <span class="comment">//程序文件目录建目录 download，用于存放下载的网页</span></span><br><span class="line">            File file = <span class="keyword">new</span> File(<span class="string">"D:\\Test\\maliang\\index.html"</span>); </span><br><span class="line">            FileOutputStream out = <span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line">            OutputStreamWriter write = <span class="keyword">new</span> OutputStreamWriter(out, <span class="string">"utf-8"</span>);</span><br><span class="line">            <span class="comment">// 将输入流读入到变量中，再写入到文件</span></span><br><span class="line">            <span class="keyword">while</span> ((inputLine = br.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">                write.write(inputLine);</span><br><span class="line">                System.out.println(inputLine);</span><br><span class="line">            &#125;</span><br><span class="line">            br.close();</span><br><span class="line">            write.close();</span><br><span class="line">            System.err.println(<span class="string">"下载完毕!"</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (MalformedURLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> url;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;java8 实现网页下载，大致分为4步，分别是:给定目标网页链接-&amp;gt;与目标主机建立连接-&amp;gt;读入网页文件流-&amp;gt;写入本地文件 。会用到java io 和 java net库。程序代码如下，留有注释。&lt;/p&gt;
&lt;figure class=&quot;highlight j
      
    
    </summary>
    
      <category term="Java" scheme="/categories/Java/"/>
    
    
      <category term="Java8" scheme="/tags/Java8/"/>
    
      <category term="下载网页的完整代码" scheme="/tags/%E4%B8%8B%E8%BD%BD%E7%BD%91%E9%A1%B5%E7%9A%84%E5%AE%8C%E6%95%B4%E4%BB%A3%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>Linux服务器上搭建svn服务器</title>
    <link href="/2019/02/15/Linux%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8A%E6%90%AD%E5%BB%BAsvn%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>/2019/02/15/Linux服务器上搭建svn服务器/</id>
    <published>2019-02-15T03:31:10.000Z</published>
    <updated>2019-02-23T08:31:38.515Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>项目开发中需要版本控制，而我们经常使用的是在windows系统上搭建svn服务器，下面介绍在Linux系统（CentOS 7.3.1611）上搭建svn服务器。</p><h2 id="使用yum安装svn"><a href="#使用yum安装svn" class="headerlink" title="使用yum安装svn"></a>使用yum安装svn</h2><p>使用yum安装svn，命令如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install subversion</span><br></pre></td></tr></table></figure><p>安装完成之后，验证svn安装是否成功</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svn <span class="built_in">help</span></span><br></pre></td></tr></table></figure><h2 id="新建仓库目录"><a href="#新建仓库目录" class="headerlink" title="新建仓库目录"></a>新建仓库目录</h2><p>在/opt目录下面创建一个svn目录，用来作为svn存储目录，命令如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir  /opt/svn</span><br></pre></td></tr></table></figure><h2 id="创建一个测试仓库"><a href="#创建一个测试仓库" class="headerlink" title="创建一个测试仓库"></a>创建一个测试仓库</h2><p>执行如下命令，创建一个仓库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svnadmin create /opt/svn/<span class="built_in">test</span>/</span><br></pre></td></tr></table></figure><p>进入仓库目录下，查看仓库的文件，命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /opt/svn/<span class="built_in">test</span>/ <span class="comment">#进入仓库目录</span></span><br><span class="line">ls                <span class="comment">#展示仓库文件</span></span><br></pre></td></tr></table></figure><p>关于仓库文件的说明：</p><blockquote><p>hooks目录：放置hook脚步文件的目录<br>locks目录：用来放置subversion的db锁文件和db_logs锁文件的目录，用来追踪存取文件库的客户端<br>format目录：是一个文本文件，里边只放了一个整数，表示当前文件库配置的版本号<br>conf目录：是这个仓库配置文件（仓库用户访问账户，权限）</p></blockquote><h2 id="配置SVN服务的配置文件svnserve-conf"><a href="#配置SVN服务的配置文件svnserve-conf" class="headerlink" title="配置SVN服务的配置文件svnserve.conf"></a>配置SVN服务的配置文件svnserve.conf</h2><p>进入到conf文件夹下面，编辑svnserve.conf文件，命令如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> conf</span><br><span class="line">ls</span><br><span class="line">vim svnserver.conf</span><br></pre></td></tr></table></figure><p>在svnserver.conf文件中，anon-access前面的注释去掉，将对应的值设置为none，将auth-access前面的注释也去掉，将password-db前面的注释也去掉，还有将authz-db前面的注释也去掉，显示如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/svnserve.conf.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>最重要的一点，<strong>去掉注释之后，配置项前面不能有空格</strong>。</p><h2 id="配置访问的用户及密码"><a href="#配置访问的用户及密码" class="headerlink" title="配置访问的用户及密码"></a>配置访问的用户及密码</h2><p>编辑passwd文件，在文件的末尾加上自己需要添加的用户名和密码，显示如图：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim passwd</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/passwd.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>注意：<strong>用户和密码都是明文显示的</strong></p><h2 id="配置新用户的授权访问的文件"><a href="#配置新用户的授权访问的文件" class="headerlink" title="配置新用户的授权访问的文件"></a>配置新用户的授权访问的文件</h2><p>编辑authz文件，在该文件中追加如下内容：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim authz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加内容</span></span><br><span class="line">[/]</span><br><span class="line">flytzuhan=rw</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/authz.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="启动svn服务"><a href="#启动svn服务" class="headerlink" title="启动svn服务"></a>启动svn服务</h2><p>执行如下命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">svnserve -d -r /opt/svn/</span><br></pre></td></tr></table></figure><p>其中-d表示后台运行， -r指定根目录，这里需要注意：<strong>绝对不能将启动命令写成：svnserve -d -r /opt/svn/test/</strong></p><p>还有启动的时候可能会出现如下错误：<code>svnserve: E000098: Can&#39;t bind server socket: Address already in use</code></p><p>这个是由于已经启动了SVN服务，所以需要先关闭进程，重新启动即可，命令如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">killall svnserve</span><br><span class="line">svnserve -d -r /opt/svn/</span><br></pre></td></tr></table></figure><h2 id="windows系统拉取代码"><a href="#windows系统拉取代码" class="headerlink" title="windows系统拉取代码"></a>windows系统拉取代码</h2><p>可以在图形化界面中输入：<code>svn://你的IP(公网)/test</code>链接svn</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/svn.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><blockquote><p>然后你就可以愉快的使用了~~~</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;项目开发中需要版本控制，而我们经常使用的是在windows系统上搭建svn服务器，下面介绍在Linux系统（CentOS 7.3.1611）
      
    
    </summary>
    
      <category term="Linux" scheme="/categories/Linux/"/>
    
    
      <category term="svn" scheme="/tags/svn/"/>
    
      <category term="技巧" scheme="/tags/%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title>React上手技巧</title>
    <link href="/2019/02/14/React%E4%B8%8A%E6%89%8B%E6%8A%80%E5%B7%A7/"/>
    <id>/2019/02/14/React上手技巧/</id>
    <published>2019-02-14T02:41:03.000Z</published>
    <updated>2019-02-14T03:11:54.199Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建一个React应用程序"><a href="#创建一个React应用程序" class="headerlink" title="创建一个React应用程序"></a>创建一个React应用程序</h2><p>参见：<a href="https://blog.csdn.net/tiangongkaiwu152368/article/details/80847494" target="_blank" rel="noopener">https://blog.csdn.net/tiangongkaiwu152368/article/details/80847494</a></p><h3 id="安装node"><a href="#安装node" class="headerlink" title="安装node"></a>安装node</h3><p>我们要用create-react-app来开发react，首先要通过包管理器安装create-react-app，而包管理器一般安装了nodejs后会自带的，所以我们的第一步是在我们的电脑上安装node。</p><p>请参考以下nodejs安装教程：</p><p><a href="https://www.runoob.com/nodejs/nodejs-install-setup.html" target="_blank" rel="noopener">Node.js安装配置</a></p><h3 id="检测npm包是否可用"><a href="#检测npm包是否可用" class="headerlink" title="检测npm包是否可用"></a>检测npm包是否可用</h3><p>安装好后，并且也配置进入了环境变量，然后我们来检测下你的npm包是否可用，打开cmd窗口，输入npm -v 进行检测，如下所示，若显示版本号则说明安装成功，环境变量也配置成功，可用开始安装creact-react-app进行react开发了。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/npm.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="使用-create-react-app-快速构建-React-开发环境"><a href="#使用-create-react-app-快速构建-React-开发环境" class="headerlink" title="使用 create-react-app 快速构建 React 开发环境"></a>使用 create-react-app 快速构建 React 开发环境</h3><p>create-react-app 是来自于 <a href="https://www.baidu.com/s?wd=Facebook&amp;tn=24004469_oem_dg&amp;rsv_dl=gh_pl_sl_csd" target="_blank" rel="noopener">Facebook</a>，通过该命令我们无需配置就能快速构建 React 开发环境。</p><p>create-react-app 自动创建的项目是基于 Webpack + ES6 。</p><p>执行以下命令创建项目：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">npm install -g create-react-app</span><br><span class="line">create-react-app project_name</span><br><span class="line"><span class="built_in">cd</span> project_name/</span><br><span class="line">npm start</span><br></pre></td></tr></table></figure><p>参考：<a href="https://github.com/facebook/create-react-app" target="_blank" rel="noopener"><strong>create-react-app</strong></a></p><p>在浏览器中打开 <a href="http://localhost:3000/" target="_blank" rel="noopener">http://localhost:3000/</a> ，结果如下图所示：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/react.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p><strong>提示：</strong>安装好后，如果你想卸载，可以直接把install改为uninstal即可，也就是在前面个un就可以表示卸载了。有时候卸载后在安装可能会报写错，此时你直接定位的create-react-app安装目录，然后把这个目录删除一般就能解决了。</p><h2 id="怎么运行别人写好的reactjs项目"><a href="#怎么运行别人写好的reactjs项目" class="headerlink" title="怎么运行别人写好的reactjs项目"></a>怎么运行别人写好的reactjs项目</h2><ol><li><p>首先安装nodejs最新稳定版，配置环境变量，使得node和npm命令能正常运行，自己去官方下载；</p></li><li><p>在项目下运行 <code>npm install</code> （功能：安装依赖）</p></li><li><p>然后看项目下的<code>README.md</code>，一般有指引教你如何运行。</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;创建一个React应用程序&quot;&gt;&lt;a href=&quot;#创建一个React应用程序&quot; class=&quot;headerlink&quot; title=&quot;创建一个React应用程序&quot;&gt;&lt;/a&gt;创建一个React应用程序&lt;/h2&gt;&lt;p&gt;参见：&lt;a href=&quot;https://blog.c
      
    
    </summary>
    
      <category term="React" scheme="/categories/React/"/>
    
    
      <category term="前端" scheme="/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="React" scheme="/tags/React/"/>
    
  </entry>
  
  <entry>
    <title>Linux下端口映射工具rinetd</title>
    <link href="/2019/02/12/Linux%E4%B8%8B%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84%E5%B7%A5%E5%85%B7rinetd/"/>
    <id>/2019/02/12/Linux下端口映射工具rinetd/</id>
    <published>2019-02-12T08:51:22.000Z</published>
    <updated>2019-02-12T09:30:58.619Z</updated>
    
    <content type="html"><![CDATA[<p><strong>Linux下简单好用的工具rinetd，实现端口映射/转发/重定向</strong></p><p>官网地址<a href="http://www.boutell.com/rinetd" target="_blank" rel="noopener">http://www.boutell.com/rinetd</a></p><h2 id="软件下载"><a href="#软件下载" class="headerlink" title="软件下载"></a>软件下载</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.boutell.com/rinetd/http/rinetd.tar.gz</span><br></pre></td></tr></table></figure><h2 id="解压安装"><a href="#解压安装" class="headerlink" title="解压安装"></a>解压安装</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf rinetd.tar.gz</span><br><span class="line"><span class="built_in">cd</span> rinetd</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p><strong>注意：</strong>执行<code>make install</code>时可能出现错误：</p><p><code>缺少目录/usr/man/man8</code></p><p>此时执行 <code>mkdir /usr/man/man8</code>后再执行<code>make install</code>即可</p><h2 id="编辑配置"><a href="#编辑配置" class="headerlink" title="编辑配置"></a>编辑配置</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/rinetd.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 内容</span></span><br><span class="line">0.0.0.0 8080 172.19.94.3 8080</span><br><span class="line">0.0.0.0 2222 192.168.0.103 3389</span><br><span class="line">1.2.3.4 80     192.168.0.10 80</span><br></pre></td></tr></table></figure><p>说明一下（0.0.0.0表示本机绑定所有可用地址）<br>将所有发往本机8080端口的请求转发到172.19.94.3的8080端口<br>将所有发往本机2222端口的请求转发到192.168.0.103的3389端口<br>将所有发往1.2.3.4的80端口请求转发到192.168.0.10的80端口</p><p>命令格式是<br><code>bindaddress bindport connectaddress connectport</code><br><code>绑定的地址  绑定的端口  连接的地址  连接的端口</code><br>或<br><code>[Source Address] [Source Port] [Destination Address] [Destination Port]</code><br><code>源地址  源端口   目的地址  目的端口</code></p><h2 id="启动程序"><a href="#启动程序" class="headerlink" title="启动程序"></a>启动程序</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">rinetd -c /etc/rinetd.conf  <span class="comment">##启动转发</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 附加：</span></span><br><span class="line">pkill rinetd  <span class="comment">##关闭进程</span></span><br></pre></td></tr></table></figure><p>把命令<code>rinetd -c /etc/rinetd.conf</code>加到<a href="https://maliangnansheng.github.io/2019/01/07/ubuntu-18-04-1-%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/#%E4%BF%AE%E6%94%B9-etc-rc-local%E8%84%9A%E6%9C%AC" target="_blank" rel="noopener">/etc/rc.local</a>里面就可以开机自动运行</p><h2 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">netstat -antp | grep 8080 | grep -v grep</span><br><span class="line"></span><br><span class="line">netstat -antp | grep rinetd | grep -v grep</span><br></pre></td></tr></table></figure><h2 id="需要注意"><a href="#需要注意" class="headerlink" title="需要注意"></a>需要注意</h2><ol><li><p>rinetd.conf中绑定的本机端口必须没有被其它程序占用</p></li><li><p>运行rinetd的系统防火墙应该打开绑定的本机端口（或者直接关闭防火墙？）</p><p>例如：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 1111 -j ACCEPT</span><br><span class="line">-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 2222 -j ACCEPT</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;Linux下简单好用的工具rinetd，实现端口映射/转发/重定向&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;官网地址&lt;a href=&quot;http://www.boutell.com/rinetd&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http
      
    
    </summary>
    
      <category term="Linux" scheme="/categories/Linux/"/>
    
    
      <category term="映射" scheme="/tags/%E6%98%A0%E5%B0%84/"/>
    
      <category term="rinetd" scheme="/tags/rinetd/"/>
    
  </entry>
  
  <entry>
    <title>工作以及自我学习计划</title>
    <link href="/2019/01/31/%E5%B7%A5%E4%BD%9C%E4%BB%A5%E5%8F%8A%E8%87%AA%E6%88%91%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
    <id>/2019/01/31/工作以及自我学习计划/</id>
    <published>2019-01-31T08:38:41.000Z</published>
    <updated>2019-01-31T08:41:00.863Z</updated>
    
    <content type="html"><![CDATA[<h2 id="人工智能-2019年工作计划"><a href="#人工智能-2019年工作计划" class="headerlink" title="人工智能-2019年工作计划"></a>人工智能-2019年工作计划</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/淞幸科技-研发中心-人工智能-2019年工作计划.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;人工智能-2019年工作计划&quot;&gt;&lt;a href=&quot;#人工智能-2019年工作计划&quot; class=&quot;headerlink&quot; title=&quot;人工智能-2019年工作计划&quot;&gt;&lt;/a&gt;人工智能-2019年工作计划&lt;/h2&gt;&lt;figure class=&quot;image-bubb
      
    
    </summary>
    
      <category term="乱语" scheme="/categories/%E4%B9%B1%E8%AF%AD/"/>
    
    
      <category term="学习计划" scheme="/tags/%E5%AD%A6%E4%B9%A0%E8%AE%A1%E5%88%92/"/>
    
      <category term="工作计划" scheme="/tags/%E5%B7%A5%E4%BD%9C%E8%AE%A1%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>让应用程序支持emoji字符</title>
    <link href="/2019/01/31/%E8%AE%A9%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E6%94%AF%E6%8C%81emoji%E5%AD%97%E7%AC%A6/"/>
    <id>/2019/01/31/让应用程序支持emoji字符/</id>
    <published>2019-01-31T03:00:44.000Z</published>
    <updated>2019-05-08T15:53:29.126Z</updated>
    
    <content type="html"><![CDATA[<p>什么是emoji？就是这些表情和符号：</p><p>😀😄💦😍😂😱😭😴👌</p><p>自iPhone从iOS 5在输入法中开始支持emoji以来，这些表情符号迅速风靡世界。但是很多Web网站竟然还不！支！持！！！</p><p>那怎么才能支持emoji呢？其实代码一行都不用改，因为emoji符号实际上是文本，并不是图片，它们仅仅显示为图片而已。而且，emoji符号已经被标准化并编码到最新的Unicode标准中了，所以，要支持emoji，只需要底层软件系统支持就可以了。</p><p>服务器端要正确存储emoji符号，只需要确保Web程序和底层数据库能支持最新的Unicode标准就可以了。</p><p>如果使用MySQL作为数据库，需要升级到5.5.3或更新的版本，然后，把默认编码从原来的utf8改为utf8mb4，在<code>my.cnf</code>或者<code>my.ini</code>配置文件中修改如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">default-character-set = utf8mb4</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">character-set-server = utf8mb4</span><br><span class="line">collation-server     = utf8mb4_general_ci</span><br></pre></td></tr></table></figure><p>重启MySQL，然后使用以下命令查看编码，应该全部为<code>utf8mb4</code>（<code>character_set_filesystem</code>和<code>character_set_system</code>除外）：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like <span class="string">'%char%'</span>;</span><br><span class="line">+--------------------------+--------------------------+</span><br><span class="line">| Variable_name            | Value                    |</span><br><span class="line">+--------------------------+--------------------------+</span><br><span class="line">| character_set_client     | utf8mb4                  |</span><br><span class="line">| character_set_connection | utf8mb4                  |</span><br><span class="line">| character_set_database   | utf8mb4                  |</span><br><span class="line">| character_set_filesystem | binary                   |</span><br><span class="line">| character_set_results    | utf8mb4                  |</span><br><span class="line">| character_set_server     | utf8mb4                  |</span><br><span class="line">| character_set_system     | utf8                     |</span><br><span class="line">| character_sets_dir       | /usr/<span class="built_in">local</span>/mysql-5.7.... |</span><br><span class="line">+--------------------------+--------------------------+</span><br><span class="line">8 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><p>使用命令查看collation设置，应该全部是<code>utf8mb4_general_ci</code>：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show variables like <span class="string">'%coll%'</span>;</span><br><span class="line">+----------------------+--------------------+</span><br><span class="line">| Variable_name        | Value              |</span><br><span class="line">+----------------------+--------------------+</span><br><span class="line">| collation_connection | utf8mb4_general_ci |</span><br><span class="line">| collation_database   | utf8mb4_general_ci |</span><br><span class="line">| collation_server     | utf8mb4_general_ci |</span><br><span class="line">+----------------------+--------------------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br></pre></td></tr></table></figure><p>如果<code>character_set_database</code>还是为<code>utf8</code>，需要重启服务器。</p><p>现在，MySQL就可以正确存储emoji字符了。</p><p>Web软件</p><p>要支持emoji，需要Web软件也支持。目前，已知支持emoji的包括：</p><ul><li>Java 8</li><li>Node</li></ul><p>最后，如果你的Web应用程序没有使用标准的UTF-8编码，而是使用了GBK等编码，想要支持emoji就只能<code>呵呵</code>了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;什么是emoji？就是这些表情和符号：&lt;/p&gt;
&lt;p&gt;😀😄💦😍😂😱😭😴👌&lt;/p&gt;
&lt;p&gt;自iPhone从iOS 5在输入法中开始支持emoji以来，这些表情符号迅速风靡世界。但是很多Web网站竟然还不！支！持！！！&lt;/p&gt;
&lt;p&gt;那怎么才能支持emoji呢
      
    
    </summary>
    
      <category term="MySQL" scheme="/categories/MySQL/"/>
    
    
      <category term="emoji" scheme="/tags/emoji/"/>
    
      <category term="utf8mb4" scheme="/tags/utf8mb4/"/>
    
      <category term="Web" scheme="/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>JVM -verbose参数详解</title>
    <link href="/2019/01/28/JVM-verbose%E5%8F%82%E6%95%B0%E8%AF%A6%E8%A7%A3/"/>
    <id>/2019/01/28/JVM-verbose参数详解/</id>
    <published>2019-01-28T11:50:55.000Z</published>
    <updated>2019-01-28T12:05:53.116Z</updated>
    
    <content type="html"><![CDATA[<h2 id="java-verbose-class-gc-jni-在输出设备上显示虚拟机运行信息"><a href="#java-verbose-class-gc-jni-在输出设备上显示虚拟机运行信息" class="headerlink" title="java -verbose[:class|gc|jni] 在输出设备上显示虚拟机运行信息"></a><code>java -verbose[:class|gc|jni]</code> 在输出设备上显示虚拟机运行信息</h2><h3 id="java-verbose-class"><a href="#java-verbose-class" class="headerlink" title="java -verbose:class"></a><code>java -verbose:class</code></h3><p>在程序运行的时候有多少类被加载！你可以用<code>verbose:class</code>来监视，在命令行输入<code>java -verbose:class XXX</code>  (<code>XXX</code>为程序名)你会在控制台看到加载的类的情况。</p><p>配置参数：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/class.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p><code>verbose</code>和<code>verbose:class</code>含义相同，输出虚拟机装入的类的信息，显示的信息格式如下： </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[Opened D:\Java\jdk1.6.0_25\jre\lib\rt.jar]</span><br><span class="line"></span><br><span class="line">[Loaded java.lang.Object from D:\Java\jdk1.6.0_25\jre\lib\rt.jar]</span><br><span class="line"></span><br><span class="line">[Loaded java.io.Serializable from D:\Java\jdk1.6.0_25\jre\lib\rt.jar]</span><br><span class="line"></span><br><span class="line">[Loaded java.lang.Comparable from D:\Java\jdk1.6.0_25\jre\lib\rt.jar]</span><br><span class="line"></span><br><span class="line">[Loaded java.lang.CharSequence from D:\Java\jdk1.6.0_25\jre\lib\rt.jar]</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="java-–verbose-gc"><a href="#java-–verbose-gc" class="headerlink" title="java –verbose:gc"></a><code>java –verbose:gc</code></h3><p>在虚拟机发生内存回收时在输出设备显示信息，格式如下： <code>[Full GC 256K-&gt;160K(124096K), 0.0042708 secs]</code> 该参数用来监视虚拟机内存回收的情况。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JvmVerbose</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">* JVM -verbose[:class|gc|jni] 参数测试</span></span><br><span class="line"><span class="comment">* <span class="doctag">@param</span> args</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        JvmVerbose jvmVerbose = <span class="keyword">new</span> JvmVerbose();</span><br><span class="line">        System.gc();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这个例子中，一个新的对象被创建，由于它没有使用，所以该对象迅速地变为可达，程序编译后，执行命令： <code>java -verbose:gc JvmVerbose</code> 后结果为：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[GC <span class="number">647</span>K-&gt;<span class="number">256</span>K(<span class="number">124096</span>K), <span class="number">0.0274253</span> secs]</span><br><span class="line"></span><br><span class="line">[Full GC <span class="number">256</span>K-&gt;<span class="number">160</span>K(<span class="number">124096</span>K), <span class="number">0.0042708</span> secs]</span><br></pre></td></tr></table></figure><p>箭头前后的数据<code>256K</code>和<code>160K</code>分别表示垃圾收集<code>GC</code>前后所有存活对象使用的内存容量，说明有<code>256K-160K=96K</code>的对象容量被回收，括号内的数据<code>124096K</code>为堆内存的总容量，收集所需要的时间是<code>0.0042708</code>秒（这个时间在每次执行的时候会有所不同）</p><h3 id="java-–verbose-jni"><a href="#java-–verbose-jni" class="headerlink" title="java –verbose:jni"></a><code>java –verbose:jni</code></h3><p><code>-verbose:jni</code>输出<code>native</code>方法调用的相关情况，一般用于诊断<code>jni</code>调用错误信息。<br>在虚拟机调用native方法时输出设备显示信息，格式如下： <code>[Dynamic-linking native methodjava.lang.Object.registerNatives ... JNI]</code> 该参数用来监视虚拟机调用本地方法的情况，在发生<code>jni</code>错误时可为诊断提供便利。</p><p>小试身手：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">Test test = <span class="keyword">new</span> Test();</span><br><span class="line">System.gc();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配置参数：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/jni.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>执行Test.class加载了以下这么多类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">[Opened C:\Java\jdk7\jre\lib\rt.jar]</span><br><span class="line"></span><br><span class="line">[Loaded java.lang.Object from C:\Java\jdk7\jre\lib\rt.jar]</span><br><span class="line"></span><br><span class="line">[Loaded java.io.Serializable from C:\Java\jdk7\jre\lib\rt.jar]</span><br><span class="line"></span><br><span class="line">[Loaded java.lang.Comparable from C:\Java\jdk7\jre\lib\rt.jar]</span><br><span class="line"></span><br><span class="line">[Loaded java.lang.CharSequence from C:\Java\jdk7\jre\lib\rt.jar]</span><br><span class="line"></span><br><span class="line">[Loaded java.lang.String from C:\Java\jdk7\jre\lib\rt.jar]</span><br><span class="line"></span><br><span class="line">[Loaded java.lang.reflect.GenericDeclaration from C:\Java\jdk7\jre\lib\rt.jar]</span><br><span class="line"></span><br><span class="line">[Loaded java.lang.reflect.Type from C:\Java\jdk7\jre\lib\rt.jar]</span><br><span class="line"></span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">[Full GC <span class="number">812</span>K-&gt;<span class="number">442</span>K(<span class="number">15872</span>K), <span class="number">0.0031244</span> secs] </span><br><span class="line"></span><br><span class="line">[Loaded sun.misc.Cleaner from C:\Java\jdk7\jre\lib\rt.jar]</span><br><span class="line"></span><br><span class="line">[Loaded java.lang.Shutdown from C:\Java\jdk7\jre\lib\rt.jar]</span><br><span class="line"></span><br><span class="line">[Loaded java.lang.Shutdown$Lock from C:\Java\jdk7\jre\lib\rt.jar]</span><br><span class="line">...</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;java-verbose-class-gc-jni-在输出设备上显示虚拟机运行信息&quot;&gt;&lt;a href=&quot;#java-verbose-class-gc-jni-在输出设备上显示虚拟机运行信息&quot; class=&quot;headerlink&quot; title=&quot;java -verb
      
    
    </summary>
    
      <category term="Java" scheme="/categories/Java/"/>
    
    
      <category term="eclipse" scheme="/tags/eclipse/"/>
    
      <category term="JVM" scheme="/tags/JVM/"/>
    
  </entry>
  
  <entry>
    <title>Maven生成javadoc(api文档)</title>
    <link href="/2019/01/24/Maven%E7%94%9F%E6%88%90javadoc-api%E6%96%87%E6%A1%A3/"/>
    <id>/2019/01/24/Maven生成javadoc-api文档/</id>
    <published>2019-01-24T02:16:22.000Z</published>
    <updated>2019-01-24T02:24:05.640Z</updated>
    
    <content type="html"><![CDATA[<h2 id="pom配置"><a href="#pom配置" class="headerlink" title="pom配置"></a>pom配置</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- properties与dependencys同级 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">maven.compiler.encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">maven.compiler.encoding</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-javadoc-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">reportOutputDirectory</span>&gt;</span>../javadocs<span class="tag">&lt;/<span class="name">reportOutputDirectory</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">destDir</span>&gt;</span>easy-delivery<span class="tag">&lt;/<span class="name">destDir</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="生成doc命令"><a href="#生成doc命令" class="headerlink" title="生成doc命令"></a>生成doc命令</h2><p><strong>首先需要打开<code>cmd</code>，然后<code>cd</code>到项目目录下</strong>，然后执行下面命令即可</p><p>例：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:</span><br><span class="line"><span class="built_in">cd</span> D:\maliangnansheng\IDEA_HKAI\hkai-ocr</span><br><span class="line">mvn javadoc:javadoc</span><br></pre></td></tr></table></figure><h2 id="查看文件"><a href="#查看文件" class="headerlink" title="查看文件"></a>查看文件</h2><p>比如我的项目在<code>hkai-ocr</code>这个文件夹下面，<code>doc</code>也会生成在与<code>hkai-ocr</code>同级目录（也可以修改上面的配置）</p><p>打开生成的<code>doc</code>里<code>index.html</code> 就可以看到api页面</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/api.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;pom配置&quot;&gt;&lt;a href=&quot;#pom配置&quot; class=&quot;headerlink&quot; title=&quot;pom配置&quot;&gt;&lt;/a&gt;pom配置&lt;/h2&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;
      
    
    </summary>
    
      <category term="Java" scheme="/categories/Java/"/>
    
    
      <category term="Maven" scheme="/tags/Maven/"/>
    
      <category term="api" scheme="/tags/api/"/>
    
  </entry>
  
  <entry>
    <title>CentOS部署kodexplorer可道云搭建私有网盘</title>
    <link href="/2019/01/16/CentOS%E9%83%A8%E7%BD%B2kodexplorer%E5%8F%AF%E9%81%93%E4%BA%91%E6%90%AD%E5%BB%BA%E7%A7%81%E6%9C%89%E7%BD%91%E7%9B%98/"/>
    <id>/2019/01/16/CentOS部署kodexplorer可道云搭建私有网盘/</id>
    <published>2019-01-16T06:38:15.000Z</published>
    <updated>2019-01-16T07:50:17.841Z</updated>
    
    <content type="html"><![CDATA[<h2 id="工具-原料"><a href="#工具-原料" class="headerlink" title="工具/原料"></a>工具/原料</h2><ol><li>xampp</li><li>可道云kodexplorer</li></ol><h2 id="PHP环境配置"><a href="#PHP环境配置" class="headerlink" title="PHP环境配置"></a>PHP环境配置</h2><ol><li><p>可以在串口使用<code>getconf LONG_BIT</code> 命令来查看并确定linux操作系统版本</p><p>输出：32表面系统是32位。<br>输出：64表面系统是64位。</p></li><li><p>下载与自己操作系统相适应版本的xampp</p><p>[32bit] wget <a href="https://sourceforge.net/projects/xampp/files/XAMPP%20Linux/5.6.14/xampp-linux-5.6.14-4-installer.run" target="_blank" rel="noopener">https://sourceforge.net/projects/xampp/files/XAMPP%20Linux/5.6.14/xampp-linux-5.6.14-4-installer.run</a>&gt;（7.3.0没有32位版本的，自己找找哪个版本有）<br>[64bit] wget <a href="https://sourceforge.net/projects/xampp/files/XAMPP%20Linux/7.3.0/xampp-linux-x64-7.3.0-0-installer.run" target="_blank" rel="noopener">https://sourceforge.net/projects/xampp/files/XAMPP%20Linux/7.3.0/xampp-linux-x64-7.3.0-0-installer.run</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/xampp</span><br><span class="line"><span class="built_in">cd</span> /home/xampp/</span><br><span class="line">wget https://sourceforge.net/projects/xampp/files/XAMPP%20Linux/7.3.0/xampp-linux-x64-7.3.0-0-installer.run</span><br></pre></td></tr></table></figure></li><li><p>安装xampp，为私有云安装构建Apache和PHP环境</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod u+x xampp-linux-x64-7.3.0-0-installer.run</span><br><span class="line">./xampp-linux-x64-7.3.0-0-installer.run</span><br></pre></td></tr></table></figure><p><img src="/img/xampp安装.png" alt=""></p><p>删除包：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /home/xampp/</span><br></pre></td></tr></table></figure></li><li><p>启动xampp，执行<code>/opt/lampp/lampp start</code>启动服务</p><p>默认安装在<code>/opt/lampp/</code>下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/opt/lampp/lampp start</span><br></pre></td></tr></table></figure></li></ol><h2 id="下载和安装可道云kodexplorer"><a href="#下载和安装可道云kodexplorer" class="headerlink" title="下载和安装可道云kodexplorer"></a>下载和安装可道云kodexplorer</h2><ol><li><p>下载最新版本的可道云KodExplorer程序</p><p>下载地址：<a href="http://kodcloud.com/download.html" target="_blank" rel="noopener">http://kodcloud.com/download.html</a></p><p>下载：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir /home/kodexplorer</span><br><span class="line"><span class="built_in">cd</span> /home/kodexplorer/</span><br><span class="line"><span class="comment"># 当时最新版</span></span><br><span class="line">wget http://static.kalcaddle.com/update/download/kodexplorer4.37.zip</span><br></pre></td></tr></table></figure></li><li><p>将可道云kodexplorer.zip解压</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unzip kodexplorer4.37.zip</span><br></pre></td></tr></table></figure></li><li><p>将解压后的内容拷贝至<code>/opt/lampp/htdocs/</code>目录下</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cp -r /home/kodexplorer/ /opt/lampp/htdocs/</span><br><span class="line">chmod 777 /opt/lampp/htdocs/kodexplorer</span><br><span class="line">chmod -R 777 /opt/lampp/htdocs/kodexplorer/data/</span><br></pre></td></tr></table></figure><p>删除不用文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /home/kodexplorer/</span><br></pre></td></tr></table></figure></li><li><p><strong>浏览器访问kodexplorer的index.php即可访问<code>KodExplorer</code>界面</strong></p><p>即：<a href="http://IP地址/kodexplorer/index.php" target="_blank" rel="noopener">http://IP地址/kodexplorer/index.php</a></p><p>例：<a href="http://172.19.15.52/kodexplorer/index.php" target="_blank" rel="noopener">http://172.19.15.52/kodexplorer/index.php</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;工具-原料&quot;&gt;&lt;a href=&quot;#工具-原料&quot; class=&quot;headerlink&quot; title=&quot;工具/原料&quot;&gt;&lt;/a&gt;工具/原料&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;xampp&lt;/li&gt;
&lt;li&gt;可道云kodexplorer&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;PHP
      
    
    </summary>
    
      <category term="Linux" scheme="/categories/Linux/"/>
    
    
      <category term="kodexplorer" scheme="/tags/kodexplorer/"/>
    
      <category term="部署" scheme="/tags/%E9%83%A8%E7%BD%B2/"/>
    
  </entry>
  
</feed>
