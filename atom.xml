<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nan&#39;s Blog</title>
  
  <subtitle>弱者才言命，强者只言运！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="/"/>
  <updated>2019-10-16T03:33:09.027Z</updated>
  <id>/</id>
  
  <author>
    <name>马亮南生</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>软件需求，概要设计，详细设计（文档）怎么做，做什么？</title>
    <link href="/2019/10/16/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82%EF%BC%8C%E6%A6%82%E8%A6%81%E8%AE%BE%E8%AE%A1%EF%BC%8C%E8%AF%A6%E7%BB%86%E8%AE%BE%E8%AE%A1%EF%BC%88%E6%96%87%E6%A1%A3%EF%BC%89%E6%80%8E%E4%B9%88%E5%81%9A%EF%BC%8C%E5%81%9A%E4%BB%80%E4%B9%88%EF%BC%9F/"/>
    <id>/2019/10/16/软件需求，概要设计，详细设计（文档）怎么做，做什么？/</id>
    <published>2019-10-16T03:25:39.000Z</published>
    <updated>2019-10-16T03:33:09.027Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>由于项目工作需要 ，需要提供《软件需求规格说明书》，《软件概要设计说明书》和《软件详细设计说明书》。所以这里整理学习一下相关文档需要的内容。文章并不设计对所有需求分析，概要设计和详细设计的详细描述。因为这其中的任何一点都可以单独提取出来成为软件工程学科中的一本书籍内容。</p><h2 id="软件设计的整体流程："><a href="#软件设计的整体流程：" class="headerlink" title="软件设计的整体流程："></a>软件设计的整体流程：</h2><ul><li>软件需求分析阶段：输出了《软件需求规格说明书》，不涉及具体实现方法。用户能看得明白，开发人员也可据此进行下面的工作，<code>搞清楚“要解决什么问题”</code></li><li>概要设计阶段：确定软件系统的总体布局，各个子模块的功能和模块间的关系，与外部系统的关系，选择的技术路线。有一些研究与论证性的内容。并输出《软件概要设计说明书》。<code>搞清楚“总体实现方案”</code></li><li>详细设计阶段：对概要设计的进一步细化，一般由各部分的担当人员依据概要设计分别完成，然后在集成，是具体的实现细节。是“程序”的蓝图，确定每个模块采用的算法、数据结构、接口的实现、属性、参数。并输出《软件详细设计说明书》。<code>搞清楚“每个模块怎么做”</code></li></ul><h2 id="需求分析"><a href="#需求分析" class="headerlink" title="需求分析"></a>需求分析</h2><h3 id="我们为什么需要《软件需求规格说明书》-？"><a href="#我们为什么需要《软件需求规格说明书》-？" class="headerlink" title="我们为什么需要《软件需求规格说明书》 ？"></a>我们为什么需要《软件需求规格说明书》 ？</h3><p>如果需求的编写只是为了解释说明软件实现的功能，那么良好的编码结构，代码注释就可以很好的实现软件的功能说明，程序员可以将编写需求的时间节约下来进行更多功能的实现； 可是，这样的情况可能更多适用于中小型项目，或者互联网项目，因为这样的项目需求不复杂，并且需求变化很快，所以研发的效率非常重要。然而，针对大型软件项目或者功能比较复杂的系统，软件研发可能是多人协作的成果，所以在信息传递过程中， 我们只有提前考虑好软件需求的内容，才能正确评估开发软件所需要的时间，成本的要素，从而更好的管理项目。</p><h3 id="《软件需求规格说明书》的一般结构"><a href="#《软件需求规格说明书》的一般结构" class="headerlink" title="《软件需求规格说明书》的一般结构"></a>《软件需求规格说明书》的一般结构</h3><ul><li>正文的第一章内容是1.概述，包含<br>1.1.编写目的；1.2.术语与定义；1.3.参考资料；三个部分</li><li>第二章要给出该项目的标准和规范，在文档的后续内容编写中以及项目开发过程中必须遵照这个标准和规范进行。</li><li>第三章应该说明该项目的相关假设、限制和一些依赖条件，在后续系统部署的过程中可以有参考意义。</li><li>第四章“功能规格”是重点，重点介绍这个系统的角色，界面设计思路，系统的功能视图和功能点清单，以及系统的需求用例。这个内容必须详细描述，这样才能对后续的开发和测试提供指导意义。</li><li>第五章“非功能规格”要对项目的性能、安全、数据的备份恢复等内容解释解释说明，一个项目除了功能完整之外，还要考虑性能、安全等相应的要求。</li><li>第六章“附录”，是对软件需求规格说明书的一些补充说明文档，其中的“软件需求跟踪矩阵”是重点，这份文档是对后续需求的完善程度进行了严格的控制。</li></ul><h2 id="概要设计"><a href="#概要设计" class="headerlink" title="概要设计"></a>概要设计</h2><h3 id="《概要设计说明书》的一般结构"><a href="#《概要设计说明书》的一般结构" class="headerlink" title="《概要设计说明书》的一般结构"></a>《概要设计说明书》的一般结构</h3><ul><li>总述：需求或目标（讲一下事情的起源）、环境、局限；</li><li>总体设计：从全局的角度说一下 组织结构、功能、处理流程、有哪些模块、模块间的关系，运行环境等。（输出图：系统结构图，系统流程图，数据流程图，推荐在线画图工具<a href="https://www.processon.com/" target="_blank" rel="noopener">https://www.processon.com/</a>）</li><li>外部接口：总体说明外部用户、软、硬件接口(可用资源)；</li><li>模块设计：每个模块“做什么”、简要说明“怎么做”（输入、输出、处理逻辑、与其它模块或系统的接口），处在什么逻辑位置、物理位置。</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">模块设计,可以写以下内容：</span><br><span class="line">   1、模块描述：说明哪些模块实现了哪些功能；</span><br><span class="line">   2、模块层次结构：可以使用某个视角的软件框架图来表达；</span><br><span class="line">   3、模块间的关系：模块间依赖关系的描述，通信机制描述；</span><br><span class="line">   4、模块的核心接口：说明模块传递的信息、信息的结构；</span><br><span class="line">   5、处理方式设计：说一些满足功能和性能的算法；</span><br></pre></td></tr></table></figure><ul><li>数据结构：逻辑结构、物理结构。</li><li>容灾设计：出错信息、出错处理。（可选）</li><li>监控设计：运行模块组合、控制、时间。（可选）</li><li>用户界面设计：（可选）。</li><li>安全设计：（可选）。</li><li>其它设计：（可选）。</li><li>制定规范（附录）： 设计原则,代码规范、接口规约、命名规则。</li></ul><h3 id="概要设计需要注意的地方"><a href="#概要设计需要注意的地方" class="headerlink" title="概要设计需要注意的地方"></a>概要设计需要注意的地方</h3><ul><li>用来评价总体设计的可行性。</li><li>用来检查设计的模块是否完整，保证每一个功能都有对应的模块来实现。</li><li>用来评估开发工作量、指导开发计划（在不写详细设计的情况下）。</li><li>概要设计阶段过于重视业务流程是个误区。</li><li>概要设计阶段过于重视细节实现是个误区。</li></ul><h2 id="详细设计"><a href="#详细设计" class="headerlink" title="详细设计"></a>详细设计</h2><h3 id="《详细设计说明书》的一般结构"><a href="#《详细设计说明书》的一般结构" class="headerlink" title="《详细设计说明书》的一般结构"></a>《详细设计说明书》的一般结构</h3><p>参考<a href="https://blog.csdn.net/xiaxia_1006/article/details/52330202" target="_blank" rel="noopener">如何撰写软件详细设计内容？</a></p><ul><li>引言，包含：<br>编写目的，背景，参考资料，术语定义及说明</li><li>设计概述，包含：任务和目标，需求概述，运行环境概述， 条件与限制，详细设计方法和工具</li><li>系统详细需求分析，包含：详细需求分析，详细系统运行环境及限制条件分析接口需求分析</li><li>总体方案确认，包含： 系统总体结构确认， 系统详细界面划分</li><li>系统详细设计，包含： 系统结构设计及子系统划分，系统功能模块详细设计（采用HIPO图进行功能分解与模块描述，，用IPO或结构图描述各模块的组成结构、算法、模块间的接口关系，以及需求、功能和模块三者之间的交叉参照关系。）, 系统界面详细设计</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">每个模块的描述说明可参照以下格式：</span><br><span class="line"></span><br><span class="line">**模块编号：**</span><br><span class="line"></span><br><span class="line">**模块名称：**</span><br><span class="line"></span><br><span class="line">**输入：**</span><br><span class="line"></span><br><span class="line">**处理：**</span><br><span class="line"></span><br><span class="line">**算法描述：**</span><br><span class="line"></span><br><span class="line">**输出：**</span><br></pre></td></tr></table></figure><ul><li>数据库系统设计</li></ul><h3 id="详细设计需要注意的地方"><a href="#详细设计需要注意的地方" class="headerlink" title="详细设计需要注意的地方"></a>详细设计需要注意的地方</h3><p>如果有或者有必要，特别是大型的软件系统，详细设计阶段划分系统功能模块或子系统。</p><h2 id="概要设计和详细设计的区别"><a href="#概要设计和详细设计的区别" class="headerlink" title="概要设计和详细设计的区别"></a>概要设计和详细设计的区别</h2><h3 id="概要设计阶段"><a href="#概要设计阶段" class="headerlink" title="概要设计阶段"></a>概要设计阶段</h3><p>在这个阶段，设计者会大致考虑并照顾模块的内部实现，但不过多纠缠于此。主要集中于划分模块、分配任务、定义调用关系。模块间的接口与传参在这个阶段要定得十分细致明确，应编写严谨的数据字典，避免后续设计产生不解或误解。概要设计一般不是一次就能做到位，而是反复地进行结构调整。典型的调整是合并功能重复的模块，或者进一步分解出可以复用的模块。在概要设计阶段，应最大限度地提取可以重用的模块，建立合理的结构体系，节省后续环节的工作量。<br>概要设计文档最重要的部分是分层数据流图、结构图、数据字典以及相应的文字说明等。以概要设计文档为依据，各个模块的详细设计就可以并行展开了。</p><h3 id="详细设计阶段"><a href="#详细设计阶段" class="headerlink" title="详细设计阶段"></a>详细设计阶段</h3><p>在这个阶段，各个模块可以分给不同的人去并行设计。在详细设计阶段，设计者的工作对象是一个模块，根据概要设计赋予的局部任务和对外接口，设计并表达出模块的算法、流程、状态转换等内容。这里要注意，如果发现有结构调整（如分解出子模块等）的必要，必须返回到概要设计阶段，将调整反应到概要设计文档中，而不能就地解决，不打招呼。<br>详细设计文档最重要的部分是模块的流程图、状态图、局部变量及相应的文字说明等。</p><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><p><a href="https://jingyan.baidu.com/article/4ae03de3d7bdc43eff9e6b19.html" target="_blank" rel="noopener">软件需求规格说明书模板</a><br><a href="https://www.cnblogs.com/bmaker/p/6116177.html" target="_blank" rel="noopener">软件概要设计-模板</a><br><a href="http://elf8848.iteye.com/blog/1582323" target="_blank" rel="noopener">软件概要设计做什么，怎么做</a><br><a href="http://elf8848.iteye.com/blog/2165655" target="_blank" rel="noopener">互联网公司研发RD如何撰写总体设计与详细设计文档</a><br><a href="https://bbs.csdn.net/topics/330012397" target="_blank" rel="noopener">项目开发过程中详细设计和概要设计有什么区别和要求?</a><br><a href="https://blog.csdn.net/xiaxia_1006/article/details/52330202" target="_blank" rel="noopener">如何撰写软件详细设计内容？</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;由于项目工作需要 ，需要提供《软件需求规格说明书》，《软件概要设计说明书》和《软件详细设计说明书》。所以这里整理学习一下相关文档需要的内容。
      
    
    </summary>
    
      <category term="文档" scheme="/categories/%E6%96%87%E6%A1%A3/"/>
    
    
      <category term="软件需求" scheme="/tags/%E8%BD%AF%E4%BB%B6%E9%9C%80%E6%B1%82/"/>
    
      <category term="概要设计" scheme="/tags/%E6%A6%82%E8%A6%81%E8%AE%BE%E8%AE%A1/"/>
    
      <category term="详细设计" scheme="/tags/%E8%AF%A6%E7%BB%86%E8%AE%BE%E8%AE%A1/"/>
    
  </entry>
  
  <entry>
    <title>Rainloop安装配置</title>
    <link href="/2019/09/27/Rainloop%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>/2019/09/27/Rainloop安装配置/</id>
    <published>2019-09-27T01:57:53.000Z</published>
    <updated>2019-09-27T02:11:46.011Z</updated>
    
    <content type="html"><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p><code>RainLoop</code>是一个基于<code>WEB</code>的邮件系统，使用<code>PHP</code>开发，通过<code>RainLoop</code>可以将多个邮箱聚合在一起，程序拥有简介的界面和全面的功能，支持<code>SMTP</code>+<code>IMAP</code>，是个人邮件客户端的最佳程序。这里说下安装方法。</p><h2 id="前提"><a href="#前提" class="headerlink" title="前提"></a>前提</h2><p><code>RainLoop</code>要想运行起来需要满足该博客<code>“PHP入门技巧”</code>完成的PHP环境。</p><h2 id="Rainloop安装"><a href="#Rainloop安装" class="headerlink" title="Rainloop安装"></a>Rainloop安装</h2><ol><li>Rainloop官网<ul><li>官方网站：<a href="https://www.rainloop.net" target="_blank" rel="noopener">https://www.rainloop.net</a></li><li>下载地址：<a href="https://www.rainloop.net/downloads" target="_blank" rel="noopener">https://www.rainloop.net/downloads</a></li></ul></li><li>将Rainloop安装包下载后解压上传到你的网站服务器上（<code>/www</code>目录下），然后直接用浏览器访问：<a href="http://wampserver-test.com/?admin，输入以下登录信息登录：" target="_blank" rel="noopener">http://wampserver-test.com/?admin，输入以下登录信息登录：</a><ul><li>用户名：<code>admin</code></li><li>密码：<code>12345</code></li></ul></li></ol><h2 id="RainLoop设置方法"><a href="#RainLoop设置方法" class="headerlink" title="RainLoop设置方法"></a>RainLoop设置方法</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/rainloop001.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>这么些设置，自己摸索，就不多说了</p><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p><code>RainLoop</code>用<code>PHP</code>开发，正常情况下在<code>PHP</code>环境中就可以运行，有时候并不需要数据库，应用程序不存储电子邮件，应用直接访问邮件服务器和<code>RainLoop</code>显示邮件而已，简单实用！性能方面完全取决于你的服务器内存和网速了，如果您需要启用邮件联系人，则需要用数据库（<code>MySQL</code>），具体可以自行折腾。当然我们自己使用的话，完全没有问题。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h2&gt;&lt;p&gt;&lt;code&gt;RainLoop&lt;/code&gt;是一个基于&lt;code&gt;WEB&lt;/code&gt;的邮件系统，使用&lt;code&gt;PHP&lt;/code&gt;开发，通
      
    
    </summary>
    
      <category term="Rainloop" scheme="/categories/Rainloop/"/>
    
    
      <category term="安装配置" scheme="/tags/%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    
      <category term="WebMail" scheme="/tags/WebMail/"/>
    
  </entry>
  
  <entry>
    <title>PHP入门技巧</title>
    <link href="/2019/09/24/PHP%E5%85%A5%E9%97%A8%E6%8A%80%E5%B7%A7/"/>
    <id>/2019/09/24/PHP入门技巧/</id>
    <published>2019-09-24T02:01:34.000Z</published>
    <updated>2019-09-24T03:37:39.305Z</updated>
    
    <content type="html"><![CDATA[<h2 id="集成环境"><a href="#集成环境" class="headerlink" title="集成环境"></a>集成环境</h2><h3 id="wamperserver"><a href="#wamperserver" class="headerlink" title="wamperserver"></a>wamperserver</h3><ol><li><p>下载好安装到本地指定目录，官网下载地址  <a href="http://www.wampserver.com" target="_blank" rel="noopener">http://www.wampserver.com</a></p><p><strong>安装成功的标志：</strong></p><ol><li><p>双击运行<code>wamperserver</code>图标后：</p><p><img src="/img/php003.png" alt=""></p></li><li><p>浏览器访问<code>localhost</code>出现以下页面表示安装成功</p><p><img src="/img/php004.png" alt=""></p></li></ol></li><li><p>根据自己实际的安装路径，<code>D:\maliangnansheng\wamp64\bin\apache\apache2.4.39\conf</code>，找到 apache  的配置文件 <code>httpd.conf</code></p><p><img src="/img/php001.png" alt=""></p><p>也可以<code>左键</code>图标直接打开文件修改：</p><p><img src="/img/php002.png" alt=""></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">打开文件httpd.conf文件</span><br><span class="line">搜索Include conf/extra/httpd-vhosts.conf</span><br><span class="line">去掉它前面的#，然后保存这个文件</span><br></pre></td></tr></table></figure></li><li><p>打开<code>D:\maliangnansheng\wamp64\bin\apache\apache2.4.39\conf\extra\httpd-vhosts.conf</code>文件，添加域名映射项，一般是在文件的最后添加上：</p><p><img src="/img/php005.png" alt=""></p><p>也可以<code>左键</code>图标直接打开文件修改：</p><p><img src="/img/php006.png" alt=""></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 添加的内容：</span></span><br><span class="line">&lt;VirtualHost *:80&gt;</span><br><span class="line">  ServerName wampserver-test.com</span><br><span class="line">  ServerAlias wampserver-test.com</span><br><span class="line">  DocumentRoot <span class="string">"<span class="variable">$&#123;INSTALL_DIR&#125;</span>/www"</span></span><br><span class="line">  &lt;Directory <span class="string">"<span class="variable">$&#123;INSTALL_DIR&#125;</span>/www/"</span>&gt;</span><br><span class="line">    Options +Indexes +Includes +FollowSymLinks +MultiViews</span><br><span class="line">    AllowOverride All</span><br><span class="line">    Require <span class="built_in">local</span></span><br><span class="line">  &lt;/Directory&gt;</span><br><span class="line">&lt;/VirtualHost&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># ServerName wampserver-test.com为配置的虚拟站点</span></span><br><span class="line"><span class="comment"># DocumentRoot "$&#123;INSTALL_DIR&#125;/www"项目文件的路径</span></span><br></pre></td></tr></table></figure><p>视图如下：</p><p><img src="/img/php007.png" alt=""></p></li><li><p>找到本机的 host  文件（<code>C:\Windows\System32\drivers\etc</code> ），绑定到本地</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在文件最后添加域名：</span></span><br><span class="line">127.0.0.1 wampserver-test.com</span><br></pre></td></tr></table></figure></li><li><p>重启服务环境，就可以通过域名访问项目了</p><p><img src="/img/php008.png" alt=""></p></li></ol><h3 id="phpStudy"><a href="#phpStudy" class="headerlink" title="phpStudy"></a>phpStudy</h3><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/php009.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="php7-2-废弃each方法"><a href="#php7-2-废弃each方法" class="headerlink" title="php7.2 废弃each方法"></a>php7.2 废弃each方法</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$b = <span class="keyword">array</span>();</span><br><span class="line">each($b);</span><br><span class="line"> </span><br><span class="line"><span class="comment">// Deprecated:  The each() function is deprecated. This message will be suppressed on further calls</span></span><br></pre></td></tr></table></figure><p>each方法<code>替换</code>为</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun_adm_each</span><span class="params">(&amp;$array)</span></span>&#123;</span><br><span class="line">   $res = <span class="keyword">array</span>();</span><br><span class="line">   $key = key($array);</span><br><span class="line">   <span class="keyword">if</span>($key !== <span class="keyword">null</span>)&#123;</span><br><span class="line">       next($array); </span><br><span class="line">       $res[<span class="number">1</span>] = $res[<span class="string">'value'</span>] = $array[$key];</span><br><span class="line">       $res[<span class="number">0</span>] = $res[<span class="string">'key'</span>] = $key;</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">       $res = <span class="keyword">false</span>;</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">return</span> $res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;集成环境&quot;&gt;&lt;a href=&quot;#集成环境&quot; class=&quot;headerlink&quot; title=&quot;集成环境&quot;&gt;&lt;/a&gt;集成环境&lt;/h2&gt;&lt;h3 id=&quot;wamperserver&quot;&gt;&lt;a href=&quot;#wamperserver&quot; class=&quot;headerlink&quot; 
      
    
    </summary>
    
      <category term="PHP" scheme="/categories/PHP/"/>
    
    
      <category term="技巧" scheme="/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="集成环境" scheme="/tags/%E9%9B%86%E6%88%90%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>EwoMail邮件服务器搭建and配置</title>
    <link href="/2019/09/19/EwoMail%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BAand%E9%85%8D%E7%BD%AE/"/>
    <id>/2019/09/19/EwoMail邮件服务器搭建and配置/</id>
    <published>2019-09-19T08:24:34.000Z</published>
    <updated>2019-09-19T08:58:30.371Z</updated>
    
    <content type="html"><![CDATA[<p><strong>引用：</strong></p><ul><li><a href="http://doc.ewomail.com/docs/ewomail/install" target="_blank" rel="noopener">EwoMail 邮件服务器（开源版文档）</a></li><li><a href="https://www.laozuo.org/12465.html" target="_blank" rel="noopener">利用EwoMail开源软件自建邮件服务器 - 安装设置篇</a></li></ul><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><p>以下是无错的简单安装流程，如安装过程出错请参见《引用》地址</p><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>安装前请检查端口，点击查看（<a href="http://doc.ewomail.com/docs/ewomail/not_server" target="_blank" rel="noopener">无法连接服务器</a>）</p><p>centos6/7系统，服务器需要干净环境，要求全新干净系统，不能安装在已有的apache,mysql的环境中。</p><p>最低配置要求<br>CPU：1核<br>内存：1G<br>硬盘：40G</p><p>由于新版本的杀毒软件占用的内存比较多，512M到2GB内存请参考<a href="http://doc.ewomail.com/docs/ewomail/reduce_memory" target="_blank" rel="noopener">降低内存占用</a></p><p>EwoMail安装后会把数据存放在 <code>/ewomail</code> 目录<br>建议你提前创建 <code>/ewomail</code> 目录，并且将硬盘容量挂载或分配到<code>/ewomail</code></p><h2 id="关闭selinux"><a href="#关闭selinux" class="headerlink" title="关闭selinux"></a>关闭selinux</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/selinux</span><br><span class="line"></span><br><span class="line"><span class="comment"># SELINUX=enforcing 改为 SELINUX=disabled</span></span><br></pre></td></tr></table></figure><h2 id="检查swap"><a href="#检查swap" class="headerlink" title="检查swap"></a>检查swap</h2><p>如果没启动swap，这会导致EwoMail的防病毒组件不能启动，所以在安装前先检查swap是否已经启动，如已启动可跳过该步骤。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看swap</span></span><br><span class="line">free -m</span><br></pre></td></tr></table></figure><p>如果swap位置<code>都显示是0</code>，那么系统还没创建swap</p><h3 id="创建swap分区（内存超过2G，可不配置）"><a href="#创建swap分区（内存超过2G，可不配置）" class="headerlink" title="创建swap分区（内存超过2G，可不配置）"></a>创建swap分区<code>（内存超过2G，可不配置）</code></h3><p>创建1G的swap，可以根据你的服务器配置来调整大小</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dd <span class="keyword">if</span>=/dev/zero of=/mnt/swap bs=1M count=1024</span><br></pre></td></tr></table></figure><p>设置交换分区文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkswap /mnt/swap</span><br></pre></td></tr></table></figure><p>启动swap</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">swapon /mnt/swap</span><br></pre></td></tr></table></figure><p>设置开机时自启用 swap 分区</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 需要修改文件 /etc/fstab 中的 swap 行，在最后-添加以下内容</span></span><br><span class="line">/mnt/swap swap swap defaults 0 0</span><br></pre></td></tr></table></figure><h2 id="邮箱域名"><a href="#邮箱域名" class="headerlink" title="邮箱域名"></a>邮箱域名</h2><p>EwoMail本身是可以配置<code>多个域名</code>来收发邮件的，但在安装前需要<code>一个邮箱的主域名</code>。<br>本次教程例子使用的主域名是sunsheen.cn</p><h2 id="设置主机名（可不配置主机名）"><a href="#设置主机名（可不配置主机名）" class="headerlink" title="设置主机名（可不配置主机名）"></a>设置主机名<code>（可不配置主机名）</code></h2><p>EwoMail在安装后会默认使用域名前缀mail的主机名，例如mail.sunsheen.cn<br>将系统主机名改成mail.sunsheen.cn</p><p>查看当前主机名</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname -f</span><br></pre></td></tr></table></figure><p>输入命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl <span class="built_in">set</span>-hostname mail.sunsheen.cn</span><br></pre></td></tr></table></figure><p>修改文件 <code>/etc/hosts</code> , 添加 <code>mail.sunsheen.cn</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/hosts</span><br><span class="line"><span class="comment"># 在文件最后添加一下内容：</span></span><br><span class="line">172.18.11.11 mail.sunsheen.cn mail localhost</span><br></pre></td></tr></table></figure><h2 id="安装EwoMail邮件软件"><a href="#安装EwoMail邮件软件" class="headerlink" title="安装EwoMail邮件软件"></a>安装EwoMail邮件软件</h2><ol><li><p>代码获取渠道</p><blockquote><p>渠道：<a href="http://ewomail.com/list-11.html" target="_blank" rel="noopener">http://ewomail.com/list-11.html</a></p></blockquote><p>输入域名，然后生成安装地址，然后去执行安装</p><p><img src="/img/ewomail001.png" alt=""></p></li><li><p>安装成功</p><p><img src="/img/ewomail002.png" alt=""></p><p>现在就安装成功了，可以访问<code>邮箱管理后台</code>和<code>web邮件系统</code></p></li></ol><h2 id="EwoMail邮件系统登录管理"><a href="#EwoMail邮件系统登录管理" class="headerlink" title="EwoMail邮件系统登录管理"></a>EwoMail邮件系统登录管理</h2><blockquote><p>邮箱管理后台：<a href="http://IP:8010" target="_blank" rel="noopener">http://IP:8010</a> （默认账号admin，密码ewomail123）</p><p>web邮件系统：<a href="http://IP:8000" target="_blank" rel="noopener">http://IP:8000</a></p></blockquote><ul><li><p>web邮件系统-8000</p><p><img src="/img/ewomail003.png" alt=""></p></li><li><p>邮箱管理后台-8010</p><p><img src="/img/ewomail004.png" alt=""></p><p>登录后：</p><p><img src="/img/ewomail005.png" alt=""></p></li></ul><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;引用：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://doc.ewomail.com/docs/ewomail/install&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;EwoMail 邮件服务器（开源版文
      
    
    </summary>
    
      <category term="EwoMail" scheme="/categories/EwoMail/"/>
    
    
      <category term="配置" scheme="/tags/%E9%85%8D%E7%BD%AE/"/>
    
      <category term="邮件服务器" scheme="/tags/%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
      <category term="搭建" scheme="/tags/%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Java 远程执行 Linux 的命令</title>
    <link href="/2019/09/05/Java-%E8%BF%9C%E7%A8%8B%E6%89%A7%E8%A1%8C-Linux-%E7%9A%84%E5%91%BD%E4%BB%A4/"/>
    <id>/2019/09/05/Java-远程执行-Linux-的命令/</id>
    <published>2019-09-05T03:30:30.000Z</published>
    <updated>2019-09-10T02:25:14.916Z</updated>
    
    <content type="html"><![CDATA[<p>在 Java 中可以通过 SSH2 协议远程执行 Linux 系统的命令或 Shell 脚本。</p><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><p>需添加 <code>ganymed-ssh2-262.jar</code> 、<code>commons-io-2.6.jar</code>、<code>commons-lang3-3.9.jar</code>、<code>fastjson-1.2.58.jar</code>包，Maven 依赖如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/ch.ethz.ganymed/ganymed-ssh2 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>ch.ethz.ganymed<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>ganymed-ssh2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>262<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/commons-io/commons-io --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-io<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.commons<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>commons-lang3<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.9<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.alibaba/fastjson --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.58<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="api-说明"><a href="#api-说明" class="headerlink" title="api 说明"></a>api 说明</h2><ol><li><p>首先构造一个连接器，传入一个需要登陆的ip地址；</p><p><code>Connection conn = new Connection(hostname);</code></p></li><li><p>模拟登陆目的服务器，传入用户名和密码；</p><p><code>boolean isAuthenticated = conn.authenticateWithPassword(username, password);</code></p><p>它会返回一个布尔值，true 代表成功登陆目的服务器，否则登陆失败。</p></li><li><p>打开一个session，执行你需要的linux 脚本命令；</p><p><code>Session session = conn.openSession();</code><br><code>session.execCommand(“ifconfig”);</code></p></li><li><p>接收目标服务器上的控制台返回结果，读取br中的内容；</p><p><code>InputStream stdout = new StreamGobbler(sess.getStdout());</code><br><code>BufferedReader br = new BufferedReader(new InputStreamReader(stdout));</code></p></li><li><p>得到脚本运行成功与否的标志 ：0－成功 非0－失败</p><p><code>System.out.println(“ExitCode: ” + sess.getExitStatus());</code></p></li><li><p>关闭session和connection</p><p><code>sess.close();</code><br><code>conn.close();</code></p></li></ol><h2 id="备注"><a href="#备注" class="headerlink" title="备注"></a>备注</h2><p>1、通过第2步认证成功后，当前目录就位于/home/username/目录之下，你可以指定脚本文件所在的绝对路径，或者通过cd导航到脚本文件所在的目录，然后传递执行脚本所需要的参数，完成脚本调用执行。</p><p>2、执行脚本以后，可以获取脚本执行的结果文本，需要对这些文本进行正确编码后返回给客户端，避免乱码产生。</p><p>3、如果你需要执行多个linux控制台脚本，比如第一个脚本的返回结果是第二个脚本的入参，你必须打开多个Session,也就是多次调用<br>Session sess = conn.openSession();,使用完毕记得关闭就可以了。</p><h2 id="实例代码"><a href="#实例代码" class="headerlink" title="实例代码"></a>实例代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ch.ethz.ssh2.Connection;</span><br><span class="line"><span class="keyword">import</span> ch.ethz.ssh2.Session;</span><br><span class="line"><span class="keyword">import</span> ch.ethz.ssh2.StreamGobbler;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.util.IOUtils;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.lang3.StringUtils;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 远程执行Linux命令</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 92481</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RemoteExecuteCommand</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 字符编码默认是utf-8</span></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">static</span> String DEFAULTCHART = <span class="string">"UTF-8"</span>;</span><br><span class="line">  <span class="keyword">private</span> Connection conn;</span><br><span class="line">  <span class="keyword">private</span> String ip;</span><br><span class="line">  <span class="keyword">private</span> String userName;</span><br><span class="line">  <span class="keyword">private</span> String userPwd;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">RemoteExecuteCommand</span><span class="params">(String ip, String userName, String userPwd)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.ip = ip;</span><br><span class="line">    <span class="keyword">this</span>.userName = userName;</span><br><span class="line">    <span class="keyword">this</span>.userPwd = userPwd;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="title">RemoteExecuteCommand</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 远程登录linux主机</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> 登录成功返回true，否则返回false</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> Boolean <span class="title">login</span><span class="params">()</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span> flg = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      conn = <span class="keyword">new</span> Connection(ip);</span><br><span class="line">      <span class="comment">// 连接</span></span><br><span class="line">      conn.connect();</span><br><span class="line">      <span class="comment">// 认证</span></span><br><span class="line">      flg = conn.authenticateWithPassword(userName, userPwd);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"远程连接服务器失败"</span>, e);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> flg;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 远程执行shll脚本或者命令</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> cmd 即将执行的命令</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> 命令执行完后返回的结果值</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">execute</span><span class="params">(String cmd)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    String result = <span class="string">""</span>;</span><br><span class="line">    Session session = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (login()) &#123;</span><br><span class="line">        <span class="comment">// 打开一个会话</span></span><br><span class="line">        session = conn.openSession();</span><br><span class="line">        <span class="comment">// 执行命令</span></span><br><span class="line">        session.execCommand(cmd);</span><br><span class="line">        result = processStdout(session.getStdout(), DEFAULTCHART);</span><br><span class="line">        <span class="comment">// 如果为输出为空，说明脚本执行出错了</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtils.isBlank(result)) &#123;</span><br><span class="line">          result = processStdout(session.getStderr(), DEFAULTCHART);</span><br><span class="line">        &#125;</span><br><span class="line">        conn.close();</span><br><span class="line">        session.close();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"命令执行失败"</span>, e);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      <span class="keyword">if</span> (conn != <span class="keyword">null</span>) &#123;</span><br><span class="line">        conn.close();</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (session != <span class="keyword">null</span>) &#123;</span><br><span class="line">        session.close();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * 解析脚本执行返回的结果集</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> in 输入流对象</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@param</span> charset 编码</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return</span> 以纯文本的格式返回</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">private</span> String <span class="title">processStdout</span><span class="params">(InputStream in, String charset)</span></span></span><br><span class="line"><span class="function">          <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    InputStream stdout = <span class="keyword">new</span> StreamGobbler(in);</span><br><span class="line">    StringBuffer buffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">    InputStreamReader isr = <span class="keyword">null</span>;</span><br><span class="line">    BufferedReader br = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      isr = <span class="keyword">new</span> InputStreamReader(stdout, charset);</span><br><span class="line">      br = <span class="keyword">new</span> BufferedReader(isr);</span><br><span class="line">      String line = <span class="keyword">null</span>;</span><br><span class="line">      <span class="keyword">while</span> ((line = br.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">        buffer.append(line + <span class="string">"\n"</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (UnsupportedEncodingException e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"不支持的编码字符集异常"</span>, e);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"读取指纹失败"</span>, e);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">      IOUtils.close(br);</span><br><span class="line">      IOUtils.close(isr);</span><br><span class="line">      IOUtils.close(stdout);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> buffer.toString();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    String linuxIP = <span class="string">"172.18.195.253"</span>;</span><br><span class="line">    String usrName = <span class="string">"root"</span>;</span><br><span class="line">    String passwd  = <span class="string">"Jufeng2010"</span>;</span><br><span class="line">    RemoteExecuteCommand rec = <span class="keyword">new</span> RemoteExecuteCommand(linuxIP, usrName, passwd);</span><br><span class="line">    <span class="comment">// 执行命令</span></span><br><span class="line">    System.out.println(rec.execute(<span class="string">"ip a"</span>));</span><br><span class="line">    <span class="comment">// 执行脚本</span></span><br><span class="line"><span class="comment">// rec.execute("sh /etc/init.d/domain.sh hkc.demo.sunsheen.cn 172.18.195.155 8888");</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="例如："><a href="#例如：" class="headerlink" title="例如："></a>例如：</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 执行脚本 （域名访问）</span></span><br><span class="line">rec.execute(<span class="string">"sh /etc/init.d/domain.sh "</span> + domainBef+domainLater + <span class="string">" "</span> + ip + <span class="string">" "</span> + </span><br><span class="line">innerPort + <span class="string">" "</span> + createUserName);</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /etc/init.d/domain.sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> /etc/nginx/conf.d/</span><br><span class="line"><span class="comment"># 创建配置文件</span></span><br><span class="line">touch <span class="variable">$1_</span><span class="variable">$4</span>.conf;</span><br><span class="line"><span class="comment"># 像配置文件写入内容</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"server &#123;</span></span><br><span class="line"><span class="string">        listen 80;</span></span><br><span class="line"><span class="string">        server_name <span class="variable">$1</span>;</span></span><br><span class="line"><span class="string">        location / &#123;</span></span><br><span class="line"><span class="string">                proxy_pass http://<span class="variable">$2</span>:<span class="variable">$3</span>;</span></span><br><span class="line"><span class="string">                proxy_set_header Host \$host:80;</span></span><br><span class="line"><span class="string">                proxy_set_header X-Real-IP \$remote_addr;</span></span><br><span class="line"><span class="string">                proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;</span></span><br><span class="line"><span class="string">                proxy_set_header Via \"nginx\";</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">&#125;"</span> &gt; <span class="variable">$1_</span><span class="variable">$4</span>.conf;</span><br><span class="line"><span class="comment"># 重启nginx</span></span><br><span class="line">nginx -s reload;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在 Java 中可以通过 SSH2 协议远程执行 Linux 系统的命令或 Shell 脚本。&lt;/p&gt;
&lt;h2 id=&quot;添加依赖&quot;&gt;&lt;a href=&quot;#添加依赖&quot; class=&quot;headerlink&quot; title=&quot;添加依赖&quot;&gt;&lt;/a&gt;添加依赖&lt;/h2&gt;&lt;p&gt;需添加 &lt;co
      
    
    </summary>
    
      <category term="Java远程Linux命令" scheme="/categories/Java%E8%BF%9C%E7%A8%8BLinux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="Java" scheme="/tags/Java/"/>
    
      <category term="Linux" scheme="/tags/Linux/"/>
    
      <category term="远程命令" scheme="/tags/%E8%BF%9C%E7%A8%8B%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 7.x - 安装MySQL 5.7</title>
    <link href="/2019/08/21/CentOS-7-x-%E5%AE%89%E8%A3%85MySQL-5-7/"/>
    <id>/2019/08/21/CentOS-7-x-安装MySQL-5-7/</id>
    <published>2019-08-21T06:20:39.000Z</published>
    <updated>2019-08-22T02:59:43.440Z</updated>
    
    <content type="html"><![CDATA[<h1 id="在线安装"><a href="#在线安装" class="headerlink" title="在线安装"></a>在线安装</h1><p>引用：<a href="https://juejin.im/post/5c088b066fb9a049d4419985" target="_blank" rel="noopener">他人博客</a>、<a href="https://dev.mysql.com/doc/mysql-yum-repo-quick-guide/en/" target="_blank" rel="noopener">MySQL官网</a></p><p>yum仓库：<a href="https://dev.mysql.com/downloads/repo/yum/" target="_blank" rel="noopener">下载MySQL Yum存储库</a></p><blockquote><p>CentOS 7的默认yum仓库中并没有MySQL5.7，我们需要手动添加，好在MySQL官方提供了仓库的地址，所以我们能够比较简单地安装MySQL。</p><p>本文我们将介绍CentOS 7下MySQL5.7的安装。</p></blockquote><h2 id="添加MySQL5-7仓库"><a href="#添加MySQL5-7仓库" class="headerlink" title="添加MySQL5.7仓库"></a>添加MySQL5.7仓库</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 地址来源于下载yum存储库时“No thanks, just start my download.”的地址</span></span><br><span class="line"></span><br><span class="line">rpm -ivh https://dev.mysql.com/get/mysql57-community-release-el7-11.noarch.rpm</span><br></pre></td></tr></table></figure><h2 id="确认MySQL仓库成功添加"><a href="#确认MySQL仓库成功添加" class="headerlink" title="确认MySQL仓库成功添加"></a>确认MySQL仓库成功添加</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum repolist all | grep mysql | grep enabled</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果展示像下面,则表示成功添加仓库:</span></span><br><span class="line">mysql-connectors-community/x86_64  MySQL Connectors Community    enabled:     51</span><br><span class="line">mysql-tools-community/x86_64       MySQL Tools Community         enabled:     63</span><br><span class="line">mysql57-community/x86_64           MySQL 5.7 Community Server    enabled:    267</span><br></pre></td></tr></table></figure><h2 id="开始安装MySQL5-7"><a href="#开始安装MySQL5-7" class="headerlink" title="开始安装MySQL5.7"></a>开始安装MySQL5.7</h2><p>这个过程用时较久（取决于你的网速）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure><h2 id="启动MySQL"><a href="#启动MySQL" class="headerlink" title="启动MySQL"></a>启动MySQL</h2><ol><li><p>启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure></li><li><p>设置系统启动时自动启动</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> mysqld</span><br></pre></td></tr></table></figure></li><li><p>查看启动状态</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status mysqld</span><br></pre></td></tr></table></figure></li></ol><h2 id="MySQL的安全设置"><a href="#MySQL的安全设置" class="headerlink" title="MySQL的安全设置"></a>MySQL的安全设置</h2><p>CentOS上的root<code>默认密码</code>可以在文件<code>/var/log/mysqld.log</code>找到，通过下面命令可以打印出来</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 该命令只能查询默认的初始密码（如果修改了密码，并不能查询到更改后的密码）</span></span><br><span class="line">cat /var/<span class="built_in">log</span>/mysqld.log | grep -i <span class="string">'temporary password'</span></span><br></pre></td></tr></table></figure><p>执行下面命令进行安全设置，这个命令会进行设置root密码设置，移除匿名用户，禁止root用户远程连接等</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure><h3 id="MySQL5-7初始化密码报错"><a href="#MySQL5-7初始化密码报错" class="headerlink" title="MySQL5.7初始化密码报错"></a>MySQL5.7<code>初始化密码</code>报错</h3><p>报错信息：<code>ERROR 1820 (HY000): You must reset your password using ALTER USER statement before</code></p><ol><li><p><strong>mysql5.6是密码为空直接进入数据库的，但是mysql5.7就需要初始密码</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /var/<span class="built_in">log</span>/mysqld.log | grep -i <span class="string">'temporary password'</span></span><br></pre></td></tr></table></figure><p><img src="/img/mysql001.png" alt=""></p></li><li><p><strong>然后执行 <code>mysql -uroot -p</code> ，输入上面的到的密码进入，用该密码登录后，必须马上修改新的密码，不然会报如下错误：</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br></pre></td></tr></table></figure><p><img src="/img/mysql002.png" alt=""></p></li><li><p><strong>如果你想要设置一个简单的测试密码的话，比如设置为<code>777888</code>，会提示这个错误，报错的意思就是你的密码不符合要求</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter user <span class="string">'root'</span>@<span class="string">'localhost'</span> identified by <span class="string">'777888'</span>;</span><br></pre></td></tr></table></figure><p><img src="/img/mysql003.png" alt=""></p></li><li><p><strong>这个其实与validate_password_policy的值有关</strong></p><p><code>validate_password_policy</code>有以下取值：</p><p><img src="/img/mysql004.png" alt=""></p><p>默认是1，即MEDIUM，所以刚开始设置的密码<code>必须符合长度</code>，且<code>必须含有数字，小写或大写字母，特殊字符</code>。<br>有时候，只是为了自己测试，不想密码设置得那么复杂，譬如说，我只想设置root的密码为<code>777888</code>。<br>必须修改两个全局参数：</p><p>首先，修改<code>validate_password_policy</code>参数的值</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> global validate_password_policy=0;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure><p><code>validate_password_length</code>(密码长度)参数默认为8，我们修改为1</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; <span class="built_in">set</span> global validate_password_length=1;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure></li><li><p><strong>完成之后再次执行修改密码语句即可成功</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; alter user <span class="string">'root'</span>@<span class="string">'localhost'</span> identified by <span class="string">'777888'</span>;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure></li></ol><h3 id="CentOS-如何修改MySQL用户root的密码"><a href="#CentOS-如何修改MySQL用户root的密码" class="headerlink" title="CentOS 如何修改MySQL用户root的密码"></a>CentOS 如何修改MySQL用户root的密码</h3><ol><li><p><strong>用帐号登录mysql</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line"></span><br><span class="line">Enter password:<span class="comment"># 输入原密码</span></span><br></pre></td></tr></table></figure></li><li><p><strong>改变用户数据库</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; use mysql;</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br></pre></td></tr></table></figure></li><li><p><strong>修改密码，记得密码要用<code>password()</code>函数进行加密，一定不要忘记！！！</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 5.6版本修改密码</span></span><br><span class="line">mysql&gt; update user <span class="built_in">set</span> password=password(<span class="string">'Your new password'</span>) <span class="built_in">where</span> user=<span class="string">'root'</span>;</span><br><span class="line">Query OK, 1 row affected (0.04 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line"><span class="comment"># 5.7版本下的mysql数据库下已经没有password这个字段了，password字段改成了authentication_string</span></span><br><span class="line">mysql&gt; update mysql.user <span class="built_in">set</span> authentication_string=password(<span class="string">'Your new password'</span>) <span class="built_in">where</span> user=<span class="string">'root'</span>;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br></pre></td></tr></table></figure></li><li><p><strong>刷新权限表</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure></li><li><p><strong>退出MySQL</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; quit</span><br><span class="line">Bye</span><br></pre></td></tr></table></figure></li><li><p><strong>重启MySQL</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure></li></ol><h2 id="设置数据库编码为utf8"><a href="#设置数据库编码为utf8" class="headerlink" title="设置数据库编码为utf8"></a>设置数据库编码为utf8</h2><ol><li><p>打开配置文件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/my.cnf</span><br></pre></td></tr></table></figure></li><li><p>在[mysqld]，[client]，[mysql]节点下添加编码设置（<code>原本就有的替换、没有的追加</code>成下面的内容）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[client]</span><br><span class="line">default-character-set=utf8</span><br><span class="line"></span><br><span class="line">[mysql]</span><br><span class="line">default-character-set=utf8</span><br><span class="line"></span><br><span class="line">[mysqld]</span><br><span class="line">sql_mode=NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES<span class="comment">#解释见附录 ***</span></span><br><span class="line">collation-server = utf8_unicode_ci</span><br><span class="line">init-connect=<span class="string">'SET NAMES utf8'</span></span><br><span class="line">character-set-server = utf8</span><br></pre></td></tr></table></figure></li><li><p>重启MySQL即可</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure></li></ol><h1 id="离线安装"><a href="#离线安装" class="headerlink" title="离线安装"></a>离线安装</h1><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><h2 id="sql-mode-常用值说明"><a href="#sql-mode-常用值说明" class="headerlink" title="sql_mode 常用值说明"></a>sql_mode 常用值说明</h2><p>引用：<a href="https://segmentfault.com/a/1190000005936172" target="_blank" rel="noopener">MySQL sql_mode 说明</a></p><p>官方手册专门有一节介绍 <a href="https://dev.mysql.com/doc/refman/5.6/en/sql-mode.html" target="_blank" rel="noopener">https://dev.mysql.com/doc/refman/5.6/en/sql-mode.html</a> 。 SQL Mode 定义了两个方面：MySQL应支持的SQL语法，以及应该在数据上执行何种确认检查。</p><h3 id="SQL语法支持类"><a href="#SQL语法支持类" class="headerlink" title="SQL语法支持类"></a>SQL语法支持类</h3><ul><li><p><strong>ONLY_FULL_GROUP_BY</strong> 对于GROUP BY聚合操作，如果在SELECT中的列、HAVING或者ORDER BY子句的列，没有在GROUP BY中出现，那么这个SQL是不合法的。是可以理解的，因为不在 group by 的列查出来展示会有矛盾。<br>在5.7中默认启用，所以在实施5.6升级到5.7的过程需要注意：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> Expression #1 of SELECT list is not in GROUP BY</span><br><span class="line">clause and contains nonaggregated column</span><br><span class="line">&apos;1066export.ebay_order_items.TransactionID&apos; which</span><br><span class="line">is not functionally dependent on columns in GROUP BY</span><br><span class="line">clause; this is incompatible with sql_mode=only_full_group_by</span><br></pre></td></tr></table></figure></li><li><p><strong>ANSI_QUOTES</strong> 启用 ANSI_QUOTES 后，不能用双引号来引用字符串，因为它被解释为识别符，作用与 <code>一样。设置它以后，</code>update t set f1=”” …`，会报 Unknown column ‘’ in ‘field list 这样的语法错误。</p></li><li><p><strong>PIPES_AS_CONCAT</strong> 将 <code>||</code> 视为字符串的连接操作符而非 或 运算符，这和Oracle数据库是一样的，也和字符串的拼接函数 CONCAT() 相类似。</p></li><li><p><strong>NO_TABLE_OPTIONS</strong> 使用 <code>SHOW CREATE TABLE</code> 时不会输出MySQL特有的语法部分，如 <code>ENGINE</code> ，这个在使用 mysqldump 跨DB种类迁移的时候需要考虑。</p></li><li><p><strong>NO_AUTO_CREATE_USER</strong> 字面意思不自动创建用户。在给MySQL用户授权时，我们习惯使用 <code>GRANT ... ON ... TO dbuser</code> 顺道一起创建用户。设置该选项后就与oracle操作类似，授权之前必须先建立用户。5.7.7开始也默认了。</p></li></ul><h3 id="数据检查类"><a href="#数据检查类" class="headerlink" title="数据检查类"></a>数据检查类</h3><ul><li><strong>NO_ZERO_DATE</strong> 认为日期 ‘0000-00-00’ 非法，与是否设置后面的严格模式有关。<ol><li>如果设置了严格模式，则 NO_ZERO_DATE 自然满足。但如果是 INSERT IGNORE 或 UPDATE IGNORE，’0000-00-00’依然允许且只显示warning</li><li>如果在非严格模式下，设置了<code>NO_ZERO_DATE</code>，效果与上面一样，’0000-00-00’允许但显示warning；如果没有设置<code>NO_ZERO_DATE</code>，no warning，当做完全合法的值。</li><li><code>NO_ZERO_IN_DATE</code>情况与上面类似，不同的是控制日期和天，是否可为 0 ，即 <code>2010-01-00</code> 是否合法。</li></ol></li><li><strong>NO_ENGINE_SUBSTITUTION</strong> 使用 <code>ALTER TABLE</code>或<code>CREATE TABLE</code> 指定 ENGINE 时， 需要的存储引擎被禁用或未编译，该如何处理。启用<code>NO_ENGINE_SUBSTITUTION</code>时，那么直接抛出错误；不设置此值时，CREATE用默认的存储引擎替代，ATLER不进行更改，并抛出一个 warning .</li><li><strong>STRICT_TRANS_TABLES</strong> 设置它，表示启用严格模式。<br>注意 <code>STRICT_TRANS_TABLES</code> 不是几种策略的组合，单独指 <code>INSERT</code>、<code>UPDATE</code>出现少值或无效值该如何处理：<ol><li>前面提到的把 ‘’ 传给int，严格模式下非法，若启用非严格模式则变成0，产生一个warning</li><li>Out Of Range，变成插入最大边界值</li><li>A value is missing when a new row to be inserted does not contain a value for a non-NULL column that has no explicit DEFAULT clause in its definition</li></ol></li></ul><p>上面并没有囊括所有的 SQL Mode，选了几个代表性的，详细还是 <a href="https://mariadb.com/kb/en/mariadb/sql_mode/" target="_blank" rel="noopener">看手册</a>。</p><p>sql_mode一般来说很少去关注它，没有遇到实际问题之前不会去启停上面的条目。我们常设置的 sql_mode 是 <code>ANSI</code>、<code>STRICT_TRANS_TABLES</code>、<code>TRADITIONAL</code>，ansi和traditional是上面的几种组合。</p><ul><li><code>ANSI</code>：更改语法和行为，使其更符合标准SQL<br>相当于REAL_AS_FLOAT, PIPES_AS_CONCAT, ANSI_QUOTES, IGNORE_SPACE</li><li><code>TRADITIONAL</code>：更像传统SQL数据库系统，该模式的简单描述是当在列中插入不正确的值时“给出错误而不是警告”。<br>相当于 STRICT_TRANS_TABLES, STRICT_ALL_TABLES, NO_ZERO_IN_DATE, NO_ZERO_DATE, ERROR_FOR_DIVISION_BY_ZERO, NO_AUTO_CREATE_USER, NO_ENGINE_SUBSTITUTION</li><li><code>ORACLE</code>：相当于 PIPES_AS_CONCAT, ANSI_QUOTES, IGNORE_SPACE, NO_KEY_OPTIONS, NO_TABLE_OPTIONS, NO_FIELD_OPTIONS, NO_AUTO_CREATE_USER</li></ul><p>无论何种mode，产生error之后就意味着单条sql执行失败，对于支持事务的表，则导致当前事务回滚；但如果没有放在事务中执行，或者不支持事务的存储引擎表，则可能导致数据不一致。MySQL认为，相比直接报错终止，数据不一致问题更严重。于是 <code>STRICT_TRANS_TABLES</code> 对非事务表依然尽可能的让写入继续，比如给个”最合理”的默认值或截断。而对于 <code>STRICT_ALL_TABLES</code>，如果是单条更新，则不影响，但如果更新的是多条，第一条成功，后面失败则会出现部分更新。</p><p>5.6.6 以后版本默认就是<code>NO_ENGINE_SUBSTITUTION,STRICT_TRANS_TABLES</code>，5.5默认为 ‘’ 。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;在线安装&quot;&gt;&lt;a href=&quot;#在线安装&quot; class=&quot;headerlink&quot; title=&quot;在线安装&quot;&gt;&lt;/a&gt;在线安装&lt;/h1&gt;&lt;p&gt;引用：&lt;a href=&quot;https://juejin.im/post/5c088b066fb9a049d4419985&quot; t
      
    
    </summary>
    
      <category term="MySQL" scheme="/categories/MySQL/"/>
    
    
      <category term="数据库" scheme="/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
      <category term="MySQL" scheme="/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>Servlet登录拦截器</title>
    <link href="/2019/07/11/Servlet%E7%99%BB%E5%BD%95%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    <id>/2019/07/11/Servlet登录拦截器/</id>
    <published>2019-07-11T08:24:23.000Z</published>
    <updated>2019-07-11T08:30:38.716Z</updated>
    
    <content type="html"><![CDATA[<p>代码如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.sunsheen.filter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.Filter;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterChain;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.FilterConfig;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpSession;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.sunsheen.jfids.system.config.Configs;</span><br><span class="line"><span class="keyword">import</span> com.sunsheen.jfids.system.security.login.Session;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servlet 登录过滤器</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> 92481</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">LoginFilter</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">destroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doFilter</span><span class="params">(ServletRequest request, ServletResponse response, </span></span></span><br><span class="line"><span class="function"><span class="params">                         FilterChain chain)</span><span class="keyword">throws</span> IOException, ServletException </span>&#123;</span><br><span class="line">        HttpServletRequest req = (HttpServletRequest) request;</span><br><span class="line">        <span class="comment">//获取url地址</span></span><br><span class="line">        String reqUrl = req.getRequestURI();</span><br><span class="line"><span class="comment">//        System.out.println("reqURL----------" + reqUrl);</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 登录操作不做页面跳转</span></span><br><span class="line">    <span class="keyword">if</span>(reqUrl.contains(<span class="string">"/hkcloud/login.w.xhtml"</span>) </span><br><span class="line">    || reqUrl.contains(<span class="string">"/hkcloud/getUser"</span>)</span><br><span class="line">    || reqUrl.contains(<span class="string">"/hkcloud/login"</span>) </span><br><span class="line">    || reqUrl.contains(<span class="string">"/static/"</span>)</span><br><span class="line">    || reqUrl.endsWith(<span class="string">".css"</span>)</span><br><span class="line">    || reqUrl.endsWith(<span class="string">".js"</span>))&#123;</span><br><span class="line">    </span><br><span class="line">    chain.doFilter(request, response);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">        HttpSession session = Session.getHttpSession();</span><br><span class="line">        String apiKey = (String) session.getAttribute(<span class="string">"ApiKey"</span>);</span><br><span class="line">        </span><br><span class="line">        HttpServletResponse res = (HttpServletResponse) response;</span><br><span class="line">        <span class="comment">// 如果session中存在apiKey证明用户登录，可以放行。否则认为未登陆重定向到登录界面</span></span><br><span class="line">        <span class="keyword">if</span> (apiKey == <span class="keyword">null</span> || apiKey.equals(<span class="string">""</span>)) &#123;</span><br><span class="line">        <span class="comment">// 登录页面地址</span></span><br><span class="line">        String loginUrl = Configs.get(<span class="string">"AllConfig.loginUrl"</span>);</span><br><span class="line">        <span class="comment">//如果request.getHeader("X-Requested-With") 返回的是"XMLHttpRequest"</span></span><br><span class="line">            <span class="comment">//说明就是ajax请求，需要特殊处理</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="string">"XMLHttpRequest"</span>.equals(req.getHeader(<span class="string">"X-Requested-With"</span>)))&#123;</span><br><span class="line">                <span class="comment">//告诉ajax我是重定向</span></span><br><span class="line">            res.setHeader(<span class="string">"redirect"</span>, <span class="string">"redirect"</span>);</span><br><span class="line">                <span class="comment">//告诉ajax我重定向的路径</span></span><br><span class="line">                res.setHeader(<span class="string">"url"</span>, req.getContextPath() + loginUrl);</span><br><span class="line">                res.setStatus(HttpServletResponse.SC_FORBIDDEN);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res.sendRedirect(req.getContextPath() + loginUrl);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            chain.doFilter(request, response);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(FilterConfig fConfig)</span> <span class="keyword">throws</span> ServletException </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注：</strong></p><p><code>ajax请求返回重定向信息</code></p><p>在项目中，考虑到web前台ajax请求未登录资源时，后台返回的重定向信息，ajax不能自动判断是否是重定向，以下是一种折中方法：</p><p>前端jquery.ajax默认设置，<code>ajax设置要放在程序ajax调用前</code>，我一般<code>放在公共js中统一引用到文件头里的</code>，这样调用ajax的时候就无需操心其他设置了</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * ajax默认设置 包括默认提交方式为POST， 判断后台是否是重定向</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">$.ajaxSetup(&#123;</span><br><span class="line"><span class="comment">// 设置ajax请求结束后的执行动作</span></span><br><span class="line">complete : <span class="function"><span class="keyword">function</span>(<span class="params">XMLHttpRequest, textStatus</span>) </span>&#123;</span><br><span class="line"><span class="comment">// 通过XMLHttpRequest取得响应头，redirect</span></span><br><span class="line"><span class="keyword">var</span> redirect = XMLHttpRequest.getResponseHeader(<span class="string">"redirect"</span>);</span><br><span class="line"><span class="keyword">if</span> (redirect == <span class="string">"redirect"</span>) &#123; <span class="comment">// 若HEADER中含有redirect说明后端想重定向</span></span><br><span class="line"><span class="keyword">var</span> win = <span class="built_in">window</span>;</span><br><span class="line"><span class="keyword">while</span> (win != win.top) &#123;</span><br><span class="line">win = win.top;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 将后端重定向的地址取出来,使用win.location.href去实现重定向的要求</span></span><br><span class="line">win.location.href = XMLHttpRequest.getResponseHeader(<span class="string">"url"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">type : <span class="string">'POST'</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br
      
    
    </summary>
    
      <category term="Java" scheme="/categories/Java/"/>
    
    
      <category term="拦截器" scheme="/tags/%E6%8B%A6%E6%88%AA%E5%99%A8/"/>
    
      <category term="filter" scheme="/tags/filter/"/>
    
  </entry>
  
  <entry>
    <title>Java汉字转拼音pinyin4j用法</title>
    <link href="/2019/07/03/Java%E6%B1%89%E5%AD%97%E8%BD%AC%E6%8B%BC%E9%9F%B3pinyin4j%E7%94%A8%E6%B3%95/"/>
    <id>/2019/07/03/Java汉字转拼音pinyin4j用法/</id>
    <published>2019-07-03T10:04:41.000Z</published>
    <updated>2019-08-22T03:09:21.196Z</updated>
    
    <content type="html"><![CDATA[<p>来源：<a href="https://www.jianshu.com/p/57a6600d2862" target="_blank" rel="noopener">https://www.jianshu.com/p/57a6600d2862</a></p><h2 id="工具介绍"><a href="#工具介绍" class="headerlink" title="工具介绍"></a>工具介绍</h2><p>pinyin4j 是一个支持将<code>简体</code>和<code>繁体</code>中文转换到成拼音的Java开源类库；</p><h3 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h3><ul><li>支持同一汉字有多个发音</li><li>还支持拼音的格式化输出，比如第几声之类的，</li><li>同时支持简体中文、繁体中文转换为拼音…使用起来也非常简单。下面是其官方网址，其中提供了下载：<ul><li>pinyin4j的<a href="http://sourceforge.net/projects/pinyin4j/files/" target="_blank" rel="noopener">官方下载地址</a></li><li>Maven仓库</li></ul></li></ul><h3 id="目录结构及说明"><a href="#目录结构及说明" class="headerlink" title="目录结构及说明"></a>目录结构及说明</h3><p><code>doc :</code> pinyin4j的api文档</p><p><code>lib :</code> pinyin4j的jar包</p><p><code>src:</code> pinyin4j的源代码</p><p><code>CHANGELOG.txt :</code> pinyin4j的版本更新日志</p><p><code>COPYING.txt :</code> LICENSE说明</p><p><code>README.txt :</code> pinyin4j的概要介绍</p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>pinyin4j使用了一个.txt的文本文件（uicode_to_hanyu_pinyin.txt）用来存储汉字unicode编码与拼音的对应关系，通过读取该配置文件达到转换的目的。该属性文件存储信息的基本格式如下：89E3 (jie3,jie4,xie4)   //(对应汉字”解”)89E3 是汉字对应的unicode编码的16进制数，(jie3,jie4,xie4)是该汉字对应的三种读音(在汉语里有多音字)，说明pinyin4j支持多音字的处理pinyin4j的处理过程是这样的：根据String的toCharArray方法得到每个字符（得到”解”字的unicode编码，实际上是35299，由于java中char和String都是unicode编码的可以直接转为int型的编码数据35299），然后利用Integer.toHexString(c1).toUpperCase()将其转换成16进制数[也就是89E3]，通过读取配置文件得到“解”字的拼音(jie3,jie4,xie4)，那么这里有三个拼音，pinyin4j的默认取值为第一个，也就是jie3[表示读jie，声调是三声]</p><h2 id="pinyin4J-使用"><a href="#pinyin4J-使用" class="headerlink" title="pinyin4J 使用"></a>pinyin4J 使用</h2><p>pinyin4j 提供的工具类为<code>PinyinHelper</code>,里边提供了静态方法</p><ul><li><code>toHanyuPinyinString()</code>(过时)</li><li><code>toHanyuPinyinStringArray()</code></li></ul><p>pinyin4j 中有四个辅助类分别是：</p><ul><li>HanyuPinyinCaseType</li><li>HanyuPinyinToneType</li><li>HanyuPinyinVCharType</li><li>HanyuPinyinOutputFormat</li></ul><p>具体功能和用法见一下代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">HanyuPinyinOutputFormat defaultFormat = <span class="keyword">new</span> HanyuPinyinOutputFormat();</span><br><span class="line"><span class="comment">// 控制大小写</span></span><br><span class="line"><span class="comment">// UPPERCASE：大写  (ZHONG)</span></span><br><span class="line"><span class="comment">// LOWERCASE：小写  (zhong)</span></span><br><span class="line">defaultFormat.setCaseType(HanyuPinyinCaseType.UPPERCASE);</span><br><span class="line"><span class="comment">// WITHOUT_TONE：无音标  (zhong)</span></span><br><span class="line"><span class="comment">// WITH_TONE_NUMBER：1-4数字表示英标  (zhong4)</span></span><br><span class="line"><span class="comment">// WITH_TONE_MARK：直接用音标符（必须WITH_U_UNICODE否则异常）  (zhòng)</span></span><br><span class="line">defaultFormat.setToneType(HanyuPinyinToneType.WITH_TONE_NUMBER);</span><br><span class="line"><span class="comment">// WITH_V：用v表示ü  (nv)</span></span><br><span class="line"><span class="comment">// WITH_U_AND_COLON：用"u:"表示ü  (nu:)</span></span><br><span class="line"><span class="comment">// WITH_U_UNICODE：直接用ü (nü)</span></span><br><span class="line">defaultFormat.setVCharType(HanyuPinyinVCharType.WITH_U_UNICODE);</span><br><span class="line"><span class="comment">// oHanyuPinyinStringArray如果传入的字符不是汉字不能转换成拼音，那么会直接返回null。</span></span><br><span class="line">String[] pinyin = PinyinHelper.toHanyuPinyinStringArray(<span class="string">'重'</span>, defaultFormat);</span><br><span class="line"><span class="keyword">for</span>(String str: pinyin)&#123;</span><br><span class="line">    System.out.println(str);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZHONG4</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CHONG2</span><br></pre></td></tr></table></figure><h3 id="其他工具类"><a href="#其他工具类" class="headerlink" title="其他工具类"></a>其他工具类</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获得汉语拼音【首字母】</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> chines</span></span><br><span class="line"><span class="comment"> *            汉字</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getAlpha</span><span class="params">(String chines)</span> </span>&#123;</span><br><span class="line">    String pinyinName = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">char</span>[] nameChar = chines.toCharArray();</span><br><span class="line">    HanyuPinyinOutputFormat defaultFormat = <span class="keyword">new</span> HanyuPinyinOutputFormat();</span><br><span class="line">    defaultFormat.setCaseType(HanyuPinyinCaseType.UPPERCASE);</span><br><span class="line">    defaultFormat.setToneType(HanyuPinyinToneType.WITHOUT_TONE);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nameChar.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (nameChar[i] &gt; <span class="number">128</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                pinyinName += PinyinHelper.toHanyuPinyinStringArray(</span><br><span class="line">                        nameChar[i], defaultFormat)[<span class="number">0</span>].charAt(<span class="number">0</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (BadHanyuPinyinOutputFormatCombination e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            pinyinName += nameChar[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pinyinName;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将字符串中的中文转化为【拼音】,英文字符不变</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> inputString</span></span><br><span class="line"><span class="comment"> *            汉字</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getPingYin</span><span class="params">(String inputString)</span> </span>&#123;</span><br><span class="line">    HanyuPinyinOutputFormat format = <span class="keyword">new</span> HanyuPinyinOutputFormat();</span><br><span class="line">    format.setCaseType(HanyuPinyinCaseType.LOWERCASE);</span><br><span class="line">    format.setToneType(HanyuPinyinToneType.WITHOUT_TONE);</span><br><span class="line">    format.setVCharType(HanyuPinyinVCharType.WITH_V);</span><br><span class="line">    String output = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">if</span> (inputString != <span class="keyword">null</span> &amp;&amp; inputString.length() &gt; <span class="number">0</span></span><br><span class="line">            &amp;&amp; !<span class="string">"null"</span>.equals(inputString)) &#123;</span><br><span class="line">        <span class="keyword">char</span>[] input = inputString.trim().toCharArray();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; input.length; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (java.lang.Character.toString(input[i]).matches(</span><br><span class="line">                        <span class="string">"[\\u4E00-\\u9FA5]+"</span>)) &#123;</span><br><span class="line">                    String[] temp = PinyinHelper.toHanyuPinyinStringArray(</span><br><span class="line">                            input[i], format);</span><br><span class="line">                    output += temp[<span class="number">0</span>];</span><br><span class="line">                &#125; <span class="keyword">else</span></span><br><span class="line">                    output += java.lang.Character.toString(input[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (BadHanyuPinyinOutputFormatCombination e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"*"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> output;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;来源：&lt;a href=&quot;https://www.jianshu.com/p/57a6600d2862&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.jianshu.com/p/57a6600d2862&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=
      
    
    </summary>
    
      <category term="Java" scheme="/categories/Java/"/>
    
    
      <category term="汉字转拼音" scheme="/tags/%E6%B1%89%E5%AD%97%E8%BD%AC%E6%8B%BC%E9%9F%B3/"/>
    
      <category term="pinyin4j" scheme="/tags/pinyin4j/"/>
    
  </entry>
  
  <entry>
    <title>CloudStack API编程指南</title>
    <link href="/2019/07/02/CloudStack-API%E7%BC%96%E7%A8%8B%E6%8C%87%E5%8D%97/"/>
    <id>/2019/07/02/CloudStack-API编程指南/</id>
    <published>2019-07-02T02:09:30.000Z</published>
    <updated>2019-07-02T02:26:31.194Z</updated>
    
    <content type="html"><![CDATA[<p>来源：<a href="https://blog.csdn.net/u012124304/article/details/76152234" target="_blank" rel="noopener">https://blog.csdn.net/u012124304/article/details/76152234</a></p><h2 id="角色"><a href="#角色" class="headerlink" title="角色"></a>角色</h2><p>CloudStack API支持三种角色访问：</p><ol><li>根域管理员</li><li>域管理员</li><li>普通用户</li></ol><h2 id="提交API请求"><a href="#提交API请求" class="headerlink" title="提交API请求"></a>提交API请求</h2><p>所有CloudStack API请求都是以HTTP GET/POST的形式提交，一个请求包含下面三部分：</p><ul><li><code>API的URL地址：</code>即web服务API的入口地址(如： <a href="http://localhost:8080/client/api" target="_blank" rel="noopener">http://localhost:8080/client/api</a>)</li><li><code>命令：</code>你想要执行的web服务命令，如启动一个虚拟机</li><li><code>参数：</code>该命令所需要的必要或可选参数</li></ul><p>一个API请求的例子如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">http://localhost:8080/client/api</span><br><span class="line">?<span class="built_in">command</span>=deployVirtualMachine</span><br><span class="line">&amp;serviceOfferingId=1</span><br><span class="line">&amp;diskOfferingId=1</span><br><span class="line">&amp;templateId=2</span><br><span class="line">&amp;zoneId=4</span><br><span class="line">&amp;apiKey=miVr6X7u6bN_sdahOBpjNejPgEsT35eXqjB8CG20YI3yaxXcgpyuaIRmFI_EJTVwZ0nUkkJbPmY3y2bciKwFQ</span><br><span class="line">&amp;signature=Lxx1DM40AjcXU%2FcaiK8RAP0O1hU%3D</span><br><span class="line"></span><br><span class="line"><span class="comment">#第1行就是CloudStack API的URL； </span></span><br><span class="line"><span class="comment">####第2行表示我们想要执行的命令； </span></span><br><span class="line"><span class="comment">###第3-6行是该命令所需的参数，命令和参数的详情具体可以参考API文档； </span></span><br><span class="line"><span class="comment">##第7行是唯一标识用户的账户的API Key； </span></span><br><span class="line"><span class="comment">#第8行是用来认证用户账户执行API命令权限的签名的哈希值</span></span><br></pre></td></tr></table></figure><h2 id="API请求的签名"><a href="#API请求的签名" class="headerlink" title="API请求的签名"></a>API请求的签名</h2><p>不管你是通过HTTP还是HTTPS的方式访问CloudStack API，都必须对请求进行签名从而让CloudStack能确认调用者已经被认证和授权执行该命令。在进行签名之前先确认你拥有API Key和管理员提供给你的账户的私钥。 </p><p>以上面的API请求为例子，每个API请求都包含以下几个部分：</p><ul><li><code>基本的URL：</code><a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a></li><li><code>API的路径：</code>处理请求的API Servlet的路径：/client/api?</li><li><code>命令字符串：</code>包括命令，命令的参数以及标志用户账户的API Key，需要注意的是，参数的键是不区分大小写的，而参数的值是区分大小写的</li><li><code>签名：</code>使用用户的私钥和HMAC SHA-1哈希算法生成的签名</li></ul><p><strong>生成签名的步骤：</strong></p><ol><li><p>命令字符串中的每个键值对<code>（以&amp;分隔开）</code>，URL对每个值进行编码从而使其能通过HTTP GET安全地发送</p></li><li><p>将命令字符串的字母全部<code>转换成小写</code>，并且对键值对按<code>字母顺序进行排序</code>，结果类似下面的形式： </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">apikey=mivr6x7u6bn_sdahobpjnejpgest35exq-jb8cg20yi3yaxxcgpyuairmfi_ejtvwz0nukkjbpmy3y2bcikwfq</span><br><span class="line">&amp;<span class="built_in">command</span>=deployvirtualmachine</span><br><span class="line">&amp;diskofferingid=1</span><br><span class="line">&amp;serviceofferingid=1</span><br><span class="line">&amp;templateid=2</span><br><span class="line">&amp;zoneid=4</span><br></pre></td></tr></table></figure></li><li><p>将排序好的命令字符串和用户的私钥使用<code>HMAC SHA-1哈希算法</code>进行编码，在使用<code>Base64</code>将结果字节数组编码成<code>UTF-8</code>形式，最终得到的签名为：<code>Lxx1DM40AjcXU%2FcaiK8RAP0O1hU%3D</code></p></li></ol><h2 id="设置API调用失效时间"><a href="#设置API调用失效时间" class="headerlink" title="设置API调用失效时间"></a>设置API调用失效时间</h2><p>在不安全的通道如HTTP上，我们可以设置一个API调用逾期时间戳来防止重播攻击（replay attacks），服务器会追踪这个时间戳，并拒绝超过这个期限的后续的所有API调用。<br>在API请求中加入以下参数可实现这个特性：</p><ul><li>signatureVersion=3</li><li>expires=YYYY-MM-DDThh:mm:ssZ</li></ul><h2 id="限制API调用频率"><a href="#限制API调用频率" class="headerlink" title="限制API调用频率"></a>限制API调用频率</h2><p>避免对管理服务器的恶意攻击，防止性能下降以及对所有账户提供一致性，当API调用超过一定阈值后会向这些调用返回错误信息。调用者需要等待一段时间后重试一下。可以通过一下全局参数来设置API的调用频率限制：</p><ol><li>api.throttling.enabled：默认为false，即不限制API调用频率</li><li>api.throttling.interval ：以秒为单位</li><li>api.throttling.max：每个间隔周期接受的最大请求数</li><li>api.throttling.cachesize：存放API调用计数器的缓存，每个账户需要一个cache来存放该账户运行的API总数</li></ol><p>API调用频率限制的不足之处：</p><ul><li>存在多个管理服务器的时候，不同管理服务器的cache之间不是同步的，所以可能出现允许通过的请求数比设置的值要大的情况，最糟糕的情况下可能出现允许通过的请求数为：限制值*管理服务器数量</li><li>尽管如此，CloudStack还是可以有效地避免恶意攻击导致的服务拒绝</li></ul><h2 id="API响应"><a href="#API响应" class="headerlink" title="API响应"></a>API响应</h2><p>CloudStack支持两种响应格式：<code>XML和JSON</code>，默认的响应是XML，可以在请求URL中使用<code>&amp;response=json</code>来设置JSON格式的响应。<code>使用JSON格式时，如果一个响应的键没有值，则该键不会出现在响应中，而XML仍会返回一个空的元素。</code></p><h2 id="最大返回结果页"><a href="#最大返回结果页" class="headerlink" title="最大返回结果页"></a>最大返回结果页</h2><p>对于每个云，一个命令在一个页面中返回的结果数有一个默认的上限，以此来防止云服务器过载和防止DOS攻击。<br>每个云的默认上限值是不同的，通过全局参数default.page.size来配置。如果云上有许多用户运行了许多虚拟机的话，可以把这个值设置大一点，但要小心不要设置得太大了。</p><h2 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h2><p>如果在处理一个API请求的时候发生了错误，会返回特定格式的响应。每个错误信息响应包含一个错误代码和一个文本描述可能出错的原因。<br>如果用户的签名错误或没有权限导致请求被拒绝会返回一个HTTP 401错误</p><h2 id="异步命令"><a href="#异步命令" class="headerlink" title="异步命令"></a>异步命令</h2><p>异步命令可以隐式地执行那些耗时很长的任务，如创建一个快照。它和同步命令有以下几点不同：</p><ul><li>API引用以一个a来区分</li><li>提交后会马上返回一个任务ID</li><li>如果是创建资源的命令，在返回任务ID的同时还会返回资源ID</li></ul><p>使用异步命令的关键在于Job ID，它在命令被执行后马上返回。使用Job ID，通过queryAsyncJobResult命令我们可以周期性地检查任务的状态，这个命令返回3种可能的任务状态</p><ul><li>0-Job表示程序还在进行</li><li>1-Job表示成功地完成了</li><li>2-Job表示执行失败</li></ul><p>查询命令执行状态的命令：<code>command=queryAsyncJobResult&amp;jobId=1</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;来源：&lt;a href=&quot;https://blog.csdn.net/u012124304/article/details/76152234&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/u012124304/ar
      
    
    </summary>
    
      <category term="CloudStack" scheme="/categories/CloudStack/"/>
    
    
      <category term="云计算" scheme="/tags/%E4%BA%91%E8%AE%A1%E7%AE%97/"/>
    
      <category term="api" scheme="/tags/api/"/>
    
  </entry>
  
  <entry>
    <title>VPS搭建属于自己的SS代理</title>
    <link href="/2019/06/10/VPS%E6%90%AD%E5%BB%BA%E5%B1%9E%E4%BA%8E%E8%87%AA%E5%B7%B1%E7%9A%84SS%E4%BB%A3%E7%90%86/"/>
    <id>/2019/06/10/VPS搭建属于自己的SS代理/</id>
    <published>2019-06-10T08:09:06.000Z</published>
    <updated>2019-06-10T08:40:53.564Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装shadowsocks"><a href="#安装shadowsocks" class="headerlink" title="安装shadowsocks"></a>安装shadowsocks</h2><h3 id="第一条命令"><a href="#第一条命令" class="headerlink" title="第一条命令"></a>第一条命令</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载脚本shadowsocks.sh</span></span><br><span class="line">wget --no-check-certificate https://raw.githubusercontent.com/teddysun/shadowsocks_install/master/shadowsocks.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 等待下载完成...</span></span><br></pre></td></tr></table></figure><h3 id="第二条命令"><a href="#第二条命令" class="headerlink" title="第二条命令"></a>第二条命令</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 为shadowsocks.sh添加执行权限</span></span><br><span class="line">chmod +x shadowsocks.sh</span><br></pre></td></tr></table></figure><h3 id="第三条命令"><a href="#第三条命令" class="headerlink" title="第三条命令"></a>第三条命令</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./shadowsocks.sh 2&gt;&amp;1 | tee shadowsocks.log</span><br><span class="line"></span><br><span class="line"><span class="comment"># 中间会提示我们输入一些信息</span></span><br></pre></td></tr></table></figure><p><strong>中间会提示你输入你的SS server的账号，和端口。不输入就是默认。跑完命令后会出来你的SS客户端的信息。特别注意，由于iphone端的目前只支持到<code>cfb</code>，所以我们选择<code>aes-256-cfb</code>，即7，这一步按回车继续然后需要几分钟的安装过程，请耐心等待出现下面的画面！</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/shadowsocks001.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装shadowsocks&quot;&gt;&lt;a href=&quot;#安装shadowsocks&quot; class=&quot;headerlink&quot; title=&quot;安装shadowsocks&quot;&gt;&lt;/a&gt;安装shadowsocks&lt;/h2&gt;&lt;h3 id=&quot;第一条命令&quot;&gt;&lt;a href=&quot;#第一条命
      
    
    </summary>
    
      <category term="shadowsocks" scheme="/categories/shadowsocks/"/>
    
    
      <category term="vps" scheme="/tags/vps/"/>
    
      <category term="shadowsocks" scheme="/tags/shadowsocks/"/>
    
      <category term="翻墙" scheme="/tags/%E7%BF%BB%E5%A2%99/"/>
    
  </entry>
  
  <entry>
    <title>Centos7.x中磁盘管理及扩展</title>
    <link href="/2019/05/28/Centos7-x%E4%B8%AD%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%E5%8F%8A%E6%89%A9%E5%B1%95/"/>
    <id>/2019/05/28/Centos7-x中磁盘管理及扩展/</id>
    <published>2019-05-28T06:51:39.000Z</published>
    <updated>2019-09-18T07:42:53.704Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前提要求："><a href="#前提要求：" class="headerlink" title="前提要求："></a>前提要求：</h2><p>虚拟机：centos7.x</p><p>在安装Centos系统时，磁盘选择为<code>LVM</code>逻辑卷。当选择为LVM后才能创建逻辑卷等（必须）</p><p>数据格式选择的是<code>xfs</code>，很多讲解使用的是ext3，但以后xfs的优势会比ext越来越大。（可选）</p><p>LVM是Logical Volume Manager（逻辑卷管理）的简写，它是Linux环境下对硬盘分区进行管理的一种机制。LVM是建立在硬盘和分区上的逻辑层，它允许跨硬盘、分区创建逻辑卷并创建文件系统，可以很方便执行<code>增加、扩展、删除</code>等操作。</p><h2 id="物理卷（PV）"><a href="#物理卷（PV）" class="headerlink" title="物理卷（PV）"></a>物理卷（PV）</h2><p>物理卷（Physical Volume,PV）：就是指硬盘分区，也可以是整个硬盘或已创建的软RAID，是LVM的基本存储设备。在创建逻辑卷之前需要先创建物理卷，然后将多个物理卷组合创建卷组，最后在卷组的基础上创建逻辑卷。</p><p>可以将空白硬盘或分区加入主机，系统识别到新的硬盘sdb后，使用pvcreate对硬盘创建PV。</p><p>添加新硬盘或直接扩展分区的方式：`直接扩展/或直接新添加一个硬盘</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lsblk<span class="comment">#列出系统上所有的磁盘</span></span><br><span class="line">df -h<span class="comment">#检查文件系统的磁盘空间占用情况</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/lvm1.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>可以看出磁盘vda还有200多G的空白磁盘没有挂载。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">fdisk /dev/vda<span class="comment">#回车</span></span><br><span class="line">p<span class="comment">#回车</span></span><br><span class="line">n<span class="comment">#回车</span></span><br><span class="line">默认   <span class="comment">#回车</span></span><br><span class="line">默认   <span class="comment">#回车</span></span><br><span class="line">默认   <span class="comment">#回车</span></span><br><span class="line">默认   <span class="comment">#回车</span></span><br><span class="line">t<span class="comment">#回车</span></span><br><span class="line">默认   <span class="comment">#回车</span></span><br><span class="line">8e<span class="comment">#回车</span></span><br><span class="line">p<span class="comment">#回车</span></span><br><span class="line">w<span class="comment">#回车</span></span><br><span class="line">reboot<span class="comment">#回车</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/lvm2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/lvm3.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pvcreate /dev/vda3<span class="comment">#创建物理卷</span></span><br><span class="line">pvdisplay</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/lvm4.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="卷组（VG）"><a href="#卷组（VG）" class="headerlink" title="卷组（VG）"></a>卷组（VG）</h2><p>卷组（Volume Group,VG）：是由一个或多个物理卷所组成的存储池，在卷组上能创建一个或多个逻辑卷。现在使用<code>vgcreate</code>命令对上文创建的PV（单个物理卷）创建卷组。 </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vgcreate -s 10M vg0 /dev/vda3<span class="comment">#创建卷组vg0,指定物理块PE大小10M,并将pv:/dev/vda3加入vg0</span></span><br><span class="line">vgdisplay<span class="comment"># 查看所有卷组的信息.后面接具体卷组名,可查看指定卷组信息</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/lvm5.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvdisplay<span class="comment"># 查看所当前物理卷的信息.后面可接具体物理卷设备,可查看指定物理卷信息</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/lvm6.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="创建逻辑卷（LV）"><a href="#创建逻辑卷（LV）" class="headerlink" title="创建逻辑卷（LV）"></a>创建逻辑卷（LV）</h2><p>逻辑卷（Logical Volume,LV）：类似于非LVM系统中的硬盘分区，它建立在卷组之上，是一个标准的块设备，在逻辑卷之上可以建立文件系统。可以使用<code>lvcreate</code>命令创建逻辑卷 </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">[root@hewanli-mysql ~]<span class="comment"># lvcreate -n lv0 -l 100%vg vg0#使用vg0的全部空间创建逻辑卷lv0</span></span><br><span class="line">  Logical volume <span class="string">"lv0"</span> created.</span><br><span class="line">[root@hewanli-mysql ~]<span class="comment"># lvdisplay</span></span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/vg0/lv0</span><br><span class="line">  LV Name                lv0</span><br><span class="line">  VG Name                vg0</span><br><span class="line">  LV UUID                uz1Ej1-mC6D-9MBf-Sdbc-2UQS-frMm-AsuzbC</span><br><span class="line">  LV Write Access        <span class="built_in">read</span>/write</span><br><span class="line">  LV Creation host, time hewanli-mysql, 2019-05-28 03:44:32 -0400</span><br><span class="line">  LV Status              available</span><br><span class="line">  <span class="comment"># open                 0</span></span><br><span class="line">  LV Size                249.99 GiB</span><br><span class="line">  Current LE             25599</span><br><span class="line">  Segments               1</span><br><span class="line">  Allocation             inherit</span><br><span class="line">  Read ahead sectors     auto</span><br><span class="line">  - currently <span class="built_in">set</span> to     8192</span><br><span class="line">  Block device           253:3</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pvdisplay</span><br><span class="line">lsblk -f /dev/vda</span><br><span class="line"><span class="comment">#会在/dev下生成一个新的设备文件：</span></span><br><span class="line">ll /dev/vg0/lv0</span><br><span class="line">ll /dev/dm-0</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/lvm7.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="文件系统"><a href="#文件系统" class="headerlink" title="文件系统"></a>文件系统</h2><p>在逻辑卷lv0创建完成后还需要创建文件系统并挂载到指定目录才能够使用,当然还需要将挂载信息写入/etc/fstab文件 </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">mkfs.xfs /dev/vg0/lv0<span class="comment"># 创建文件系统</span></span><br><span class="line">lsblk /dev/vda -f</span><br><span class="line">lsblk /dev/vg0/lv0 -f</span><br><span class="line"><span class="comment"># 将逻辑卷挂载到指定目录（/data），如果改为其他，则以下所有/data都要改成对应的目录（根目录/不可以）</span></span><br><span class="line"><span class="keyword">if</span>(/data目录不存在)&#123;</span><br><span class="line">mkdir /data &amp;&amp; mount /dev/vg0/lv0 /data</span><br><span class="line">&#125; <span class="keyword">else</span>&#123;</span><br><span class="line">mount /dev/vg0/lv0 /data</span><br><span class="line">&#125;</span><br><span class="line">df -T<span class="comment"># 查看挂载点</span></span><br><span class="line">blkid /dev/vg0/lv0<span class="comment">#注意UUID，下面命令会使用</span></span><br><span class="line">df -T /dev/vg0/lv0</span><br><span class="line"><span class="built_in">echo</span> <span class="string">"UUID=2fb5642b-0167-4709-9d35-85a407b4801a /data                 xfs    defaults        0 0"</span> &gt;&gt; /etc/fstab<span class="comment">#UUID填自己的（上面命令结果有输出）</span></span><br><span class="line">cat /etc/fstab | egrep <span class="string">"UUID"</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/lvm8.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lsblk<span class="comment">#列出系统上所有的磁盘</span></span><br><span class="line">df -h<span class="comment">#检查文件系统的磁盘空间占用情况</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/lvm9.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="扩展逻辑卷"><a href="#扩展逻辑卷" class="headerlink" title="扩展逻辑卷"></a>扩展逻辑卷</h2><p>我们可以很方便的多逻辑卷进行扩展，不论是使用新的空白磁盘还是已有的空白分区。其大致实现原理为：对空白分区创建物理卷，然后将物理卷加入到需要扩展逻辑卷所在的卷组，最后扩大逻辑卷空间。如果逻辑卷所在的卷组还有空闲的空间（PE）可被使用且足够大，则甚至不需要另外的分区或者磁盘。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsblk -f /dev/vda</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前提要求：&quot;&gt;&lt;a href=&quot;#前提要求：&quot; class=&quot;headerlink&quot; title=&quot;前提要求：&quot;&gt;&lt;/a&gt;前提要求：&lt;/h2&gt;&lt;p&gt;虚拟机：centos7.x&lt;/p&gt;
&lt;p&gt;在安装Centos系统时，磁盘选择为&lt;code&gt;LVM&lt;/code&gt;逻辑卷
      
    
    </summary>
    
      <category term="Linux" scheme="/categories/Linux/"/>
    
    
      <category term="Centos7.x" scheme="/tags/Centos7-x/"/>
    
      <category term="磁盘管理及扩展" scheme="/tags/%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86%E5%8F%8A%E6%89%A9%E5%B1%95/"/>
    
  </entry>
  
  <entry>
    <title>Gson使用技巧</title>
    <link href="/2019/05/22/Gson%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>/2019/05/22/Gson使用技巧/</id>
    <published>2019-05-22T07:29:44.000Z</published>
    <updated>2019-05-22T07:36:30.343Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Gson获取json字符串中key对应的值"><a href="#Gson获取json字符串中key对应的值" class="headerlink" title="Gson获取json字符串中key对应的值"></a>Gson获取json字符串中key对应的值</h2><p>字符串 ：</p><p>//得到服务器返回的具体内容</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> String res = response.body().string();</span><br></pre></td></tr></table></figure><p>例1：<code>{&quot;code&quot;:100,&quot;msg&quot;:&quot;处理成功！&quot;,&quot;extend&quot;:{&quot;jsonString&quot;:{&quot;userId&quot;:1,&quot;userName&quot;:&quot;123&quot;,&quot;userPwd&quot;:&quot;123&quot;}}}</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">jsonObject = (JsonObject) <span class="keyword">new</span> JsonParser().parse(res).getAsJsonObject();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取  code：</span></span><br><span class="line">jsonObject.get(<span class="string">"code"</span>).getAsInt();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取  userName：</span></span><br><span class="line">jsonObject.get(<span class="string">"extend"</span>)</span><br><span class="line">    .getAsJsonObject().get(<span class="string">"jsonString"</span>)</span><br><span class="line">    .getAsJsonObject().get(<span class="string">"userName"</span>)</span><br><span class="line">    .getAsString()</span><br></pre></td></tr></table></figure><p>例2：<code>{&quot;code&quot;:100,&quot;msg&quot;:&quot;处理成功！&quot;,&quot;extend&quot;:{&quot;jsonString&quot;:[{&quot;userId&quot;:1,&quot;userName&quot;:&quot;123&quot;,&quot;userPwd&quot;:&quot;123&quot;}]}}</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">jsonObject = (JsonObject) <span class="keyword">new</span> JsonParser().parse(res).getAsJsonObject();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取  code：</span></span><br><span class="line">String code = jsonObject.get(<span class="string">"code"</span>).getAsInt();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取  userName：</span></span><br><span class="line">String userName = jsonObject.get(<span class="string">"extend"</span>)</span><br><span class="line">    .getAsJsonObject().get(<span class="string">"jsonString"</span>)</span><br><span class="line">    .getAsJsonArray().get(<span class="number">0</span>)</span><br><span class="line">    .getAsJsonObject().get(<span class="string">"userName"</span>)</span><br><span class="line">    .getAsString()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Gson获取json字符串中key对应的值&quot;&gt;&lt;a href=&quot;#Gson获取json字符串中key对应的值&quot; class=&quot;headerlink&quot; title=&quot;Gson获取json字符串中key对应的值&quot;&gt;&lt;/a&gt;Gson获取json字符串中key对应的值&lt;/
      
    
    </summary>
    
      <category term="Gson" scheme="/categories/Gson/"/>
    
    
      <category term="Java" scheme="/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>java调用外部接口</title>
    <link href="/2019/05/22/java%E8%B0%83%E7%94%A8%E5%A4%96%E9%83%A8%E6%8E%A5%E5%8F%A3/"/>
    <id>/2019/05/22/java调用外部接口/</id>
    <published>2019-05-22T07:24:59.000Z</published>
    <updated>2019-05-22T07:28:42.223Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java调用外部接口的方法，最终返回接口response的信息"><a href="#Java调用外部接口的方法，最终返回接口response的信息" class="headerlink" title="Java调用外部接口的方法，最终返回接口response的信息"></a>Java调用外部接口的方法，最终返回接口<code>response</code>的信息</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">String strURL = <span class="string">"这里是你要调用的接口地址"</span>;</span><br><span class="line">URL url = <span class="keyword">new</span> URL(strURL);</span><br><span class="line">HttpURLConnection httpConn = (HttpURLConnection)url.openConnection();</span><br><span class="line">httpConn.setRequestMethod(<span class="string">"GET"</span>);</span><br><span class="line">httpConn.connect();</span><br><span class="line">BufferedReader reader = <span class="keyword">new</span> BufferedReader(</span><br><span class="line">    <span class="keyword">new</span> InputStreamReader(httpConn.getInputStream()));</span><br><span class="line">String line;</span><br><span class="line">StringBuffer buffer = <span class="keyword">new</span> StringBuffer();</span><br><span class="line"><span class="keyword">while</span> ((line = reader.readLine()) != <span class="keyword">null</span>) &#123;</span><br><span class="line">    buffer.append(line);</span><br><span class="line">&#125;</span><br><span class="line">reader.close();</span><br><span class="line">httpConn.disconnect();</span><br><span class="line"></span><br><span class="line">System.out.println(buffer.toString());</span><br></pre></td></tr></table></figure><p><strong>最终这里<code>buffer.toString();</code>就是接口<code>response</code>的值</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Java调用外部接口的方法，最终返回接口response的信息&quot;&gt;&lt;a href=&quot;#Java调用外部接口的方法，最终返回接口response的信息&quot; class=&quot;headerlink&quot; title=&quot;Java调用外部接口的方法，最终返回接口response的信
      
    
    </summary>
    
      <category term="调用外部接口" scheme="/categories/%E8%B0%83%E7%94%A8%E5%A4%96%E9%83%A8%E6%8E%A5%E5%8F%A3/"/>
    
    
      <category term="Java" scheme="/tags/Java/"/>
    
  </entry>
  
  <entry>
    <title>Jboss在Linux下的使用技巧</title>
    <link href="/2019/05/10/Jboss%E5%9C%A8Linux%E4%B8%8B%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>/2019/05/10/Jboss在Linux下的使用技巧/</id>
    <published>2019-05-10T08:52:52.000Z</published>
    <updated>2019-05-10T08:52:52.601Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Linux下远程连接MySQL数据库</title>
    <link href="/2019/05/08/Linux%E4%B8%8B%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5MySQL%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    <id>/2019/05/08/Linux下远程连接MySQL数据库/</id>
    <published>2019-05-08T15:43:12.000Z</published>
    <updated>2019-08-21T09:05:34.326Z</updated>
    
    <content type="html"><![CDATA[<ol><li><p><strong>在服务器端开启远程访问</strong></p><p>首先进入mysql数据库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p</span><br><span class="line">Enter password: <span class="comment">#输入密码</span></span><br></pre></td></tr></table></figure><p>然后输入下面两个命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; grant all privileges on *.* to <span class="string">'root'</span>@<span class="string">'%'</span> identified by <span class="string">'password'</span>;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果该命令报错“ERROR 1819 (HY000): Your password does not satisfy the current policy requirements”，就先执行以下两个命令后再执行上面的命令</span></span><br><span class="line">mysql&gt; <span class="built_in">set</span> global validate_password_policy=0;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">set</span> global validate_password_length=1;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; flush privileges;</span><br></pre></td></tr></table></figure><ul><li><p>第一个*是数据库，可以改成允许访问的数据库名称</p></li><li><p>第二个<em> 是数据库的表名称，</em>代表允许访问任意的表</p></li><li>root代表远程登录使用的用户名，可以自定义</li><li>%代表允许任意ip登录，如果你想指定特定的IP，可以把%替换掉就可以了</li><li><code>password</code>代表<code>远程登录时使用的密码</code>，可以自定义</li><li><code>flush privileges;</code>这是让权限立即生效</li></ul></li><li><p><strong>修改<code>my.cnf</code>配置文件</strong></p><p>这个是mysql的配置文件，如果你无标题文章找不到在哪里的话，可以输入<code>find /* -name my.cnf</code> 找到<br>通过vim编辑该文件，找到<code>bind-address = 127.0.0.1</code>这一句（如果没有就不管），然后在前面加个#号注释掉，保存退出</p></li><li><p><strong>重启服务</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">service mysql restart</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">systemctl restart mysqld</span><br></pre></td></tr></table></figure></li><li><p><strong>开放3306端口（端口以自己实际情况为准）</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看开发端口情况</span></span><br><span class="line">firewall-cmd --list-all</span><br><span class="line"><span class="comment"># 开发3306端口</span></span><br><span class="line">firewall-cmd --zone=public --add-port=3306/tcp --permanent</span><br><span class="line"><span class="comment"># 重启防火墙</span></span><br><span class="line">systemctl restart firewalld</span><br></pre></td></tr></table></figure></li><li><p><strong>在本地远程连接</strong></p><p>在终端输入：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -h 服务器ip地址 -P 3306 -u root -p</span><br></pre></td></tr></table></figure><p>然后输入密码即可。</p><p>也可以使用连接工具连接，例如<code>Navicat</code></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;在服务器端开启远程访问&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;首先进入mysql数据库&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class
      
    
    </summary>
    
      <category term="MySQL" scheme="/categories/MySQL/"/>
    
    
      <category term="Linux" scheme="/tags/Linux/"/>
    
      <category term="远程连接" scheme="/tags/%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJIDEA tomcat在浏览器js乱码问题解决</title>
    <link href="/2019/04/28/IntelliJIDEA-tomcat%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8js%E4%B9%B1%E7%A0%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"/>
    <id>/2019/04/28/IntelliJIDEA-tomcat在浏览器js乱码问题解决/</id>
    <published>2019-04-28T03:30:05.000Z</published>
    <updated>2019-04-28T03:57:34.814Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h2 id="在配置Tomcat的时候添加参数"><a href="#在配置Tomcat的时候添加参数" class="headerlink" title="在配置Tomcat的时候添加参数"></a>在配置Tomcat的时候添加参数</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Dfile.encoding=UTF-8</span><br></pre></td></tr></table></figure><p><img src="/img/idea-tomcat.png" alt=""></p></li><li><h2 id="修改idea64-exe-vmoptions和idea-exe-vmoptions文件"><a href="#修改idea64-exe-vmoptions和idea-exe-vmoptions文件" class="headerlink" title="修改idea64.exe.vmoptions和idea.exe.vmoptions文件"></a>修改<code>idea64.exe.vmoptions</code>和<code>idea.exe.vmoptions</code>文件</h2><p>找到idea安装目录bin目录下如下图所示两个文件，用编辑器打开，在文件末尾添加 <code>-Dfile.encoding=UTF-8</code> ，然后<code>重启idea</code>，再打开浏览器就会发现中文已经可以正常显示了</p><p><img src="/img/idea配置.png" alt=""></p><p><img src="/img/idea-v.png" alt=""></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h2 id=&quot;在配置Tomcat的时候添加参数&quot;&gt;&lt;a href=&quot;#在配置Tomcat的时候添加参数&quot; class=&quot;headerlink&quot; title=&quot;在配置Tomcat的时候添加参数&quot;&gt;&lt;/a&gt;在配置Tomcat的时候添加参数&lt;/h2&gt;&lt;figure 
      
    
    </summary>
    
      <category term="IDEA" scheme="/categories/IDEA/"/>
    
    
      <category term="IDEA" scheme="/tags/IDEA/"/>
    
      <category term="Tomcat" scheme="/tags/Tomcat/"/>
    
      <category term="浏览器" scheme="/tags/%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
    
      <category term="中文乱码" scheme="/tags/%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>手把手教你用frp实现内网穿透</title>
    <link href="/2019/04/12/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E7%94%A8frp%E5%AE%9E%E7%8E%B0%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    <id>/2019/04/12/手把手教你用frp实现内网穿透/</id>
    <published>2019-04-12T07:26:19.000Z</published>
    <updated>2019-04-16T09:16:39.538Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议。</p></blockquote><p><strong>数据准备：</strong></p><ul><li>公网IP: X.X.X.X</li><li>内网电脑使用的是win10-64系统</li><li>公网电脑为linux-64系统。</li></ul><h2 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h2><h3 id="文件下载"><a href="#文件下载" class="headerlink" title="文件下载"></a>文件下载</h3><p>下载地址：<a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noopener">frp下载</a></p><p>具有公网IP的电脑将作为frp服务端(frps)，首先去项目地址的releases页面下载与服务端系统匹配的文件并解压</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/frp-linux.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入home目录</span></span><br><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line"><span class="comment"># 下载对应的frp作为服务端</span></span><br><span class="line">wget https://github.com/fatedier/frp/releases/download/v0.26.0/frp_0.26.0_linux_amd64.tar.gz</span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">tar -zxvf frp_0.26.0_linux_amd64.tar.gz</span><br></pre></td></tr></table></figure><h3 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入frp</span></span><br><span class="line"><span class="built_in">cd</span> frp_0.26.0_linux_amd64/</span><br><span class="line"><span class="comment"># 编辑frps.ini配置文件</span></span><br><span class="line">vim frps.ini</span><br></pre></td></tr></table></figure><p>编辑frps.ini为以下内容：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/frp-配置.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p><code>bind_port</code>为客户端与服务端进行通信的端口。其它更丰富的配置可参考frps_full.ini和项目帮助文档。</p><h3 id="启动服务端"><a href="#启动服务端" class="headerlink" title="启动服务端"></a>启动服务端</h3><p>进行到解压后的frp目录，然后通过<code>./frps -c frps.ini</code>命令即可启动服务端，如下图所示：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home/frp_0.26.0_linux_amd64/</span><br><span class="line">./frps -c frps.ini</span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/frp-启动.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="设置开机启动和后台运行"><a href="#设置开机启动和后台运行" class="headerlink" title="设置开机启动和后台运行"></a>设置开机启动和后台运行</h3><p>上一步中的frps占据了整个命令窗口，所以接下来要考虑如何让它在后台运行并且开机自启：<br>首先通过<code>vim /etc/systemd/system/frps.service</code>命令新建文件并写入以下内容:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=frps daemon</span><br><span class="line">After=syslog.target  network.target</span><br><span class="line">Wants=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/home/frp_0.26.0_linux_amd64/frps -c /home/frp_0.26.0_linux_amd64/frps.ini</span><br><span class="line">Restart= always</span><br><span class="line">RestartSec=1min</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><p><strong>注意<code>ExecStart</code>中要配置成自己的路径.</strong><br>然后使用<code>systemctl start|stop|restart frps</code>即可操作frps, 用<code>systemctl enable frps</code>即可将frps设置为开机启动。</p><h2 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h2><h3 id="文件下载-1"><a href="#文件下载-1" class="headerlink" title="文件下载"></a>文件下载</h3><p>具有内网IP的电脑将作为客户端(frpc)，在releases页面下载<code>frp_0.16.0_windows_amd64.zip</code>解压</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/frp-win.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="编辑配置文件-1"><a href="#编辑配置文件-1" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><p>编辑frpc.ini为以下内容：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[common]</span><br><span class="line">server_addr = X.X.X.X</span><br><span class="line">server_port = 7000</span><br><span class="line"></span><br><span class="line">[ssh]</span><br><span class="line"><span class="built_in">type</span> = tcp</span><br><span class="line">local_ip = 127.0.0.1</span><br><span class="line">local_port = 22</span><br><span class="line">remote_port = 6000</span><br></pre></td></tr></table></figure><p><strong>注意：</strong></p><ol><li>sever_addr配置为公网电脑的IP，server_port与frps.ini中的bind_port一致。</li><li>ssh为远程桌面的配置。</li></ol><h3 id="启动服务端-1"><a href="#启动服务端-1" class="headerlink" title="启动服务端"></a>启动服务端</h3><p>双击frpc.exe或者用命令 <code>frpc -c frpc.ini</code>即可启动客户端，如下图所示：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/frp-win-启动.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p><strong>注意：</strong>这时候很可能启动不了，一般情况是因为服务器端（linux）7000端口没开放：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看端口开放情况</span></span><br><span class="line">firewall-cmd --list-all</span><br><span class="line"><span class="comment"># 添加开放端口</span></span><br><span class="line">firewall-cmd --zone=public --add-port=7000/tcp --permanent</span><br><span class="line"><span class="comment"># 重启防火墙</span></span><br><span class="line">systemctl restart firewalld</span><br></pre></td></tr></table></figure><p>然后再执行<code>frpc -c frpc.ini</code>就可以正常启动连接了。</p><h3 id="设置开机启动和后台运行-1"><a href="#设置开机启动和后台运行-1" class="headerlink" title="设置开机启动和后台运行"></a>设置开机启动和后台运行</h3><p>同样的道理，我们也需要对客户端设置后台运行和开机自启。借助 <a href="https://github.com/kohsuke/winsw/releases" target="_blank" rel="noopener">winsw</a> 工具可以将frpc注册为windows系统中的服务。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/winsw.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>下载winsw最新版，为了方便将其重命名为winsw.exe, 将该文件和frpc.exe放在一起,</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/winsw2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>然后新建winsw.xml写入以下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">service</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>frp<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>frp<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">description</span>&gt;</span>用frp发布本地电脑网站到外网<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">executable</span>&gt;</span>frpc<span class="tag">&lt;/<span class="name">executable</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">arguments</span>&gt;</span>-c frpc.ini<span class="tag">&lt;/<span class="name">arguments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">logmode</span>&gt;</span>reset<span class="tag">&lt;/<span class="name">logmode</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">service</span>&gt;</span></span><br></pre></td></tr></table></figure><p>下载winsw后，在window上安装 <a href="https://www.microsoft.com/zh-cn/download/confirmation.aspx?id=17718" target="_blank" rel="noopener">.net framework4</a> ，否则后面会出问题。（很重要）</p><p>然后使用<code>winsw install</code>和<code>winsw start</code>命令即可将frpc安装为系统服务。</p><p>win+r后通过<code>services.msc</code>进入到服务列表页面找到frp服务。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/services.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;frp 是一个可用于内网穿透的高性能的反向代理应用，支持 tcp, udp, http, https 协议。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;数据准备：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;公网IP: X.X.X.
      
    
    </summary>
    
      <category term="内网穿透" scheme="/categories/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
    
      <category term="Linux" scheme="/tags/Linux/"/>
    
      <category term="frp" scheme="/tags/frp/"/>
    
      <category term="Windows" scheme="/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>CloudStack介绍</title>
    <link href="/2019/04/04/CloudStack%E4%BB%8B%E7%BB%8D/"/>
    <id>/2019/04/04/CloudStack介绍/</id>
    <published>2019-04-04T06:27:56.000Z</published>
    <updated>2019-06-13T03:19:21.781Z</updated>
    
    <content type="html"><![CDATA[<p>基本上，云计算只是一种把 IT 资源当作服务来提供的手段。几乎所有 IT 资源都可以作为云服务来提供：应用程序、计算能力、存储容量、联网、编程工具，以至于通信服务和协作工具。</p><p>云计算最早为 Google、Amazon 等其他扩建基础设施的大型互联网服务提供商所采用。于是产生一种架构：大规模扩展、水平分布的系统资源，抽象为虚拟 IT 服务，并作为持续配置、合用的资源进行管理。</p><p><strong>就最终用户而言</strong>，云计算意味着没有硬件购置成本、没有需要管理的软件许可证或升级、不需要雇佣新的员工或咨询人员、不需要租赁设施、没有任何种类的基建投资，而且还没有隐性成本。只是一种用仪表测量出来的、根据使用情况支付的订购费或固定的订购费。只是用您所需的量，而且只按使用量付费。</p><p>云计算结构图如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/%E4%BA%91%E8%AE%A1%E7%AE%97%E7%BB%93%E6%9E%84.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="基础设施当做服务（IaaS）"><a href="#基础设施当做服务（IaaS）" class="headerlink" title="基础设施当做服务（IaaS）"></a>基础设施当做服务（IaaS）</h3><p>基础设施当作服务 (IaaS) 处于最低层级，而且是一种作为标准化服务在网上提供基本存储和计算能力的手段。服务器、存储系统、交换机、路由器和其他系统协作 (例如，通过虚拟化技术) 处理特定类型的工作负载 — 从批处理到峰值负载期间的服务器/存储扩大。</p><p>最著名的商业示例是 Amazon Web 服务 (AWS)，其 EC2 和 S3 服务分别提供基本计算和存储服务。国内代表阿里云、腾讯云、百度云、金山云等。</p><p>优势：</p><ul><li>利用率更高 — 在虚拟化之前，企业数据中心的服务器和存储利用率一般平均不到 50% (事实上，通常利用率为 10% 到 15%)。通过虚拟化，可以把工作负载封装一并转移到空闲或使用不足的系统，这就意味着可以整合现有系统，因而可以延迟或避免购买更多服务器容量。</li><li>资源整合 — 虚拟化使得整合多个 IT 资源成为可能。除服务器和存储整合之外，虚拟化提供一个整合系统架构、应用程序基础设施、数据和数据库、接口、网络、桌面系统甚至业务流程，因而可以节约成本和提高效率。</li><li>节省电能/成本 — 运行企业级数据中心所需的电能不再无限制地使用，而成本呈螺旋式上升趋势。在服务器硬件上每花一美元，就会在电费上增加一美元 (包括服务器运行和散热方面的成本)。利用虚拟化进行整合使得降低总能耗和节约大量资金成为可能。</li><li>节约空间 — 服务器膨胀仍然是多数企业数据中心面临的一个严重问题，可扩大数据中心并不总是一个良好的选择，因为每增大一平方米空间，就会平均增加很多成本。虚拟化通过把多个虚拟系统整合到较少物理系统上，可以缓解空间压力。</li><li>灾难恢复 (Disaster recovery) /业务连续 (Business Continuity) — 虚拟化可提高总体服务级利用率，并提供灾难恢复解决方案新选项。</li></ul><h3 id="CloudStack-介绍"><a href="#CloudStack-介绍" class="headerlink" title="CloudStack 介绍"></a>CloudStack 介绍</h3><p>官网：<a href="http://cloudstack.apache.org/" target="_blank" rel="noopener">http://cloudstack.apache.org/</a></p><p>CloudStack是一个开源的具有高可用性及扩展性的云计算平台CloudStack 是一个开源的云操作系统，它可以帮助用户利用自己的硬件提供类似于Amazon EC2那样的公共云服务。CloudStack可以通过组织和协调用户的虚拟化资源，构建一个和谐的环境。</p><p>CloudStack是一个开源的具有高可用性及扩展性的云计算平台CloudStack 是一个开源的云操作系统，它可以帮助用户利用自己的硬件提供类似于Amazon EC2那样的公共云服务。CloudStack可以通过组织和协调用户的虚拟化资源，构建一个和谐的环境。</p><p>Cloudstack支持管理大部分主流的hypervisors，如KVM，XenServer，VMware，Oracle VM，Xen等。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/cloudstack.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>CloudStack 部署图如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/cloudstack%E9%83%A8%E7%BD%B2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p><strong>Zone：</strong>Zone 对应于现实中的一个数据中心，它是 CloudStack 中最大的一个单元。</p><p>即从包含关系上来说，一个 zone 包含多个 pod，一个 pod 包含多个 cluster，一个 cluster 包含多个 host。</p><p><strong>提供点（Pods）：</strong>一个提供点通常代表一个机架，机柜里面的主机在同一个子网，每个区域中必须包含一个或多个提供点，提供点中包含主机和主存储服务器， CloudStack 的内部管理通信配置一个预留 IP 地址范围。预留的 IP 范围对云中的每个区域来说必须唯一。</p><p><strong>集群（Clusters）：</strong>Cluster 是多个主机组成的一个集群。</p><p>​    同一个cluster中的主机有相同的硬件，相同的 Hypervisor，和共用同样的存储。同一个 cluster 中的虚拟机，可以实现无中断服务地从一个主机迁移到另外一个上。</p><p>​    集群由一个或多个宿主机和一个或多个主要存储服务器构成。集群的大小取决于下层虚拟机软件。大多数情况下基本无建议。当使用VMware时，每个VMware集群都被vCenter 服务器管理。管理员必须在本产品中登记vCenter。每个zone下可以有多个vCenter服务器。每个vCenter服务器可能管理多个VMware集群</p><p><strong>主机（Hosts）：</strong></p><p>Host 就是运行的虚拟机（VM）主机。宿主机就是个独立的计算机。宿主机运行来宾虚拟机并提供其相应的计算资源。每个宿主机都装有虚拟机软件来运行来宾虚拟机。比如一个开启了kvm支持的服务器，一个思杰XenServer服务器，或者一个ESXi服务器都可以作为宿主机。</p><p>宿主机在CloudStack部署中属于最小的组织单元。宿主机包含于集群中，集群又属于提供点，而区域中包含提供点（就是在逻辑概念上<code>zone&gt;pod&gt;cluster&gt;host</code>），新增的宿主机可以随时添加以提供更多资源给来宾虚拟机，CloudStack自动探测宿主机的cpu数量和内存资源。宿主机对终端用户不可见。终端用户不能决定他们的虚拟机被分配到哪台宿主机。</p><p><strong>CloudStack 中存在两种存储：</strong></p><ul><li>Primary storage：一级存储与 cluster 关联，它<code>为该 cluster 中的主机的全部虚拟机提供磁盘卷</code>。一个 cluster 至少有一个一级存储，且在部署时位置要临近主机以提供高性能。</li><li>Secondary storage：二级存储与 zone 关联，<code>它存储模板文件，ISO 镜像和磁盘卷快照</code>。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;基本上，云计算只是一种把 IT 资源当作服务来提供的手段。几乎所有 IT 资源都可以作为云服务来提供：应用程序、计算能力、存储容量、联网、编程工具，以至于通信服务和协作工具。&lt;/p&gt;
&lt;p&gt;云计算最早为 Google、Amazon 等其他扩建基础设施的大型互联网服务提供商所
      
    
    </summary>
    
      <category term="Linux" scheme="/categories/Linux/"/>
    
    
      <category term="CloudStack" scheme="/tags/CloudStack/"/>
    
      <category term="介绍" scheme="/tags/%E4%BB%8B%E7%BB%8D/"/>
    
  </entry>
  
  <entry>
    <title>搭建http服务器-nginx</title>
    <link href="/2019/04/04/%E6%90%AD%E5%BB%BAhttp%E6%9C%8D%E5%8A%A1%E5%99%A8-nginx/"/>
    <id>/2019/04/04/搭建http服务器-nginx/</id>
    <published>2019-04-04T03:49:55.000Z</published>
    <updated>2019-10-10T03:19:16.658Z</updated>
    
    <content type="html"><![CDATA[<p>编译安装<code>nginx</code>参考：<a href="https://blog.csdn.net/w410589502/article/details/70787468" target="_blank" rel="noopener">https://blog.csdn.net/w410589502/article/details/70787468</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>安装 nginx </p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum  -y install nginx</span><br></pre></td></tr></table></figure><p>这一步可能会遇到<code>&quot;No package nginx available.&quot;</code>问题，解决方法如下：</p><h3 id="问题处理"><a href="#问题处理" class="headerlink" title="问题处理"></a>问题处理</h3><p><strong>问题描述：</strong>见下图</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nginx.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p><strong>问题原因：</strong></p><p>nginx位于第三方的yum源里面，而不在centos官方yum源里面</p><p><strong>解决方法（一）：</strong></p><p>安装epel(Extra Packages for Enterprise Linux)</p><p>去<a href="http://fedoraproject.org/wiki/EPEL" target="_blank" rel="noopener">epel网站</a>下载对应版本</p><p>我的系统是centos7.6，cpu是x86_64</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载epel</span></span><br><span class="line">wget https://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-7-11.noarch.rpm</span><br><span class="line">or</span><br><span class="line">wget https://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-7-12.noarch.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装epel</span></span><br><span class="line">rpm -ivh epel-release-7-11.noarch.rpm</span><br><span class="line">or</span><br><span class="line">rpm -ivh epel-release-7-12.noarch.rpm</span><br></pre></td></tr></table></figure><p>再次执行 <code>yum install nginx</code>,则会提示安装成功了</p><p><strong>解决方法（二）：</strong></p><p>出现这个的原因是因为本地yum源中没有我们想要的nginx，那么我们就需要创建一个<code>/etc/yum.repos.d/nginx.repo</code>的文件，新增一个yum源</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/yum.repos.d/nginx.repo</span><br><span class="line"></span><br><span class="line"><span class="comment">#在文件中写入以下内容：</span></span><br><span class="line">[nginx]</span><br><span class="line">name=nginx repo</span><br><span class="line">baseurl=http://nginx.org/packages/centos/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">gpgcheck=0</span><br><span class="line">enabled=1</span><br></pre></td></tr></table></figure><p>退出保存后，再次执行 <code>yum install nginx</code>,则会提示安装成功了</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><ul><li>删除<code>/usr/share/nginx/html/</code>目录下的所有文件</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -rf /usr/share/nginx/html/*</span><br></pre></td></tr></table></figure><ul><li>防火墙中加入允许80 端口访问</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 加入80端口</span></span><br><span class="line">firewall-cmd --zone=public --add-port=80/tcp --permanent</span><br><span class="line"></span><br><span class="line"><span class="comment">## 附加：</span></span><br><span class="line"><span class="comment"># 显示防火墙应用列表</span></span><br><span class="line">firewall-cmd --list-all</span><br></pre></td></tr></table></figure><ul><li>重启防火墙</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart firewalld</span><br></pre></td></tr></table></figure><ul><li>编辑<code>/etc/nginx/nginx.conf</code>配置文件，加入如下信息（追加到末尾），使能够访问目录</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">autoindex on;<span class="comment"># 显示目录</span></span><br><span class="line">autoindex_exact_size on;<span class="comment"># 显示文件大小</span></span><br><span class="line">autoindex_localtime on;<span class="comment"># 显示文件时间</span></span><br></pre></td></tr></table></figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nginx%E9%85%8D%E7%BD%AE.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><ul><li>启动nginx</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start nginx</span><br><span class="line">systemctl <span class="built_in">enable</span> nginx</span><br></pre></td></tr></table></figure><h2 id="启用"><a href="#启用" class="headerlink" title="启用"></a>启用</h2><p>将镜像上传到<code>/usr/share/nginx/html</code>目录，在浏览器访问可以看见如下图所示的文件信息，点击可下载</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/nginx2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="附加"><a href="#附加" class="headerlink" title="附加"></a>附加</h2><h3 id="Nginx-显示中文乱码解决"><a href="#Nginx-显示中文乱码解决" class="headerlink" title="Nginx 显示中文乱码解决"></a>Nginx 显示中文乱码解决</h3><p>需要修改nginx的server的配置内容，增加一行：<code>charset utf-8;</code></p><p>情如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">upstream you.domainName.com &#123;</span><br><span class="line">        server 127.0.0.1:8081;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">server &#123;</span><br><span class="line">listen    80;</span><br><span class="line">server_name  you.domainName.com;</span><br><span class="line">    charset utf-8;</span><br><span class="line">    location /examples &#123;</span><br><span class="line">    <span class="built_in">return</span> 403;</span><br><span class="line">    &#125;</span><br><span class="line">    ....</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启Nginx服务(<code>nginx -s reload</code>)。最后，刷新，一切正常！</p><h3 id="执行nginx-s-reload的问题"><a href="#执行nginx-s-reload的问题" class="headerlink" title="执行nginx -s reload的问题"></a>执行<code>nginx -s reload</code>的问题</h3><p><strong>解决<code>unknown directive &quot;stream&quot; in /etc/nginx/nginx.conf</code>问题</strong></p><p>在<code>nginx.conf</code>的第一行插入：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">load_module /usr/lib/nginx/modules/ngx_stream_module.so;</span><br><span class="line"></span><br><span class="line"><span class="comment"># find / -name 'ngx_stream_module.so' -print</span></span><br></pre></td></tr></table></figure><p> 如果<code>ngx_stream_module.so</code>地址不对</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]<span class="comment"># find / -name 'ngx_stream_module.so' -print</span></span><br><span class="line">/usr/lib64/nginx/modules/ngx_stream_module.so</span><br></pre></td></tr></table></figure><p>然后<code>换成真实地址</code>即可！问题解决。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ul><li><p>重置（<code>nginx -s reload</code>）nginx出现这个错误</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nginx: [error] open() <span class="string">"/usr/local/var/run/nginx.pid"</span> failed (2: No such file or directory)</span><br></pre></td></tr></table></figure><p>解决方法：<code>找到你的nginx.conf的文件夹目录</code>，然后运行这个：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 例如：找到的nginx.conf的文件夹目录为：“/etc/nginx/nginx.conf”</span></span><br><span class="line"><span class="comment"># 执行以下命令</span></span><br><span class="line">nginx -c /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p>再运行<code>nginx -s reload</code>，就可以了</p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;编译安装&lt;code&gt;nginx&lt;/code&gt;参考：&lt;a href=&quot;https://blog.csdn.net/w410589502/article/details/70787468&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.
      
    
    </summary>
    
      <category term="Linux" scheme="/categories/Linux/"/>
    
    
      <category term="ngnix" scheme="/tags/ngnix/"/>
    
  </entry>
  
  <entry>
    <title>CloudStack安装配置应用操作手册</title>
    <link href="/2019/04/03/CloudStack%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE%E5%BA%94%E7%94%A8%E6%93%8D%E4%BD%9C%E6%89%8B%E5%86%8C/"/>
    <id>/2019/04/03/CloudStack安装配置应用操作手册/</id>
    <published>2019-04-03T09:32:32.000Z</published>
    <updated>2019-09-06T03:16:10.885Z</updated>
    
    <content type="html"><![CDATA[<h2 id="CloudStack介绍"><a href="#CloudStack介绍" class="headerlink" title="CloudStack介绍"></a>CloudStack介绍</h2><p>介绍见： <a href="CloudStack介绍">CloudStack介绍</a></p><h2 id="CloudStack安装"><a href="#CloudStack安装" class="headerlink" title="CloudStack安装"></a>CloudStack安装</h2><h3 id="先决条件"><a href="#先决条件" class="headerlink" title="先决条件"></a>先决条件</h3><ol><li>至少两台（<code>cloudstack-management</code>和<code>cloudstack-agent</code>）支持并启用了硬件虚拟化的计算机。</li><li>一个<a href="http://mirrors.kernel.org/centos/7/isos/x86_64/" target="_blank" rel="noopener">CentOS的7.5 x86_64的ISO安装文件</a></li><li>网关位于xxx.xxx.xxx.1的A / 24网络，该网络上不应该有DHCP，运行CloudStack的计算机都不会有动态地址。同样，这是为了简单起见。</li></ol><h3 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h3><p>一套基本的CloudStack环境，包括一台CloudStack管理端（cloudstack-management），一个mysql数据库，若干台支持KVM虚拟化的计算节点（cloudstack-agent）以及一台用来做为二级存储的nfs服务器：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/cloudstack结构.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>在实际生产中，mysql数据库和管理端都可能配备多台作为高可用，计算节点一般也是配置较高的物理服务器，但在实验环境，我们可以采用<code>最小化安装模式</code>，把mysql,nfs和管理端安装在同一台虚拟机上，使用一台支持KVM虚拟化的虚拟机用来作为计算节点</p><h4 id="我们的环境"><a href="#我们的环境" class="headerlink" title="我们的环境"></a>我们的环境</h4><p><strong>本文使用两台虚拟机来搭建我们的环境</strong>，nfs,mysql和管理端都装在同一台虚拟机上，cloudstack-agent安装在一台开启了虚拟化支持的虚拟机上，部署架构如下：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/我们的cloudstack结构.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><ul><li>两台服务器的IP是：<ul><li>CloudStack管理端（cloudstack-management）：172.18.193.1</li><li>KVM虚拟化的计算节点（cloudstack-agent）：172.18.193.2</li></ul></li></ul><h3 id="CloudStack管理端"><a href="#CloudStack管理端" class="headerlink" title="CloudStack管理端"></a>CloudStack管理端</h3><h4 id="升级yum"><a href="#升级yum" class="headerlink" title="升级yum"></a>升级yum</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y upgrade</span><br></pre></td></tr></table></figure><h4 id="主机名"><a href="#主机名" class="headerlink" title="主机名"></a>主机名</h4><p>CloudStack要求正确设置主机名。如果您在安装中使用了默认选项，那么您的主机名当前设置为localhost.localdomain。为了测试这个，我们将运行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname --fqdn</span><br></pre></td></tr></table></figure><p>此时它可能会返回：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost</span><br></pre></td></tr></table></figure><p>要纠正这种情况 - 我们将通过编辑<code>/etc/hosts</code>文件来设置主机名，以便它遵循与此示例类似的格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1 localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">172.18.193.1    mng.cloud.priv</span><br><span class="line">172.18.193.1    mng</span><br><span class="line">172.18.193.2    cloud1.cloud.priv</span><br><span class="line">172.18.193.2    cld</span><br><span class="line">172.18.0.1      gw</span><br><span class="line">61.139.2.69     dns</span><br></pre></td></tr></table></figure><p>修改完该文件后，重新启动网络：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>现在使用<code>hostname -fqdn</code>命令重新检查并确保它返回FQDN响应</p><h4 id="设置SELinux"><a href="#设置SELinux" class="headerlink" title="设置SELinux"></a>设置SELinux</h4><p>目前，要使CloudStack正常工作，SELinux必须设置为允许。我们希望为将来的引导配置它，并在当前运行的系统中对其进行修改。</p><p>要在运行的系统中将SELinux配置为允许，我们需要运行以下命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br></pre></td></tr></table></figure><p>为了确保它保持在该状态，我们需要配置文件<code>/etc/selinux/config</code>以反映许可状态，如下例所示：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This file controls the state of SELinux on the system.</span></span><br><span class="line"><span class="comment"># SELINUX= can take one of these three values:</span></span><br><span class="line"><span class="comment"># enforcing - SELinux security policy is enforced.</span></span><br><span class="line"><span class="comment"># permissive - SELinux prints warnings instead of enforcing.</span></span><br><span class="line"><span class="comment"># disabled - No SELinux policy is loaded.</span></span><br><span class="line">SELINUX=permissive</span><br><span class="line"><span class="comment"># SELINUXTYPE= can take one of these two values:</span></span><br><span class="line"><span class="comment"># targeted - Targeted processes are protected,</span></span><br><span class="line"><span class="comment"># mls - Multi Level Security protection.</span></span><br><span class="line">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure><h4 id="NTP安装"><a href="#NTP安装" class="headerlink" title="NTP安装"></a>NTP安装</h4><p>NTP配置是保持云服务器中所有时钟同步的必要条件。但是，默认情况下不安装NTP。所以我们将在此阶段安装和配置NTP。安装完成如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install ntp</span><br></pre></td></tr></table></figure><p>实际的默认配置适用于我们的目的，因此我们只需要启用它并将其设置为在启动时启动，如下所示：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> ntpd</span><br><span class="line">systemctl start ntpd</span><br></pre></td></tr></table></figure><h4 id="配置CloudStack包存储库"><a href="#配置CloudStack包存储库" class="headerlink" title="配置CloudStack包存储库"></a>配置CloudStack包存储库</h4><p>我们需要将机器配置为使用CloudStack软件包存储库。</p><p>要添加CloudStack存储库，请创建<code>/etc/yum.repos.d/cloudstack.repo</code>并插入以下信息。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[cloudstack]</span><br><span class="line">name=cloudstack</span><br><span class="line">baseurl=http://download.cloudstack.org/centos/7/4.11/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure><h4 id="NFS-安装"><a href="#NFS-安装" class="headerlink" title="NFS 安装"></a>NFS 安装</h4><p>我们的配置将使用NFS进行主存储和二级存储。我们将继续为此目的设置两个NFS共享。我们首先安装nfs-utils。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install nfs-utils</span><br></pre></td></tr></table></figure><p>我们现在需要配置NFS以提供两个不同的共享。这在<code>/etc/exports</code>文件中相对容易处理。您应该确保它具有以下内容：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/data/primary *(rw,async,no_root_squash,no_subtree_check)</span><br><span class="line">/data/secondary *(rw,async,no_root_squash,no_subtree_check)</span><br></pre></td></tr></table></figure><p>您将注意到我们在系统上指定了两个目录（尚未存在）。我们将继续使用以下命令创建这些目录并在其上适当地设置权限：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /data/primary</span><br><span class="line">mkdir /data/secondary</span><br></pre></td></tr></table></figure><p>CentOS 7.x版本默认使用NFSv4。NFSv4要求域设置在所有客户端上匹配。在我们的示例中，域是cloud.priv，因此请确保取消注释<code>/etc/idmapd.conf</code>中的域设置并设置如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Domain = cloud.priv</span><br></pre></td></tr></table></figure><p>现在，您需要在<code>/etc/sysconfig/nfs</code>文件的底部添加配置值（或者仅取消注释并设置它们）</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">LOCKD_TCPPORT=32803</span><br><span class="line">LOCKD_UDPPORT=32769</span><br><span class="line">MOUNTD_PORT=892</span><br><span class="line">RQUOTAD_PORT=875</span><br><span class="line">STATD_PORT=662</span><br><span class="line">STATD_OUTGOING_PORT=2020</span><br></pre></td></tr></table></figure><p>现在我们需要禁用防火墙，这样它就不会阻止连接</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl <span class="built_in">disable</span> firewalld</span><br></pre></td></tr></table></figure><p>我们现在需要配置nfs服务以在启动时启动，并通过执行以下命令实际在主机上启动它：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> rpcbind</span><br><span class="line">systemctl <span class="built_in">enable</span> nfs</span><br><span class="line">systemctl start rpcbind</span><br><span class="line">systemctl start nfs</span><br></pre></td></tr></table></figure><p>重新启动nfs</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart nfs</span><br></pre></td></tr></table></figure><p>测试nfs服务端是否能访问</p><p>在 agent端执行<code>showmount -e 172.18.193.1</code></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/showmount.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h4 id="管理服务器安装"><a href="#管理服务器安装" class="headerlink" title="管理服务器安装"></a>管理服务器安装</h4><h5 id="数据库安装和配置"><a href="#数据库安装和配置" class="headerlink" title="数据库安装和配置"></a>数据库安装和配置</h5><p>我们将首先安装MySQL并配置一些选项，以确保它与CloudStack一起运行良好。</p><p>首先，由于CentOS 7不再提供MySQL二进制文件，我们需要添加一个存储库：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget http://repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">rpm -ivh mysql-community-release-el7-5.noarch.rpm</span><br><span class="line">yum -y update</span><br></pre></td></tr></table></figure><p>通过运行以下命令进行安装：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql-server</span><br></pre></td></tr></table></figure><p>现在安装了MySQL，我们需要对/etc/my.cnf进行一些配置更改。具体来说，我们需要在[mysqld]部分添加以下选项：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">innodb_rollback_on_timeout=1</span><br><span class="line">innodb_lock_wait_timeout=600</span><br><span class="line">max_connections=350</span><br><span class="line"><span class="built_in">log</span>-bin=mysql-bin</span><br><span class="line">binlog-format = <span class="string">'ROW'</span></span><br></pre></td></tr></table></figure><p>现在MySQL已正确配置，我们可以启动它并将其配置为在启动时启动，如下所示：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> mysqld</span><br><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><h5 id="MySQL连接器安装"><a href="#MySQL连接器安装" class="headerlink" title="MySQL连接器安装"></a>MySQL连接器安装</h5><p>使用官方MySQL软件包存储库安装Python MySQL连接器。<code>/etc/yum.repos.d/mysql.repo</code>使用以下内容创建文件：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[mysql-connectors-community]</span><br><span class="line">name=MySQL Community connectors</span><br><span class="line">baseurl=http://repo.mysql.com/yum/mysql-connectors-community/el/<span class="variable">$releasever</span>/<span class="variable">$basearch</span>/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=1</span><br></pre></td></tr></table></figure><p>从MySQL导入GPG公钥：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm --import http://repo.mysql.com/RPM-GPG-KEY-mysql</span><br></pre></td></tr></table></figure><p>安装mysql-connector</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install mysql-connector-python</span><br></pre></td></tr></table></figure><h5 id="安装管理服务器"><a href="#安装管理服务器" class="headerlink" title="安装管理服务器"></a>安装管理服务器</h5><p>我们现在要安装管理服务器。我们通过执行以下命令来做到这一点：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install cloudstack-management</span><br></pre></td></tr></table></figure><p>当<code>yum -y install cloudstack-management</code>命令不好使的时候，操作如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget http://download.cloudstack.org/centos/7/4.11/cloudstack-management-4.11.2.0-1.el7.centos.x86_64.rpm</span><br><span class="line">wget http://download.cloudstack.org/centos/7/4.11/cloudstack-common-4.11.2.0-1.el7.centos.x86_64.rpm</span><br><span class="line"></span><br><span class="line">yum localinstall cloudstack-management-4.11.2.0-1.el7.centos.x86_64.rpm cloudstack-common-4.11.2.0-1.el7.centos.x86_64.rpm</span><br></pre></td></tr></table></figure><p>安装了应用程序本身后，我们现在可以设置数据库，我们将使用以下命令和选项执行此操作：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudstack-setup-databases cloud:password@localhost --deploy-as=root</span><br></pre></td></tr></table></figure><p>完成此过程后，您应该看到“CloudStack has successfully initialized the database.”之类的消息。</p><p>既然已经创建了数据库，我们可以通过发出以下命令来设置管理服务器的最后一步：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cloudstack-setup-management</span><br></pre></td></tr></table></figure><h5 id="系统模板设置"><a href="#系统模板设置" class="headerlink" title="系统模板设置"></a>系统模板设置</h5><p>CloudStack使用许多系统VM来提供访问虚拟机控制台，提供各种网络服务以及管理存储的各个方面的功能。当我们引导您的云时，此步骤将获取准备部署的系统映像。</p><p>现在我们需要下载系统VM模板并将其部署到我们刚刚挂载的共享。管理服务器包括用于正确操纵系统VMs映像的脚本。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/share/cloudstack-common/scripts/storage/secondary/cloud-install-sys-tmplt -m /data/secondary -u </span><br><span class="line">http://download.cloudstack.org/systemvm/4.11/systemvmtemplate-4.11.2-kvm.qcow2.bz2 -h kvm -F</span><br></pre></td></tr></table></figure><p>这就结束了我们的管理服务器的安装</p><h3 id="CloudStack计算节点"><a href="#CloudStack计算节点" class="headerlink" title="CloudStack计算节点"></a>CloudStack计算节点</h3><h4 id="升级yum-1"><a href="#升级yum-1" class="headerlink" title="升级yum"></a>升级yum</h4><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y upgrade</span><br></pre></td></tr></table></figure><h4 id="配置网络"><a href="#配置网络" class="headerlink" title="配置网络"></a>配置网络</h4><p>要将其配置为在您的环境中工作。由于我们指定在此环境中不存在DHCP服务器，因此我们将手动配置您的网络接口。</p><p>在继续之前，请确保安装了“brctl”并且可用：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install bridge-utils -y</span><br></pre></td></tr></table></figure><p>通过控制台连接，您应该以root用户身份登录。我们将首先创建Cloudstack将用于网络的桥梁。创建并打开<code>vi /etc/sysconfig/network-scripts/ifcfg-cloudbr1</code>并添加以下设置：</p><blockquote><p>IP寻址 - 在本文档中，我们假设您将拥有一个用于CloudStack实施的/24网络。这可以是任何RFC 1918网络。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=cloudbr1</span><br><span class="line">TYPE=Bridge</span><br><span class="line">ONBOOT=yes</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">IPV6INIT=no</span><br><span class="line">IPV6_AUTOCONF=no</span><br><span class="line">DELAY=5</span><br><span class="line">IPADDR=172.18.193.2</span><br><span class="line">PREFIX=16</span><br><span class="line">GATEWAY=172.18.0.1</span><br><span class="line">DNS1=61.139.2.69</span><br><span class="line">STP=yes</span><br></pre></td></tr></table></figure><p>保存配置并退出。</p><p>打开<code>vi /etc/sysconfig/network-scripts/ifcfg-em1</code>配置文件并按如下所示进行配置：</p><blockquote><p>接口名称仅用作示例。将em1替换为您的默认以太网接口名称。</p></blockquote><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DEVICE=em1</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">ONBOOT=yes</span><br><span class="line">BOOTPROTO=none</span><br><span class="line">BRIDGE=cloudbr1</span><br></pre></td></tr></table></figure><p>现在我们已经正确设置了配置文件，我们需要运行一些命令来启动网络：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> network</span><br><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>请注意，如果您通过SSH连接，则会暂时（约5秒，具体取决于硬件）断开连接。如果断开连接，则配置中存在错误。</p><h4 id="主机名-1"><a href="#主机名-1" class="headerlink" title="主机名"></a>主机名</h4><p>CloudStack要求正确设置主机名。如果您在安装中使用了默认选项，那么您的主机名当前设置为localhost.localdomain。为了测试这个，我们将运行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hostname --fqdn</span><br></pre></td></tr></table></figure><p>此时它可能会返回：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">localhost</span><br></pre></td></tr></table></figure><p>要纠正这种情况 - 我们将通过编辑<code>vi /etc/hosts</code>文件来设置主机名，以便它遵循与此示例类似的格式：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1 localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">172.18.193.1    mng.cloud.priv</span><br><span class="line">172.18.193.1    mng</span><br><span class="line">172.18.193.2    cloud1.cloud.priv</span><br><span class="line">172.18.193.2    cld1</span><br><span class="line">...<span class="comment">#(这里按以上格式添加新增计算节点)</span></span><br><span class="line">172.18.0.1      gw</span><br><span class="line">61.139.2.69     dns</span><br></pre></td></tr></table></figure><p>修改完该文件后，重新启动网络：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>现在使用<code>hostname -fqdn</code>命令重新检查并确保它返回FQDN响应<code>（如下：）</code></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">hostname: invalid option -- <span class="string">'q'</span></span><br><span class="line">Usage: hostname [-b] &#123;hostname|-F file&#125;         <span class="built_in">set</span> host name (from file)</span><br><span class="line">       hostname [-a|-A|-d|-f|-i|-I|-s|-y]       display formatted name</span><br><span class="line">       hostname                                 display host name</span><br><span class="line"></span><br><span class="line">       &#123;yp,nis,&#125;domainname &#123;nisdomain|-F file&#125;  <span class="built_in">set</span> NIS domain name (from file)</span><br><span class="line">       &#123;yp,nis,&#125;domainname                      display NIS domain name</span><br><span class="line"></span><br><span class="line">       dnsdomainname                            display dns domain name</span><br><span class="line"></span><br><span class="line">       hostname -V|--version|-h|--<span class="built_in">help</span>          <span class="built_in">print</span> info and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">Program name:</span><br><span class="line">       &#123;yp,nis,&#125;domainname=hostname -y</span><br><span class="line">       dnsdomainname=hostname -d</span><br><span class="line"></span><br><span class="line">Program options:</span><br><span class="line">    -a, --<span class="built_in">alias</span>            <span class="built_in">alias</span> names</span><br><span class="line">    -A, --all-fqdns        all long host names (FQDNs)</span><br><span class="line">    -b, --boot             <span class="built_in">set</span> default hostname <span class="keyword">if</span> none available</span><br><span class="line">    -d, --domain           DNS domain name</span><br><span class="line">    -f, --fqdn, --long     long host name (FQDN)</span><br><span class="line">    -F, --file             <span class="built_in">read</span> host name or NIS domain name from given file</span><br><span class="line">    -i, --ip-address       addresses <span class="keyword">for</span> the host name</span><br><span class="line">    -I, --all-ip-addresses all addresses <span class="keyword">for</span> the host</span><br><span class="line">    -s, --short            short host name</span><br><span class="line">    -y, --yp, --nis        NIS/YP domain name</span><br><span class="line"></span><br><span class="line">Description:</span><br><span class="line">   This <span class="built_in">command</span> can get or <span class="built_in">set</span> the host name or the NIS domain name. You can</span><br><span class="line">   also get the DNS domain or the FQDN (fully qualified domain name).</span><br><span class="line">   Unless you are using <span class="built_in">bind</span> or NIS <span class="keyword">for</span> host lookups you can change the</span><br><span class="line">   FQDN (Fully Qualified Domain Name) and the DNS domain name (<span class="built_in">which</span> is</span><br><span class="line">   part of the FQDN) <span class="keyword">in</span> the /etc/hosts file.</span><br></pre></td></tr></table></figure><h4 id="设置SELinux-1"><a href="#设置SELinux-1" class="headerlink" title="设置SELinux"></a>设置SELinux</h4><p>目前，要使CloudStack正常工作，SELinux必须设置为允许。我们希望为将来的引导配置它，并在当前运行的系统中对其进行修改。</p><p>要在运行的系统中将SELinux配置为允许，我们需要运行以下命令：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setenforce 0</span><br></pre></td></tr></table></figure><p>为了确保它保持在该状态，我们需要配置文件<code>vi /etc/selinux/config</code>以反映许可状态，如下例所示：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># This file controls the state of SELinux on the system.</span></span><br><span class="line"><span class="comment"># SELINUX= can take one of these three values:</span></span><br><span class="line"><span class="comment"># enforcing - SELinux security policy is enforced.</span></span><br><span class="line"><span class="comment"># permissive - SELinux prints warnings instead of enforcing.</span></span><br><span class="line"><span class="comment"># disabled - No SELinux policy is loaded.</span></span><br><span class="line">SELINUX=permissive</span><br><span class="line"><span class="comment"># SELINUXTYPE= can take one of these two values:</span></span><br><span class="line"><span class="comment"># targeted - Targeted processes are protected,</span></span><br><span class="line"><span class="comment"># mls - Multi Level Security protection.</span></span><br><span class="line">SELINUXTYPE=targeted</span><br></pre></td></tr></table></figure><h4 id="NTP安装-1"><a href="#NTP安装-1" class="headerlink" title="NTP安装"></a>NTP安装</h4><p>NTP配置是保持云服务器中所有<code>时钟同步</code>的必要条件。但是，默认情况下不安装NTP。所以我们将在此阶段安装和配置NTP。安装完成如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install ntp</span><br></pre></td></tr></table></figure><p>实际的默认配置适用于我们的目的，因此我们只需要启用它并将其设置为在启动时启动，如下所示：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> ntpd</span><br><span class="line">systemctl start ntpd</span><br></pre></td></tr></table></figure><h4 id="配置CloudStack包存储库（可不做该操作）"><a href="#配置CloudStack包存储库（可不做该操作）" class="headerlink" title="配置CloudStack包存储库（可不做该操作）"></a>配置CloudStack包存储库<code>（可不做该操作）</code></h4><p>要添加CloudStack存储库，请创建<code>vi /etc/yum.repos.d/cloudstack.repo</code>并插入以下信息.</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[cloudstack]</span><br><span class="line">name=cloudstack</span><br><span class="line">baseurl=http://download.cloudstack.org/centos/7/4.11/</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br></pre></td></tr></table></figure><h4 id="KVM设置和安装"><a href="#KVM设置和安装" class="headerlink" title="KVM设置和安装"></a>KVM设置和安装</h4><p>KVM是我们将要使用的虚拟机管理程序 - 您可以使用相同的步骤将其他KVM节点添加到您的CloudStack环境中。</p><h5 id="安装节点服务器"><a href="#安装节点服务器" class="headerlink" title="安装节点服务器"></a>安装节点服务器</h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install cloudstack-agent</span><br></pre></td></tr></table></figure><p>当<code>yum -y install cloudstack-agent</code>命令不好使的时候，操作如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载</span></span><br><span class="line">wget http://download.cloudstack.org/centos/7/4.11/cloudstack-agent-4.11.2.0-1.el7.centos.x86_64.rpm</span><br><span class="line">wget http://download.cloudstack.org/centos/7/4.11/cloudstack-common-4.11.2.0-1.el7.centos.x86_64.rpm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装</span></span><br><span class="line">yum -y localinstall cloudstack-agent-4.11.2.0-1.el7.centos.x86_64.rpm cloudstack-common-4.11.2.0-1.el7.centos.x86_64.rpm</span><br></pre></td></tr></table></figure><p>我们有两个不同的KVM部分需要配置，<code>libvirt</code>和<code>QEMU</code>。</p><h5 id="QEMU配置"><a href="#QEMU配置" class="headerlink" title="QEMU配置"></a>QEMU配置</h5><p>KVM配置只在一个项目上相对简单。我们需要编辑QEMU VNC配置。这是通过编辑<code>vi /etc/libvirt/qemu.conf</code>并确保以下行存在并取消注释来完成的。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vnc_listen=0.0.0.0</span><br></pre></td></tr></table></figure><h5 id="Libvirt配置"><a href="#Libvirt配置" class="headerlink" title="Libvirt配置"></a>Libvirt配置</h5><p>CloudStack使用libvirt来管理虚拟机。因此，正确配置libvirt至关重要。Libvirt是云代理的依赖，应该已经安装。</p><ol><li><p>为了实现实时迁移，libvirt必须监听不安全的TCP连接。我们还需要关闭libvirts尝试使用多播DNS广告。这两个设置都在<code>vi /etc/libvirt/libvirtd.conf</code>中</p><p>设置以下参数：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">listen_tls = 0</span><br><span class="line">listen_tcp = 1</span><br><span class="line">tcp_port = <span class="string">"16509"</span></span><br><span class="line">auth_tcp = <span class="string">"none"</span></span><br><span class="line">mdns_adv = 0</span><br></pre></td></tr></table></figure></li><li><p>在libvirtd.conf中打开“listen_tcp”是不够的，我们还要更改参数，我们还需要修改<code>vi /etc/sysconfig/libvirtd</code>：</p><p>取消注释以下行：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LIBVIRTD_ARGS=-l</span><br></pre></td></tr></table></figure></li><li><p>重启libvirt</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart libvirtd</span><br></pre></td></tr></table></figure></li></ol><h5 id="设置agent主机的vi-etc-cloudstack-agent-agent-properties"><a href="#设置agent主机的vi-etc-cloudstack-agent-agent-properties" class="headerlink" title="设置agent主机的vi /etc/cloudstack/agent/agent.properties"></a>设置agent主机的<code>vi /etc/cloudstack/agent/agent.properties</code></h5><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Storage</span></span><br><span class="line"><span class="comment">#Mon Aug 05 08:53:35 EDT 2019</span></span><br><span class="line">guest.network.device=cloudbr3<span class="comment">#关键点</span></span><br><span class="line">workers=5</span><br><span class="line">private.network.device=cloudbr3<span class="comment">#关键点</span></span><br><span class="line">port=8250</span><br><span class="line">resource=com.cloud.hypervisor.kvm.resource.LibvirtComputingResource</span><br><span class="line">pod=1</span><br><span class="line">zone=1</span><br><span class="line">hypervisor.type=kvm</span><br><span class="line">guid=1338039a-7a8b-3e28-ad3b-0f327b0c853a</span><br><span class="line">public.network.device=cloudbr3<span class="comment">#关键点</span></span><br><span class="line">cluster=1</span><br><span class="line">local.storage.uuid=094838a5-45f8-4395-87e2-f935acee06ba</span><br><span class="line">keystore.passphrase=qGPHZ4p2CBHq6WQ6</span><br><span class="line">domr.scripts.dir=scripts/network/domr/kvm</span><br><span class="line">LibvirtComputingResource.id=5</span><br><span class="line">host=172.18.193.1<span class="comment">#关键点</span></span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#Storage</span></span><br><span class="line"><span class="comment">#Mon Aug 05 08:53:37 EDT 2019</span></span><br><span class="line">workers=5</span><br><span class="line">private.network.device=cloudbr2<span class="comment">#关键点</span></span><br><span class="line">port=8250</span><br><span class="line">resource=com.cloud.hypervisor.kvm.resource.LibvirtComputingResource</span><br><span class="line">pod=1</span><br><span class="line">zone=1</span><br><span class="line">hypervisor.type=kvm</span><br><span class="line">guid=ae201417-3dbc-324b-bd5e-69aebfdb6f05</span><br><span class="line">cluster=1</span><br><span class="line">public.network.device=cloudbr2<span class="comment">#关键点</span></span><br><span class="line">local.storage.uuid=e45c631a-fb3d-4fb0-b9f6-f68a83dd1693</span><br><span class="line">domr.scripts.dir=scripts/network/domr/kvm</span><br><span class="line">keystore.passphrase=k93EXpDZMnXvjRMZ</span><br><span class="line">host=172.18.193.1<span class="comment">#关键点</span></span><br><span class="line">LibvirtComputingResource.id=4</span><br></pre></td></tr></table></figure><h5 id="KVM配置完成"><a href="#KVM配置完成" class="headerlink" title="KVM配置完成"></a>KVM配置完成</h5><ul><li><p>为了完整起见，您应该检查KVM在您的计算机上是否正常运行：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">lsmod | grep kvm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出</span></span><br><span class="line">kvm_intel             183705  47 </span><br><span class="line">kvm                   615914  1 kvm_intel</span><br><span class="line">irqbypass              13503  37 kvm</span><br></pre></td></tr></table></figure></li></ul><p>这就结束了我们对KVM的安装和配置，现在我们将使用CloudStack UI来实际配置我们的云。</p><h2 id="CloudStack系统配置"><a href="#CloudStack系统配置" class="headerlink" title="CloudStack系统配置"></a>CloudStack系统配置</h2><p>访问地址：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http://&lt;management-server-ip-address&gt;:8080/client</span><br><span class="line"><span class="comment"># 即：http://172.18.193.1:8080/client</span></span><br></pre></td></tr></table></figure><p>如果管理服务器是全新的安装,那么会出现一个安装向导。在稍后的访问中，你将看到一个登录界面,，你需要通过用户名和密码登入来查看你的仪表盘。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">用户名 -&gt; 你账号的用户ID。默认用户名是admin。</span><br><span class="line">密码 -&gt; 用户ID对应的密码。默认用户名的密码是password。</span><br><span class="line">域 -&gt; 如果你是root用户，此处留空即可。</span><br></pre></td></tr></table></figure><p>CloudStack用户界面帮助云基础设施的用户查看和使用他们的云资源，包括虚拟机、模板和ISO、数据卷和快照、宾客网络，以及IP 地址。如果用户是一个或多个CloudStack项目的成员或管理员，用户界面能提供一个面向项目的视图。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/配置导向.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>选择”我以前是用过CloudStack，跳过此指南”按钮</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/资源域.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>选择“资源域”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/添加资源域.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>选择“添加资源域”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/资源域-基本.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>选择“基本”网络，点击”下一步”<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/资源域-配置区域.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置内容如下:</span></span><br><span class="line">名称：Zone1</span><br><span class="line">IPV4 DNS1：61.139.2.69</span><br><span class="line">内部 DNS1：</span><br><span class="line">虚拟机选择“KVM”</span><br><span class="line">网络方案默认</span><br><span class="line"><span class="comment"># 这些内容包括下面的填写仅为参考值。可根据实际情况进行修改</span></span><br></pre></td></tr></table></figure><p>点击”下一步”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/资源域-配置网络.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置内容如下:</span></span><br><span class="line">物理网络名称:默认 <span class="comment">#也可键入cloudstack-management实际网络名称</span></span><br></pre></td></tr></table></figure><p>点击”下一步”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/资源域-提供点.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置内容如下:</span></span><br><span class="line">提供名称：Pod1</span><br><span class="line">预留的系统网关：172.18.0.1</span><br><span class="line">预留的系统网络掩码：255.255.0.0</span><br><span class="line">起始预留系统IP：172.18.193.3</span><br><span class="line">结束预留系统IP：172.18.193.254</span><br></pre></td></tr></table></figure><p>点击”下一步”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/资源域-来宾流量.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置内容如下:</span></span><br><span class="line">来宾网关：172.18.0.1</span><br><span class="line">来宾网络掩码：255.255.0.0</span><br><span class="line">来宾起始IP:172.18.194.1</span><br><span class="line">来宾结束IP：172.18.194.254</span><br></pre></td></tr></table></figure><p>点击”下一步”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/资源域-集群.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置内容如下:</span></span><br><span class="line">虚拟机管理程序：KVM</span><br><span class="line">集群名称：Cluster</span><br></pre></td></tr></table></figure><p>点击”下一步”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/资源域-主机.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置内容如下:</span></span><br><span class="line">主机名称：172.18.193.2    <span class="comment">#cloudstack-agent计算节点地址</span></span><br><span class="line">用户名：root              <span class="comment">#cloudstack-agent计算节点用户名</span></span><br><span class="line">密码：password           <span class="comment">#cloudstack-agent计算节点密码</span></span><br><span class="line">主机标签：可不填</span><br></pre></td></tr></table></figure><p>点击”下一步”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/资源域-主存储.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置内容如下:</span></span><br><span class="line">名称：primary<span class="comment">#不是固定的，自己根据需要进行区分即可</span></span><br><span class="line">范围：选择群集</span><br><span class="line">协议：选择nfs</span><br><span class="line">服务器：172.18.193.1</span><br><span class="line">路径：/data/primary<span class="comment">#根据安装时的配置填写</span></span><br><span class="line">存储路径：可不填</span><br></pre></td></tr></table></figure><p>点击”下一步”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/资源域-二级存储.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置内容如下:</span></span><br><span class="line">提供程序：选择NFS</span><br><span class="line">名称：secondary<span class="comment">#不是固定的，自己根据需要进行区分即可</span></span><br><span class="line">服务器：172.18.193.1</span><br><span class="line">路径：/data/secondary<span class="comment">#根据安装时的配置填写</span></span><br></pre></td></tr></table></figure><p>点击”下一步”</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/启动.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>点击“启动资源域”</p><p>成功后，先不启动资源域，我们可以先看下基础架构</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/基础架构.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>此时系统VM为0</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/启动资源域.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>资源启动成功后，系统VM会出现2台</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/基础架构-系统vm.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/系统vm.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>系统VM是不同于主机上创建的普通虚拟机的，他们是CloudStack云平台自带的用于<code>完成自身的一些任务的虚拟机</code>。</p><ul><li><strong>Secondary Storage VM：</strong>简称为SSVM，用于管理二级存储的相关操作，如模板跟镜像文件的上传与下载，快照，volumes的存放，第一次创建虚拟机时从二级存储拷贝模板到一级存储并且自动创建快照，每一个资源域可以有多个SSVM，当SSVM被删除或停止，它会自动被重建并启动。</li><li><strong>Console Proxy VM：</strong>用于在web 界面上展示控制台。</li></ul><p>通过<code>查看控制台</code>访问里面的虚拟机</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/系统vm-查看控制台.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><h2 id="CloudStack-虚拟机实例"><a href="#CloudStack-虚拟机实例" class="headerlink" title="CloudStack 虚拟机实例"></a>CloudStack 虚拟机实例</h2><h3 id="虚拟机实例"><a href="#虚拟机实例" class="headerlink" title="虚拟机实例"></a>虚拟机实例</h3><p>默认的模板并没有被下载</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/模板.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>修改全局设置<code>secstorage.allowed.internal.sites</code>设置 ，二级存储ISO镜像和模板可以下载，IP网段</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/secs.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>重启服务<code>systemctl restart cloudstack-management</code></p><h3 id="搭建http服务器-nginx"><a href="#搭建http服务器-nginx" class="headerlink" title="搭建http服务器-nginx"></a>搭建http服务器-nginx</h3><p><strong>目的：</strong>注册ISO时需要填镜像的url，实时下载镜像，外网或者网速不是很好下载会很慢甚至下载失败，故搭建自己的http服务器以便在内网下载镜像，这样速度会快很多。</p><p><strong>注 ：在<code>cloudstack-management管理服务器节点</code>搭建nginx</strong> </p><p>操作教程见：<a href="搭建http服务器-nginx">搭建http服务器-nginx</a></p><h3 id="制作模板"><a href="#制作模板" class="headerlink" title="制作模板"></a>制作模板</h3><h4 id="注册ISO"><a href="#注册ISO" class="headerlink" title="注册ISO"></a>注册ISO</h4><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/iso-注册.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/iso注册.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/添加实例.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="/img/添加实例2.png" alt="" title="">                </div>                <div class="image-caption"></div>            </figure><p>接下来按步骤走，就可以创建出第一个虚拟机了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;CloudStack介绍&quot;&gt;&lt;a href=&quot;#CloudStack介绍&quot; class=&quot;headerlink&quot; title=&quot;CloudStack介绍&quot;&gt;&lt;/a&gt;CloudStack介绍&lt;/h2&gt;&lt;p&gt;介绍见： &lt;a href=&quot;CloudStack介绍&quot;&gt;Cl
      
    
    </summary>
    
      <category term="Linux" scheme="/categories/Linux/"/>
    
    
      <category term="CloudStack" scheme="/tags/CloudStack/"/>
    
      <category term="虚拟机分配" scheme="/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%88%86%E9%85%8D/"/>
    
      <category term="安装指南" scheme="/tags/%E5%AE%89%E8%A3%85%E6%8C%87%E5%8D%97/"/>
    
  </entry>
  
</feed>
