<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nan&#39;s Blog</title>
  
  <subtitle>弱者才言命，强者只言运！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="/"/>
  <updated>2019-01-07T08:36:03.969Z</updated>
  <id>/</id>
  
  <author>
    <name>马亮南生</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ubuntu 18.04.1 开机启动脚本</title>
    <link href="/2019/01/07/ubuntu-18-04-1-%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC/"/>
    <id>/2019/01/07/ubuntu-18-04-1-开机启动脚本/</id>
    <published>2019-01-07T08:18:31.000Z</published>
    <updated>2019-01-07T08:36:03.969Z</updated>
    
    <content type="html"><![CDATA[<p><strong>ubuntu18.04不再使用initd管理系统，改用systemd。个人觉得systemd很难用，改变太大，跟之前的完全不同</strong></p><p>为了像以前一样，在/etc/rc.local中设置开机启动程序，需要以下几步：</p><ol><li><p>systemd默认读取/etc/systemd/system下的配置文件，该目录下的文件会链接/lib/systemd/system/下的文件。一般系统安装完/lib/systemd/system/下会有rc-local.service文件，即我们需要的配置文件。 </p><p>链接过来：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -fs /lib/systemd/system/rc-local.service /etc/systemd/system/rc-local.service</span><br></pre></td></tr></table></figure><p>打开脚本内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/systemd/system/rc-local.service</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#  SPDX-License-Identifier: LGPL-2.1+</span><br><span class="line">#</span><br><span class="line">#  This file is part of systemd.</span><br><span class="line">#</span><br><span class="line">#  systemd is free software; you can redistribute it and/or modify it</span><br><span class="line">#  under the terms of the GNU Lesser General Public License as published by</span><br><span class="line">#  the Free Software Foundation; either version 2.1 of the License, or</span><br><span class="line">#  (at your option) any later version.</span><br><span class="line"></span><br><span class="line"># This unit gets pulled automatically into multi-user.target by</span><br><span class="line"># systemd-rc-local-generator if /etc/rc.local is executable.</span><br><span class="line">[Unit]</span><br><span class="line">Description=/etc/rc.local Compatibility</span><br><span class="line">Documentation=man:systemd-rc-local-generator(8)</span><br><span class="line">ConditionFileIsExecutable=/etc/rc.local</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">ExecStart=/etc/rc.local start</span><br><span class="line">TimeoutSec=0</span><br><span class="line">RemainAfterExit=yes</span><br><span class="line">GuessMainPID=no</span><br></pre></td></tr></table></figure><p>一般正常的启动文件主要分成三部分：</p><p>[Unit] 段: 启动顺序与依赖关系 </p><p>[Service] 段: 启动行为,如何启动，启动类型<br>[Install] 段: 定义如何安装这个配置文件，即怎样做到开机启动</p><p>可以看出，/etc/rc.local 的启动顺序是在网络后面，但是显然它少了 Install 段，也就没有定义如何做到开机启动，所以显然这样配置是无效的。 因此我们就需要在后面帮他加上 [Install] 段:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[Install]  </span><br><span class="line">WantedBy=multi-user.target  </span><br><span class="line">Alias=rc-local.service</span><br></pre></td></tr></table></figure><p><strong>这里需要注意一下，ubuntu-18.04 默认是没有 /etc/rc.local 这个文件的，需要自己创建</strong></p></li><li><p>创建/etc/rc.local文件（有的话不用再创建了）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch /etc/rc.local</span><br></pre></td></tr></table></figure></li><li><p>赋可执行权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 755 /etc/rc.local</span><br></pre></td></tr></table></figure></li><li><p>编辑rc.local，添加需要开机启动的任务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh -e</span><br><span class="line"># </span><br><span class="line"># rc.local</span><br><span class="line">#</span><br><span class="line"># This script is executed at the end of each multiuser runlevel.</span><br><span class="line"># Make sure that the script will &quot;exit 0&quot; on success or any other</span><br><span class="line"># value on error.</span><br><span class="line">#</span><br><span class="line"># In order to enable or disable this script just change the execution</span><br><span class="line"># bits.</span><br><span class="line">#</span><br><span class="line"># By default this script does nothing.</span><br><span class="line">echo &quot;this is a test&quot; &gt; /usr/local/text.log</span><br><span class="line">sudo vncserver</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure><p>其中<code>sudo vncserver</code>就是需要开机启动的任务（<strong>注意：sudo写上有益无害，避免不必要的麻烦</strong>）</p><p><code>echo &quot;this is a test&quot; &gt; /usr/local/text.log</code>是测试开机脚本是否生效用的</p></li><li><p>执行reboot重启系统（查看 /usr/local/text.log 文件是否存在就知道开机脚本是否生效了）</p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;ubuntu18.04不再使用initd管理系统，改用systemd。个人觉得systemd很难用，改变太大，跟之前的完全不同&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;为了像以前一样，在/etc/rc.local中设置开机启动程序，需要以下几步：&lt;/p&gt;
&lt;ol&gt;

      
    
    </summary>
    
      <category term="Linux" scheme="/categories/Linux/"/>
    
    
      <category term="Ubuntu" scheme="/tags/Ubuntu/"/>
    
      <category term="开机启动" scheme="/tags/%E5%BC%80%E6%9C%BA%E5%90%AF%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>文件打包-解压-下载</title>
    <link href="/2018/12/28/%E6%96%87%E4%BB%B6%E6%89%93%E5%8C%85-%E8%A7%A3%E5%8E%8B-%E4%B8%8B%E8%BD%BD/"/>
    <id>/2018/12/28/文件打包-解压-下载/</id>
    <published>2018-12-28T03:07:17.000Z</published>
    <updated>2018-12-29T03:17:03.749Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文件打包"><a href="#文件打包" class="headerlink" title="文件打包"></a>文件打包</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文件打包</span></span><br><span class="line"><span class="comment"> * 将传递过来的文件列表写入zip文件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> fileList 要打包的文件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> zipFileName 打包后的文件名</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">downZipManyFile</span><span class="params">(List&lt;File&gt; fileList, String zipFileName)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line"></span><br><span class="line">    BufferedInputStream br = <span class="keyword">null</span>;<span class="comment">//输入流</span></span><br><span class="line">    ZipOutputStream out = <span class="keyword">null</span>; <span class="comment">// 压缩文件输出流</span></span><br><span class="line">    ZipEntry zip = <span class="keyword">null</span>; <span class="comment">//用于表示 ZIP 文件条目。</span></span><br><span class="line">    <span class="keyword">int</span> size =-<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span>  <span class="keyword">byte</span>[<span class="number">2048</span>];<span class="comment">// 定义缓冲区</span></span><br><span class="line">    <span class="keyword">if</span>(fileList.size()&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        out = <span class="keyword">new</span> ZipOutputStream(<span class="keyword">new</span> FileOutputStream(zipFileName));</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; fileList.size(); i++) &#123;</span><br><span class="line">            File f =fileList.get(i);</span><br><span class="line">            zip = <span class="keyword">new</span> ZipEntry(f.getName());</span><br><span class="line">            out.putNextEntry(zip);</span><br><span class="line">            br = <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(f));</span><br><span class="line">            <span class="keyword">while</span>((size=br.read(buffer))!=-<span class="number">1</span>)&#123;</span><br><span class="line">                out.write(buffer,<span class="number">0</span>,size);</span><br><span class="line">                out.flush();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        zip.clone();</span><br><span class="line">        br.close();</span><br><span class="line">        out.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多种压缩文件解压"><a href="#多种压缩文件解压" class="headerlink" title="多种压缩文件解压"></a>多种压缩文件解压</h2><p><strong>包含实现对.zip、.rar、.7z、.tar、.tar.gz的解压</strong></p><p>Maven</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- .<span class="number">7</span>z --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;net.sf.sevenzipjbinding&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;sevenzipjbinding&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;9.20-2.00beta&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;net.sf.sevenzipjbinding&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;sevenzipjbinding-all-platforms&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;9.20-2.00beta&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- .<span class="number">7</span>z end --&gt;</span><br><span class="line">    </span><br><span class="line">&lt;!-- .tar/.tar.gz --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.ant&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;ant&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.10.4&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- .tar/.tar.gz end --&gt;</span><br></pre></td></tr></table></figure><p>代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*功能：多种格式压缩文件解压(.zip、.rar、.7z、.tar、.tar.gz)*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//使用gbk编码避免zip解压中文文件名乱码</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String CHINESE_CHARSET = <span class="string">"gbk"</span>;</span><br><span class="line"><span class="comment">//文件读取缓冲区大小</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> CACHE_SIZE = <span class="number">1024</span>;</span><br><span class="line"><span class="comment">//系统类型</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String WINDOWS=<span class="string">"windows"</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String LINUX=<span class="string">"linux"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 多种格式压缩文件解压</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> srcFileName 源文件全路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> destDir 解压后存储路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deCompress</span><span class="params">(String srcFileName, String destDir)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//存储路径不存在则创建</span></span><br><span class="line">    File dFile=<span class="keyword">new</span> File(destDir);</span><br><span class="line">    <span class="keyword">if</span> (!dFile.exists()) &#123;</span><br><span class="line">        dFile.mkdirs();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (srcFileName.toLowerCase().endsWith(<span class="string">".zip"</span>)) &#123;</span><br><span class="line">        unZip(srcFileName, destDir);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (srcFileName.toLowerCase().endsWith(<span class="string">".rar"</span>)) &#123;</span><br><span class="line">        unRar(srcFileName, destDir);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (srcFileName.toLowerCase().endsWith(<span class="string">".7z"</span>)) &#123;</span><br><span class="line">        un7Z(srcFileName, destDir);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (srcFileName.toLowerCase().endsWith(<span class="string">".tar"</span>)) &#123;</span><br><span class="line">        unTar(srcFileName, destDir);</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (srcFileName.toLowerCase().endsWith(<span class="string">".tar.gz"</span>)) &#123;</span><br><span class="line">        unTarGz(srcFileName, destDir);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * .zip格式解压</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> srcFileName 源文件全路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> destDir 解压后存储路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">unZip</span><span class="params">(String srcFileName, String destDir)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//解决中文乱码</span></span><br><span class="line">        ZipFile zip = <span class="keyword">new</span> ZipFile(srcFileName, Charset.forName(CHINESE_CHARSET));</span><br><span class="line">        <span class="comment">//循环遍历</span></span><br><span class="line">        <span class="keyword">for</span> (Enumeration&lt;? extends ZipEntry&gt; entries = zip.entries(); </span><br><span class="line">             entries.hasMoreElements();) &#123;</span><br><span class="line">            ZipEntry entry = entries.nextElement();</span><br><span class="line">            String zipEntryName = entry.getName();</span><br><span class="line">            InputStream in = zip.getInputStream(entry);</span><br><span class="line">            String outPath = (destDir +<span class="string">"/"</span>+ zipEntryName).replaceAll(<span class="string">"\\*"</span>, <span class="string">"/"</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 判断路径是否存在,不存在则创建文件路径</span></span><br><span class="line">            File file = <span class="keyword">new</span> File(outPath.substring(<span class="number">0</span>, outPath.lastIndexOf(<span class="string">'/'</span>)));</span><br><span class="line">            <span class="keyword">if</span> (!file.exists()) &#123;</span><br><span class="line">                file.mkdirs();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 判断文件全路径是否为文件夹,如果是上面已经上传,不需要解压</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">new</span> File(outPath).isDirectory()) &#123;</span><br><span class="line">                <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            FileOutputStream out = <span class="keyword">new</span> FileOutputStream(outPath);</span><br><span class="line">            <span class="keyword">byte</span>[] buf = <span class="keyword">new</span> <span class="keyword">byte</span>[CACHE_SIZE];</span><br><span class="line">            <span class="keyword">int</span> len;</span><br><span class="line">            <span class="keyword">while</span> ((len = in.read(buf)) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                out.write(buf, <span class="number">0</span>, len);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            in.close();</span><br><span class="line">            out.close();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * .rar格式解压</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> srcFileName 源文件全路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> destDir 解压后存储路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">unRar</span><span class="params">(String srcFileName, String destDir)</span></span>&#123;</span><br><span class="line">    String cmd = <span class="keyword">null</span>;</span><br><span class="line">    String unRarCmd = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (systemType().equals(WINDOWS)) &#123;</span><br><span class="line">            <span class="comment">//解压模板命令</span></span><br><span class="line">            unRarCmd = <span class="string">"F:\\Program Files (x86)\\WinRAR\\WinRAR.exe x "</span>;</span><br><span class="line">            <span class="comment">//构建解压命令</span></span><br><span class="line">            cmd = unRarCmd + srcFileName + <span class="string">" "</span> + destDir;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (systemType().equals(LINUX)) &#123;</span><br><span class="line">            <span class="comment">//解压模板命令</span></span><br><span class="line">            unRarCmd = <span class="string">"unrar x "</span>;</span><br><span class="line">            <span class="comment">//构建解压命令</span></span><br><span class="line">            cmd = unRarCmd + srcFileName + <span class="string">" "</span> + destDir;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//构造运行对象</span></span><br><span class="line">        Runtime rt = Runtime.getRuntime();</span><br><span class="line">        <span class="comment">//在单独的进程中执行指定的字符串命令。</span></span><br><span class="line">        rt.exec(cmd);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * .7z格式解压</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> srcFileName 源文件全路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> destDir 解压后存储路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">un7Z</span><span class="params">(String srcFileName, String destDir)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    RandomAccessFile randomAccessFile = <span class="keyword">null</span>;</span><br><span class="line">    IInArchive inArchive = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        randomAccessFile = <span class="keyword">new</span> RandomAccessFile(srcFileName, <span class="string">"r"</span>);</span><br><span class="line">        inArchive = SevenZip.</span><br><span class="line">            openInArchive(<span class="keyword">null</span>,<span class="keyword">new</span> RandomAccessFileInStream(randomAccessFile));</span><br><span class="line"></span><br><span class="line">        ISimpleInArchive simpleInArchive = inArchive.getSimpleInterface();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        <span class="keyword">for</span> (ISimpleInArchiveItem item : simpleInArchive.getArchiveItems()) &#123;</span><br><span class="line">            <span class="keyword">int</span>[] hash = <span class="keyword">new</span> <span class="keyword">int</span>[] &#123; <span class="number">0</span> &#125;;</span><br><span class="line">            <span class="keyword">if</span> (!item.isFolder()) &#123;</span><br><span class="line">                ExtractOperationResult result;</span><br><span class="line">                <span class="keyword">long</span>[] sizeArray = <span class="keyword">new</span> <span class="keyword">long</span>[<span class="number">1</span>];</span><br><span class="line"></span><br><span class="line">                <span class="comment">//tarFile是遍历的每一个文件</span></span><br><span class="line">                File tarFile=<span class="keyword">new</span> File(destDir+File.separator+item.getPath());</span><br><span class="line">                <span class="comment">//tarFile父目录不存在，则创建</span></span><br><span class="line">                <span class="keyword">if</span> (!tarFile.getParentFile().exists()) &#123;</span><br><span class="line">                    tarFile.getParentFile().mkdirs();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//创建tarFile文件</span></span><br><span class="line">                tarFile.createNewFile();</span><br><span class="line"></span><br><span class="line">                result = item.extractSlow(<span class="keyword">new</span> ISequentialOutStream() &#123;</span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">write</span><span class="params">(<span class="keyword">byte</span>[] data)</span> <span class="keyword">throws</span> SevenZipException </span>&#123;</span><br><span class="line">                        FileOutputStream fos=<span class="keyword">null</span>;</span><br><span class="line">                        <span class="keyword">try</span> &#123;</span><br><span class="line">                            fos = <span class="keyword">new</span> FileOutputStream(tarFile.getAbsolutePath());</span><br><span class="line">                            <span class="comment">//将数据写入fos</span></span><br><span class="line">                            fos.write(data);</span><br><span class="line">                            fos.flush();</span><br><span class="line">                            fos.close();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line"></span><br><span class="line">                        hash[<span class="number">0</span>] ^= Arrays.hashCode(data);</span><br><span class="line">                        sizeArray[<span class="number">0</span>] += data.length;</span><br><span class="line">                        <span class="keyword">return</span> data.length;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        System.exit(<span class="number">1</span>);</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (inArchive != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                inArchive.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (SevenZipException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (randomAccessFile != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                randomAccessFile.close();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * .tar格式解压</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> srcFileName 源文件全路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> destDir 解压后存储路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">unTar</span><span class="params">(String srcFileName, String destDir)</span></span>&#123;</span><br><span class="line">    FileInputStream fis = <span class="keyword">null</span>;</span><br><span class="line">    OutputStream fos = <span class="keyword">null</span>;</span><br><span class="line">    TarInputStream tarInputStream = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        fis = <span class="keyword">new</span> FileInputStream(<span class="keyword">new</span> File(srcFileName));</span><br><span class="line">        tarInputStream = <span class="keyword">new</span> TarInputStream(fis, CACHE_SIZE);</span><br><span class="line"></span><br><span class="line">        TarEntry entry = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">            entry = tarInputStream.getNextEntry();</span><br><span class="line">            <span class="keyword">if</span>( entry == <span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(entry.isDirectory())&#123;</span><br><span class="line">                System.out.println(entry.getName());</span><br><span class="line">                createDirectory(destDir, entry.getName()); <span class="comment">// 创建子目录</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                fos = <span class="keyword">new</span> FileOutputStream(<span class="keyword">new</span> File(destDir + File.separator + </span><br><span class="line">                                                    entry.getName()));</span><br><span class="line">                <span class="keyword">int</span> count;</span><br><span class="line">                <span class="keyword">byte</span> data[] = <span class="keyword">new</span> <span class="keyword">byte</span>[CACHE_SIZE];</span><br><span class="line">                <span class="keyword">while</span> ((count = tarInputStream.read(data)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                    fos.write(data, <span class="number">0</span>, count);</span><br><span class="line">                &#125;</span><br><span class="line">                fos.flush();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(fis != <span class="keyword">null</span>)&#123;</span><br><span class="line">                fis.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(fos != <span class="keyword">null</span>)&#123;</span><br><span class="line">                fos.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(tarInputStream != <span class="keyword">null</span>)&#123;</span><br><span class="line">                tarInputStream.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * .tar.gz解压</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> srcFileName 源文件全路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> destDir 解压后存储路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">unTarGz</span><span class="params">(String srcFileName, String destDir)</span></span>&#123;</span><br><span class="line">    FileInputStream  fileInputStream = <span class="keyword">null</span>;</span><br><span class="line">    BufferedInputStream bufferedInputStream = <span class="keyword">null</span>;</span><br><span class="line">    GZIPInputStream gzipIn = <span class="keyword">null</span>;</span><br><span class="line">    TarInputStream tarIn = <span class="keyword">null</span>;</span><br><span class="line">    OutputStream out = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        fileInputStream = <span class="keyword">new</span> FileInputStream(<span class="keyword">new</span> File(srcFileName));</span><br><span class="line">        bufferedInputStream = <span class="keyword">new</span> BufferedInputStream(fileInputStream);</span><br><span class="line">        gzipIn = <span class="keyword">new</span> GZIPInputStream(bufferedInputStream);</span><br><span class="line">        tarIn = <span class="keyword">new</span> TarInputStream(gzipIn, CACHE_SIZE);</span><br><span class="line"></span><br><span class="line">        TarEntry entry = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">while</span>((entry = tarIn.getNextEntry()) != <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(entry.isDirectory())&#123; <span class="comment">// 是目录</span></span><br><span class="line">                createDirectory(destDir, entry.getName()); <span class="comment">// 创建子目录</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123; <span class="comment">// 是文件</span></span><br><span class="line">                File tempFIle = <span class="keyword">new</span> File(destDir + File.separator + entry.getName());</span><br><span class="line">                createDirectory(tempFIle.getParent() + File.separator, <span class="keyword">null</span>);</span><br><span class="line">                out = <span class="keyword">new</span> FileOutputStream(tempFIle);</span><br><span class="line">                <span class="keyword">int</span> len =<span class="number">0</span>;</span><br><span class="line">                <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[CACHE_SIZE];</span><br><span class="line"></span><br><span class="line">                <span class="keyword">while</span> ((len = tarIn.read(b)) != -<span class="number">1</span>)&#123;</span><br><span class="line">                    out.write(b, <span class="number">0</span>, len);</span><br><span class="line">                &#125;</span><br><span class="line">                out.flush();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span>(out != <span class="keyword">null</span>)&#123;</span><br><span class="line">                out.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(tarIn != <span class="keyword">null</span>)&#123;</span><br><span class="line">                tarIn.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(gzipIn != <span class="keyword">null</span>)&#123;</span><br><span class="line">                gzipIn.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(bufferedInputStream != <span class="keyword">null</span>)&#123;</span><br><span class="line">                bufferedInputStream.close();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(fileInputStream != <span class="keyword">null</span>)&#123;</span><br><span class="line">                fileInputStream.close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  构建目录</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> outputDir 输出目录</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> subDir 子目录</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">createDirectory</span><span class="params">(String outputDir, String subDir)</span></span>&#123;</span><br><span class="line">    File file = <span class="keyword">new</span> File(outputDir);</span><br><span class="line">    <span class="keyword">if</span>(!(subDir == <span class="keyword">null</span> || subDir.trim().equals(<span class="string">""</span>))) &#123;<span class="comment">//子目录不为空</span></span><br><span class="line">        file = <span class="keyword">new</span> File(outputDir + File.separator + subDir);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!file.exists())&#123;</span><br><span class="line">        <span class="keyword">if</span>(!file.getParentFile().exists())&#123;</span><br><span class="line">            file.getParentFile().mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">        file.mkdirs();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断程序运行在什么系统上</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 系统类型</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">systemType</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Properties properties = System.getProperties();</span><br><span class="line">    String os = properties.getProperty(<span class="string">"os.name"</span>);</span><br><span class="line">    <span class="keyword">if</span> (os != <span class="keyword">null</span> &amp;&amp; os.toLowerCase().contains(WINDOWS))&#123;</span><br><span class="line">        <span class="keyword">return</span> WINDOWS;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (os != <span class="keyword">null</span> &amp;&amp; os.toLowerCase().contains(LINUX))&#123;</span><br><span class="line">        <span class="keyword">return</span> LINUX;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//deCompress("E:/Test/Test01.zip","E:/Test/testZip");</span></span><br><span class="line">    <span class="comment">//deCompress("E:/Test/Test02.rar","E:/Test/testRar");</span></span><br><span class="line">    <span class="comment">//deCompress("E:/Test/Test03.7z","E:/Test/test7z");</span></span><br><span class="line">    <span class="comment">//deCompress("E:/Test/Test04.tar","E:/Test/testTar");</span></span><br><span class="line">    <span class="comment">//deCompress("E:/Test/apache-tomcat-9.0.13-src.tar.gz","E:/Test/testTarGz");</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="从服务器下载文件"><a href="#从服务器下载文件" class="headerlink" title="从服务器下载文件"></a>从服务器下载文件</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 文件下载</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> zipFileName zip文件全路径（含文件名）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> response</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> isDelete 是否将生成的服务器端文件删除</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> ReturnT&lt;?&gt; downloadFile(String zipFileName, </span><br><span class="line">                               HttpServletResponse response, <span class="keyword">boolean</span> isDelete) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        File file=<span class="keyword">new</span> File(zipFileName);</span><br><span class="line">        <span class="comment">// 以流的形式下载文件。</span></span><br><span class="line">        BufferedInputStream fis = </span><br><span class="line">            <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(file.getPath()));</span><br><span class="line">        <span class="keyword">byte</span>[] buffer = <span class="keyword">new</span> <span class="keyword">byte</span>[fis.available()];</span><br><span class="line">        fis.read(buffer);</span><br><span class="line">        fis.close();</span><br><span class="line">        <span class="comment">// 清空response</span></span><br><span class="line">        response.reset();</span><br><span class="line">        OutputStream toClient = <span class="keyword">new</span> BufferedOutputStream(response.getOutputStream());</span><br><span class="line">        response.setContentType(<span class="string">"application/octet-stream"</span>);</span><br><span class="line">        response.setHeader(<span class="string">"Content-Disposition"</span>, <span class="string">"attachment;filename="</span> + </span><br><span class="line">                           <span class="keyword">new</span> String(file.getName().getBytes(<span class="string">"UTF-8"</span>),<span class="string">"ISO-8859-1"</span>));</span><br><span class="line">        toClient.write(buffer);</span><br><span class="line">        toClient.flush();</span><br><span class="line">        toClient.close();</span><br><span class="line">        <span class="keyword">if</span>(isDelete) &#123;</span><br><span class="line">            <span class="comment">//将生成的服务器端文件删除</span></span><br><span class="line">            file.delete();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ReturnT(HttpStatus.OK, <span class="string">"下载成功"</span>, <span class="keyword">null</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        logger.error(<span class="string">"下载失败"</span>,e);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ReturnT(HttpStatus.NOT_FOUND, <span class="string">"下载失败"</span>, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="其它文件操作"><a href="#其它文件操作" class="headerlink" title="其它文件操作"></a>其它文件操作</h2><h3 id="获取单个文件的所有内容"><a href="#获取单个文件的所有内容" class="headerlink" title="获取单个文件的所有内容"></a>获取单个文件的所有内容</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取单个文件的所有内容</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> fileName 文件全路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">readToString</span><span class="params">(String fileName)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(fileName);</span><br><span class="line">        Long filelength = file.length();</span><br><span class="line">        <span class="keyword">byte</span>[] filecontent = <span class="keyword">new</span> <span class="keyword">byte</span>[filelength.intValue()];</span><br><span class="line">        FileInputStream in = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">        in.read(filecontent);</span><br><span class="line">        in.close();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> String(filecontent, encoding);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">        logger.error(<span class="string">"该文件不存在或路径错误"</span>,e);</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        logger.error(<span class="string">"读取文件出错"</span>,e);</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="获取多个文件的文件名列表-全路径"><a href="#获取多个文件的文件名列表-全路径" class="headerlink" title="获取多个文件的文件名列表(全路径)"></a>获取多个文件的文件名列表(全路径)</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取多个文件文件列表(全路径)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> fileDir 文件夹路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> picturePath 图片相对路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> request</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 返回带域名的文件路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">readToListPath</span><span class="params">(String fileDir, String picturePath, HttpServletRequest request)</span> </span>&#123;</span><br><span class="line">    <span class="comment">//获取带部署环境上下文的域名</span></span><br><span class="line">    StringBuffer url = request.getRequestURL();</span><br><span class="line">    String tempContextUrl = url</span><br><span class="line">        .delete(url.length() - request.getRequestURI().length(), url.length())</span><br><span class="line">        .append(request.getContextPath()).toString();</span><br><span class="line"></span><br><span class="line">    List&lt;String&gt; fileNameList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        List&lt;File&gt; fileList = getFilePath(fileDir,<span class="string">""</span>);</span><br><span class="line">        <span class="keyword">if</span> (fileList.size()==<span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> fileNameList;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (File f1 : fileList) &#123;</span><br><span class="line">            fileNameList.add(tempContextUrl+picturePath+<span class="string">"/"</span>+f1.getName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fileNameList;</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">        logger.error(<span class="string">"获取多个文件文件列表异常"</span>,e);</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="获取多个文件的内容列表"><a href="#获取多个文件的内容列表" class="headerlink" title="获取多个文件的内容列表"></a>获取多个文件的内容列表</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取多个文件内容列表</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> fileDir 文件所在路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">readToListAndString</span><span class="params">(String fileDir)</span></span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        List&lt;String&gt; fileContentList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        List&lt;File&gt; fileList = getFilePath(fileDir,<span class="string">""</span>);</span><br><span class="line">        <span class="keyword">for</span> (File file : fileList)&#123;</span><br><span class="line">            <span class="keyword">if</span>(!readToString(file.toString()).equals(<span class="string">""</span>))&#123;</span><br><span class="line">                fileContentList.add(readToString(file.toString()));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fileContentList;</span><br><span class="line">    &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">        logger.error(<span class="string">"获取多个文件内容列表异常"</span>,e);</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="递归获取目录下的所有文件"><a href="#递归获取目录下的所有文件" class="headerlink" title="递归获取目录下的所有文件"></a>递归获取目录下的所有文件</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 递归获取目录下的所有文件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> fileDir 文件所在路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;File&gt; <span class="title">getFilePath</span><span class="params">(String fileDir,String endsWith)</span></span>&#123;</span><br><span class="line">    List&lt;File&gt; fileList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    File file = <span class="keyword">new</span> File(fileDir);</span><br><span class="line">    File[] files = file.listFiles();<span class="comment">// 获取目录下的所有文件或文件夹</span></span><br><span class="line">    <span class="keyword">if</span> (files == <span class="keyword">null</span>) &#123;<span class="comment">// 如果目录为空，返回空</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 遍历，目录下的所有文件</span></span><br><span class="line">    <span class="keyword">for</span> (File f : files) &#123;</span><br><span class="line">        <span class="keyword">if</span> (f.isFile()) &#123;</span><br><span class="line">            <span class="keyword">if</span>(endsWith.equals(<span class="string">""</span>)||endsWith==<span class="keyword">null</span>)&#123;</span><br><span class="line">                fileList.add(f);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (f.getName().endsWith(endsWith))&#123;</span><br><span class="line">                    fileList.add(f);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (f.isDirectory()) &#123;</span><br><span class="line">            getFilePath(f.getAbsolutePath(),endsWith);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> fileList;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="递归删除文件（删除文件夹）"><a href="#递归删除文件（删除文件夹）" class="headerlink" title="递归删除文件（删除文件夹）"></a>递归删除文件（删除文件夹）</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 递归删除目录下的所有文件及子目录下所有文件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> dir 目录路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">deleteDir</span><span class="params">(File dir)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (dir.isDirectory()) &#123;</span><br><span class="line">        String[] children = dir.list();</span><br><span class="line">        <span class="comment">//递归删除目录中的子目录下</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;children.length; i++) &#123;</span><br><span class="line">            <span class="keyword">boolean</span> success = deleteDir(<span class="keyword">new</span> File(dir, children[i]));</span><br><span class="line">            <span class="keyword">if</span> (!success) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 目录此时为空或者是文件，可以删除</span></span><br><span class="line">    <span class="keyword">return</span> dir.delete();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;文件打包&quot;&gt;&lt;a href=&quot;#文件打包&quot; class=&quot;headerlink&quot; title=&quot;文件打包&quot;&gt;&lt;/a&gt;文件打包&lt;/h2&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre
      
    
    </summary>
    
      <category term="Java" scheme="/categories/Java/"/>
    
    
      <category term="文件打包" scheme="/tags/%E6%96%87%E4%BB%B6%E6%89%93%E5%8C%85/"/>
    
      <category term="压缩文件解压" scheme="/tags/%E5%8E%8B%E7%BC%A9%E6%96%87%E4%BB%B6%E8%A7%A3%E5%8E%8B/"/>
    
  </entry>
  
  <entry>
    <title>linux环境下安装 openOffice 并启动服务</title>
    <link href="/2018/12/25/linux%E7%8E%AF%E5%A2%83%E4%B8%8B%E5%AE%89%E8%A3%85-openOffice-%E5%B9%B6%E5%90%AF%E5%8A%A8%E6%9C%8D%E5%8A%A1/"/>
    <id>/2018/12/25/linux环境下安装-openOffice-并启动服务/</id>
    <published>2018-12-25T02:07:07.000Z</published>
    <updated>2018-12-25T02:42:07.799Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景故事"><a href="#背景故事" class="headerlink" title="背景故事"></a>背景故事</h2><p>这两天遇到一个大坑，客户要做office 文档在线预览功能，于是乎就要把office文档转换成pdf交给前端显示。</p><p>　     在某度找了一圈都说openOffice+jodconverter 可以搞定这个事情。代码倒是很好找，不过版本很多，各类jar包也很多，但尝试下来发现，转化效果很一般，复杂的excel也无法成功。有同事建议放到服务器上效果可能好些，于是就开始折腾在服务器上安装OpenOffice这个事情。网上各种找大神的博文，发现安装起来不是很顺畅，就写了这篇随笔，记录一下，遇到的问题，方便自己以后查看。</p><p>​    openOffice转转word文档效果不错，转Excel的话就真的效果不行，简单的Excel能处理处理，复杂的就很慢很慢，而且效果极差。再说，实际上微软自己的office软件转pdf的效果也很差。</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><ol><li><p><a href="http://www.openoffice.org/zh-cn/download/" target="_blank" rel="noopener">http://www.openoffice.org/zh-cn/download/</a> 去官网链接下载linux版本的openOffice 以4.1.6 版本为例。</p></li><li><p>将压缩包上传至服务器上，并进行解压安装。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf  对应的压缩包名字</span><br><span class="line">cd 进入解压后的 /zh-cn/RPMS</span><br><span class="line">yum localinstall *.rpm</span><br><span class="line">cd desktop-integration</span><br><span class="line">rpm -ivh openoffice4.1.6-redhat-menus-4.1.6-9789.noarch.rpm</span><br></pre></td></tr></table></figure><p>默认会安装在/opt目录下。</p></li><li><p>启动服务</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/opt/openoffice4/program/soffice -headless -accept=&quot;socket,host=127.0.0.1,port=8100;urp;&quot; -nofirststartwizard  临时启动</span><br><span class="line"></span><br><span class="line">nohup /opt/openoffice4/program/soffice -headless -accept=&quot;socket,host=127.0.0.1,port=8100;urp;&quot; -nofirststartwizard &amp;  后台启动</span><br></pre></td></tr></table></figure><p>端口号根据自己项目实际来确定。</p><p>后台启动会一直占用内存，据各路大神说 大概100M，我自己没测过具体值不清楚。</p><p>有的程序是需要预先启动openOffice 服务的，有的则在代码里自己启动服务。</p></li><li><p>.查看进程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -lnp |grep 端口号</span><br></pre></td></tr></table></figure><p>大概显示成这样就算启动完了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tcp      0       0 127.0.0.1:8100      0.0.0.0:*      LISTEN      14362/soffice.bin</span><br></pre></td></tr></table></figure></li></ol><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>装完openoffice后启动服务可能会报错：no suitable windowing system found, exiting</p><p>从字面上的意思就是缺少一个窗口化的系统。所以就安装一个。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum groupinstall &quot;X Window System&quot;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;背景故事&quot;&gt;&lt;a href=&quot;#背景故事&quot; class=&quot;headerlink&quot; title=&quot;背景故事&quot;&gt;&lt;/a&gt;背景故事&lt;/h2&gt;&lt;p&gt;这两天遇到一个大坑，客户要做office 文档在线预览功能，于是乎就要把office文档转换成pdf交给前端显示。&lt;/p&gt;

      
    
    </summary>
    
      <category term="Linux" scheme="/categories/Linux/"/>
    
    
      <category term="openOffice" scheme="/tags/openOffice/"/>
    
      <category term="安装" scheme="/tags/%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>将Word(.doc)里的图片替换成文本</title>
    <link href="/2018/12/20/%E5%B0%86Word-doc-%E9%87%8C%E7%9A%84%E5%9B%BE%E7%89%87%E6%9B%BF%E6%8D%A2%E6%88%90%E6%96%87%E6%9C%AC/"/>
    <id>/2018/12/20/将Word-doc-里的图片替换成文本/</id>
    <published>2018-12-20T03:23:24.000Z</published>
    <updated>2018-12-29T03:04:42.141Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目标：将word里的图片替换成文本"><a href="#目标：将word里的图片替换成文本" class="headerlink" title="目标：将word里的图片替换成文本"></a>目标：将word里的图片替换成文本</h2><p><strong>流程、思想：</strong></p><p>读取出Word中的图片 - 存储读取到的图片（提供图片识别原） - 删除Word中的该图片 - 在Word中该图片位置插入替换文字 - 删除存储的图片</p><h3 id="Maven依赖"><a href="#Maven依赖" class="headerlink" title="Maven依赖"></a>Maven依赖</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- poi-实现word文件的读取和修改等操作 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;poi&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;4.0.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- 针对于<span class="number">2007</span>版（.docx） --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;4.0.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- 针对于<span class="number">2003</span>版（.doc） --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;poi-scratchpad&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;4.0.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- poi-end --&gt;</span><br><span class="line">&lt;!-- Jsoup-用以解析HTML --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.jsoup&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;jsoup&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;1.11.3&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- Jsoup-end --&gt;</span><br></pre></td></tr></table></figure><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String argv[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//源文件全路径</span></span><br><span class="line">        String oldFileName = <span class="string">"D:/Test/ml/test.doc"</span>;</span><br><span class="line">        <span class="comment">//目标文件全路径</span></span><br><span class="line">        String newFileName = <span class="string">"D:/Test/ml/html_to_word.doc"</span>;</span><br><span class="line">        <span class="comment">//构造HTML生成全路径</span></span><br><span class="line">        String temporary = </span><br><span class="line">            <span class="keyword">new</span> File(oldFileName).getParent()+File.separator+<span class="string">"temporary.html"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//读取DOC生成获得html内容和图片集</span></span><br><span class="line">        Map&lt;String,Object&gt; map = convert2Html(oldFileName);</span><br><span class="line">        <span class="comment">//取得图片集</span></span><br><span class="line">        List&lt;String&gt; listPics = (List&lt;String&gt;) map.get(<span class="string">"listPics"</span>);</span><br><span class="line">        <span class="comment">//取得生成的html内容</span></span><br><span class="line">        String htmlContent = (String) map.get(<span class="string">"htmlContent"</span>);</span><br><span class="line">        <span class="keyword">for</span> (String pic : listPics)&#123;</span><br><span class="line">            <span class="comment">//有后缀名的图片才进行识别</span></span><br><span class="line">            <span class="keyword">if</span> (pic.lastIndexOf(<span class="string">"."</span>) != -<span class="number">1</span>)&#123;</span><br><span class="line">                <span class="comment">//以下两行代码是构造HTML中的图片标记（即：&lt;img ...&gt;）</span></span><br><span class="line">                String temp = htmlContent.substring(</span><br><span class="line">                    htmlContent.indexOf(<span class="string">"&lt;img src=\""</span>+pic.replace(<span class="string">"\\"</span>,<span class="string">"/"</span>)+<span class="string">"\""</span>));</span><br><span class="line">                temp = temp.substring(<span class="number">0</span>,temp.indexOf(<span class="string">"&gt;"</span>)+<span class="number">1</span>);</span><br><span class="line">                <span class="comment">//文字替换图片</span></span><br><span class="line">                htmlContent = htmlContent.replaceAll(temp,<span class="string">"&lt;span&gt;&#123;&#123;title&#125;&#125;&lt;/span&gt;"</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;<span class="comment">/*因为识别出来的非图片格式（即：无后缀名）的图片再放回doc时会出现</span></span><br><span class="line"><span class="comment">            图片异常显示，所以以"&lt;span&gt;&lt;/span&gt;"进行占位*/</span></span><br><span class="line">                <span class="comment">//以下两行代码是构造HTML中的图片标记（即：&lt;img ...&gt;）</span></span><br><span class="line">                String temp = htmlContent.substring(</span><br><span class="line">                    htmlContent.indexOf(<span class="string">"&lt;img src=\""</span>+pic.replace(<span class="string">"\\"</span>,<span class="string">"/"</span>)+<span class="string">"\""</span>));</span><br><span class="line">                temp = temp.substring(<span class="number">0</span>,temp.indexOf(<span class="string">"&gt;"</span>)+<span class="number">1</span>);</span><br><span class="line">                <span class="comment">//占位</span></span><br><span class="line">                htmlContent = htmlContent.replaceAll(temp,<span class="string">"&lt;span&gt;&lt;/span&gt;"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//输出HTML文件</span></span><br><span class="line">        writeFile(htmlContent, temporary);</span><br><span class="line">        <span class="comment">//HTML转Doc</span></span><br><span class="line">        html2Doc(temporary,newFileName);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 输出HTML文件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> content 从doc读取生成的html文本</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> path 目标文件全路径</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">writeFile</span><span class="params">(String content, String path)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    FileOutputStream fos = <span class="keyword">null</span>;</span><br><span class="line">    BufferedWriter bw = <span class="keyword">null</span>;</span><br><span class="line">    org.jsoup.nodes.Document doc = Jsoup.parse(content);</span><br><span class="line">    String styleOld=doc.getElementsByTag(<span class="string">"style"</span>).html();</span><br><span class="line">    <span class="comment">//统一字体格式为宋体</span></span><br><span class="line">    styleOld=styleOld.replaceAll(<span class="string">"font-family:.+(?=;\\b)"</span>, <span class="string">"font-family:SimSun"</span>);</span><br><span class="line"></span><br><span class="line">    doc.getElementsByTag(<span class="string">"head"</span>).empty();</span><br><span class="line">    doc.getElementsByTag(<span class="string">"head"</span>)</span><br><span class="line">        .append(<span class="string">"&lt;meta http-equiv=\"Content-Type\" content=\"text/html;</span></span><br><span class="line"><span class="string">                charset=UTF-8\"&gt;&lt;/meta&gt;"</span>);</span><br><span class="line">    doc.getElementsByTag(<span class="string">"head"</span>)</span><br><span class="line">        .append(<span class="string">" &lt;style type=\"text/css\"&gt;&lt;/style&gt;"</span>);</span><br><span class="line">    doc.getElementsByTag(<span class="string">"style"</span>)</span><br><span class="line">        .append(styleOld);</span><br><span class="line">    <span class="comment">/*正则表达式查询字体内容：font-family:.+(?=;\b)*/</span></span><br><span class="line"></span><br><span class="line">    content=doc.html();</span><br><span class="line">    content=content</span><br><span class="line">        .replace(<span class="string">"&lt;meta http-equiv=\"Content-Type\" content=\"text/html; </span></span><br><span class="line"><span class="string">                 charset=UTF-8\"&gt;"</span>, <span class="string">"&lt;meta http-equiv=\"Content-Type\" </span></span><br><span class="line"><span class="string">                 content=\"text/html; charset=UTF-8\"&gt;&lt;/meta&gt;"</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        File file = <span class="keyword">new</span> File(path);</span><br><span class="line">        fos = <span class="keyword">new</span> FileOutputStream(file);</span><br><span class="line">        bw = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(fos,<span class="string">"UTF-8"</span>));</span><br><span class="line">        bw.write(content);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (FileNotFoundException fnfe) &#123;</span><br><span class="line">        fnfe.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException ioe) &#123;</span><br><span class="line">        ioe.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (bw != <span class="keyword">null</span>)</span><br><span class="line">                bw.close();</span><br><span class="line">            <span class="keyword">if</span> (fos != <span class="keyword">null</span>)</span><br><span class="line">                fos.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException ie) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 读取DOC生成获得html内容和图片集</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> fileName 源文件全路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 返回的map中包含html内容和图片集</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Map&lt;String,Object&gt; <span class="title">convert2Html</span><span class="params">(String fileName)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//存放html内容和图片集</span></span><br><span class="line">    Map&lt;String,Object&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="comment">//保存图片集</span></span><br><span class="line">    List&lt;String&gt; listPics = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="comment">//构造提取出来的图片保存路径以及HTML中&lt;img&gt;的图片源路径</span></span><br><span class="line">    String imgPath = <span class="keyword">new</span> File(fileName).getParent()+</span><br><span class="line">        File.separator+<span class="string">"img"</span>+File.separator;</span><br><span class="line">    File file = <span class="keyword">new</span> File(imgPath);</span><br><span class="line">    <span class="comment">//不存在，则创建</span></span><br><span class="line">    <span class="keyword">if</span> (!file.exists())&#123;</span><br><span class="line">        file.mkdirs();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    HWPFDocument wordDocument = <span class="keyword">new</span> HWPFDocument(<span class="keyword">new</span> FileInputStream(fileName));</span><br><span class="line">    <span class="comment">//WordToHtmlUtils.loadDoc(new FileInputStream(inputFile));</span></span><br><span class="line">    WordToHtmlConverter wordToHtmlConverter = <span class="keyword">new</span> WordToHtmlConverter(</span><br><span class="line">        DocumentBuilderFactory.newInstance().newDocumentBuilder()</span><br><span class="line">        .newDocument());</span><br><span class="line">    wordToHtmlConverter.setPicturesManager( <span class="keyword">new</span> PicturesManager() &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> String <span class="title">savePicture</span><span class="params">(<span class="keyword">byte</span>[] content, PictureType pictureType, </span></span></span><br><span class="line"><span class="function"><span class="params">               String suggestedName, <span class="keyword">float</span> widthInches, <span class="keyword">float</span> heightInches )</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> imgPath.replace(<span class="string">"\\"</span>,<span class="string">"/"</span>) + suggestedName;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; );</span><br><span class="line">    wordToHtmlConverter.processDocument(wordDocument);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//保存图片</span></span><br><span class="line">    List pics=wordDocument.getPicturesTable().getAllPictures();</span><br><span class="line">    <span class="keyword">if</span>(pics!=<span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;pics.size();i++)&#123;</span><br><span class="line">            Picture pic = (Picture)pics.get(i);</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                String picAbsolutePath = imgPath + pic.suggestFullFileName();</span><br><span class="line">                <span class="comment">//将图片全路径存入listPics</span></span><br><span class="line">                listPics.add(picAbsolutePath);</span><br><span class="line">                pic.writeImageContent(<span class="keyword">new</span> FileOutputStream(picAbsolutePath));</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Document htmlDocument = wordToHtmlConverter.getDocument();</span><br><span class="line"></span><br><span class="line">    ByteArrayOutputStream out = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line">    DOMSource domSource = <span class="keyword">new</span> DOMSource(htmlDocument);</span><br><span class="line"></span><br><span class="line">    StreamResult streamResult = <span class="keyword">new</span> StreamResult(out);</span><br><span class="line"></span><br><span class="line">    TransformerFactory tf = TransformerFactory.newInstance();</span><br><span class="line">    Transformer serializer = tf.newTransformer();</span><br><span class="line"></span><br><span class="line">    serializer.setOutputProperty(OutputKeys.ENCODING, <span class="string">"UTF-8"</span>);</span><br><span class="line">    serializer.setOutputProperty(OutputKeys.INDENT, <span class="string">"yes"</span>);</span><br><span class="line">    serializer.setOutputProperty(OutputKeys.METHOD, <span class="string">"HTML"</span>);</span><br><span class="line">    serializer.transform(domSource, streamResult);</span><br><span class="line">    out.close();</span><br><span class="line"></span><br><span class="line">    String htmlContent=<span class="keyword">new</span> String(out.toByteArray());</span><br><span class="line">    <span class="comment">//替换UEditor无法识别的转义字符</span></span><br><span class="line">    htmlContent=htmlContent.replaceAll(<span class="string">"&amp;ldquo;"</span>,<span class="string">"\""</span>).replaceAll(<span class="string">"&amp;rdquo;"</span>,<span class="string">"\""</span>)</span><br><span class="line">      .replaceAll(<span class="string">"&amp;mdash;"</span>,<span class="string">"-"</span>);</span><br><span class="line"></span><br><span class="line">    map.put(<span class="string">"htmlContent"</span>,htmlContent);</span><br><span class="line">    map.put(<span class="string">"listPics"</span>,listPics);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> map;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * html转doc</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> source</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> target</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">html2Doc</span><span class="params">(String source , String target)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    <span class="comment">//创建 POIFSFileSystem 对象</span></span><br><span class="line">    POIFSFileSystem poifs = <span class="keyword">new</span> POIFSFileSystem();</span><br><span class="line">    <span class="comment">//获取DirectoryEntry</span></span><br><span class="line">    DirectoryEntry directory = poifs.getRoot();</span><br><span class="line">    <span class="comment">//创建输出流</span></span><br><span class="line">    OutputStream out = <span class="keyword">new</span> FileOutputStream(target);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">//创建文档,1.格式"WordDocument",2.HTML文件输入流</span></span><br><span class="line">        directory.createDocument(<span class="string">"WordDocument"</span>, <span class="keyword">new</span> FileInputStream(source));</span><br><span class="line">        <span class="comment">//写入</span></span><br><span class="line">        poifs.writeFilesystem(out);</span><br><span class="line">        <span class="comment">//释放资源</span></span><br><span class="line">        out.close();</span><br><span class="line">        System.out.println(<span class="string">"success"</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;目标：将word里的图片替换成文本&quot;&gt;&lt;a href=&quot;#目标：将word里的图片替换成文本&quot; class=&quot;headerlink&quot; title=&quot;目标：将word里的图片替换成文本&quot;&gt;&lt;/a&gt;目标：将word里的图片替换成文本&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;流程
      
    
    </summary>
    
      <category term="Java" scheme="/categories/Java/"/>
    
    
      <category term="POI" scheme="/tags/POI/"/>
    
      <category term="Word" scheme="/tags/Word/"/>
    
      <category term="Jsoup" scheme="/tags/Jsoup/"/>
    
  </entry>
  
  <entry>
    <title>OpenOffice-实现文件格式之间的转换.md</title>
    <link href="/2018/12/18/OpenOffice-%E5%AE%9E%E7%8E%B0%E6%96%87%E4%BB%B6%E6%A0%BC%E5%BC%8F%E4%B9%8B%E9%97%B4%E7%9A%84%E8%BD%AC%E6%8D%A2/"/>
    <id>/2018/12/18/OpenOffice-实现文件格式之间的转换/</id>
    <published>2018-12-18T11:10:47.000Z</published>
    <updated>2018-12-18T12:50:46.786Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>iTextPDF-实现向PDF追加内容</title>
    <link href="/2018/12/18/iTextPDF-%E5%AE%9E%E7%8E%B0%E5%90%91PDF%E8%BF%BD%E5%8A%A0%E5%86%85%E5%AE%B9/"/>
    <id>/2018/12/18/iTextPDF-实现向PDF追加内容/</id>
    <published>2018-12-18T11:10:03.000Z</published>
    <updated>2018-12-18T12:49:51.129Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>将Word(.docx)-里的图片替换成文本</title>
    <link href="/2018/12/18/%E5%B0%86Word-docx-%E9%87%8C%E7%9A%84%E5%9B%BE%E7%89%87%E6%9B%BF%E6%8D%A2%E6%88%90%E6%96%87%E6%9C%AC/"/>
    <id>/2018/12/18/将Word-docx-里的图片替换成文本/</id>
    <published>2018-12-18T11:08:31.000Z</published>
    <updated>2018-12-25T03:01:54.817Z</updated>
    
    <content type="html"><![CDATA[<h2 id="目标：将word里的图片替换成文本"><a href="#目标：将word里的图片替换成文本" class="headerlink" title="目标：将word里的图片替换成文本"></a>目标：将word里的图片替换成文本</h2><p><strong>流程、思想：</strong></p><p>读取出Word中的图片 - 存储读取到的图片（提供图片识别原） - 删除Word中的该图片 - 在Word中该图片位置插入替换文字 - 删除存储的图片</p><h3 id="Maven依赖"><a href="#Maven依赖" class="headerlink" title="Maven依赖"></a>Maven依赖</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- poi-实现word文件的读取和修改等操作 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;poi&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;4.0.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- 针对于<span class="number">2007</span>版（.docx） --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;poi-ooxml&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;4.0.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- 针对于<span class="number">2003</span>版（.doc） --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.poi&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;poi-scratchpad&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;4.0.0&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;!-- poi-end --&gt;</span><br></pre></td></tr></table></figure><h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">        textReplacePhoto(<span class="string">"D:\\Test\\原报格式样例3.docx"</span>,</span><br><span class="line">                         <span class="string">"D:\\Test\\原报格式样例3-1.docx"</span>,<span class="string">"D:/Test/img"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将word里的图片全部替换成文本</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> oldFileName 传入原文件的全路径（含文件名）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> newFileName 保存修改后文件的全路径（含文件名）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> picturePath 读取出来的图片保存路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> Exception</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">textReplacePhoto</span><span class="params">(String oldFileName, String newFileName,</span></span></span><br><span class="line"><span class="function"><span class="params">                                    String picturePath)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    File newFile = <span class="keyword">new</span> File(newFileName.replace(<span class="keyword">new</span> File(newFileName).getName(),<span class="string">""</span>));</span><br><span class="line">    <span class="comment">//保存路径不存在，则创建</span></span><br><span class="line">    <span class="keyword">if</span> (!newFile.exists())&#123;</span><br><span class="line">        newFile.mkdirs();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (oldFileName.endsWith(<span class="string">".docx"</span>))&#123;    <span class="comment">//.docx文件的处理方法</span></span><br><span class="line">        <span class="comment">//为了确定图片集中的某一张图片</span></span><br><span class="line">        <span class="keyword">int</span> imgNum=<span class="number">0</span>;</span><br><span class="line">        <span class="comment">//创建输入流</span></span><br><span class="line">        InputStream oldIs = <span class="keyword">new</span> FileInputStream(oldFileName);</span><br><span class="line">        <span class="comment">//创建输出流</span></span><br><span class="line">        OutputStream newOs = <span class="keyword">new</span> FileOutputStream(newFileName);</span><br><span class="line">        <span class="comment">//创建一个XWPFDocument</span></span><br><span class="line">        XWPFDocument docx = <span class="keyword">new</span> XWPFDocument(oldIs);</span><br><span class="line">        <span class="comment">//获取到该文档的所有段落集</span></span><br><span class="line">        List&lt;XWPFParagraph&gt; paras = docx.getParagraphs();</span><br><span class="line">        <span class="comment">//获取到该文档的所有图片集</span></span><br><span class="line">        List&lt;XWPFPictureData&gt; pictures = docx.getAllPictures();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (XWPFParagraph para:paras)&#123;</span><br><span class="line">            <span class="comment">//段落中所有XWPFRun</span></span><br><span class="line">            List&lt;XWPFRun&gt; runList = para.getRuns();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;runList.size();i++) &#123;</span><br><span class="line">                XWPFRun run=runList.get(i);</span><br><span class="line">                <span class="comment">//判断该段落是否是图片</span></span><br><span class="line">                <span class="keyword">if</span> (!run.getEmbeddedPictures().isEmpty())&#123;</span><br><span class="line">                    <span class="comment">//存储读取到的图片,并获取图片全路径</span></span><br><span class="line">                    String pictureName=savePictureDocx(pictures,picturePath,imgNum++);</span><br><span class="line">                    <span class="comment">//实际有图片才进行以下操作</span></span><br><span class="line">                    <span class="keyword">if</span> (pictureName!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                        <span class="comment">//删除图片</span></span><br><span class="line">                        para.removeRun(i);</span><br><span class="line">                        <span class="comment">//插入文字</span></span><br><span class="line">                        para.insertNewRun(i).setText(<span class="string">"&#123;&#123;title&#125;&#125;"</span>);</span><br><span class="line">                        <span class="comment">//删除图片</span></span><br><span class="line">                        deletePicture(pictureName);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        docx.write(newOs);</span><br><span class="line">        docx.close();</span><br><span class="line">        oldIs.close();</span><br><span class="line">        newOs.flush();</span><br><span class="line">        newOs.close();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 存储读取到的图片 - docx</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> pictures 图片集</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> picturePath 图片保存路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> imgNum 确定图片集中的某一张图片</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> 图片全路径</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">savePictureDocx</span><span class="params">(List&lt;XWPFPictureData&gt; pictures,</span></span></span><br><span class="line"><span class="function"><span class="params">    String picturePath,<span class="keyword">int</span> imgNum)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    </span><br><span class="line">    File pictureFile = <span class="keyword">new</span> File(picturePath);</span><br><span class="line">    <span class="comment">//保存路径不存在，则创建</span></span><br><span class="line">    <span class="keyword">if</span> (!pictureFile.exists())&#123;</span><br><span class="line">        pictureFile.mkdirs();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    List&lt;XWPFPictureData&gt; pictures = para.getDocument().getAllPictures();</span><br><span class="line">    <span class="keyword">if</span> (pictures.size()!=<span class="number">0</span>)&#123;</span><br><span class="line">        XWPFPictureData picture = pictures.get(imgNum);</span><br><span class="line">        String rawName = picture.getFileName();</span><br><span class="line">        String fileExt = rawName.substring(rawName.lastIndexOf(<span class="string">"."</span>));</span><br><span class="line">        String newName = System.currentTimeMillis() + </span><br><span class="line">            UUID.randomUUID().toString() + fileExt;</span><br><span class="line">        String pictureName = picturePath + File.separator + newName;</span><br><span class="line">        FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(pictureName);</span><br><span class="line">        fos.write(picture.getData());</span><br><span class="line"></span><br><span class="line">        fos.flush();</span><br><span class="line">        fos.close();</span><br><span class="line">        <span class="keyword">return</span> pictureName;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 删除临时存储的图片</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> pictureName 图片全路径（含文件名）</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">deletePicture</span><span class="params">(String pictureName)</span> </span>&#123;</span><br><span class="line">    File pictureFile = <span class="keyword">new</span> File(pictureName);</span><br><span class="line">    <span class="comment">// 目录此时为空，可以删除</span></span><br><span class="line">    <span class="keyword">return</span> pictureFile.delete();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;目标：将word里的图片替换成文本&quot;&gt;&lt;a href=&quot;#目标：将word里的图片替换成文本&quot; class=&quot;headerlink&quot; title=&quot;目标：将word里的图片替换成文本&quot;&gt;&lt;/a&gt;目标：将word里的图片替换成文本&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;流程
      
    
    </summary>
    
      <category term="Java" scheme="/categories/Java/"/>
    
    
      <category term="POI" scheme="/tags/POI/"/>
    
      <category term="Word" scheme="/tags/Word/"/>
    
  </entry>
  
  <entry>
    <title>用VNC搭建Ubuntu VNC可视化界面</title>
    <link href="/2018/12/10/%E7%94%A8VNC%E6%90%AD%E5%BB%BAUbuntu%20VNC%E5%8F%AF%E8%A7%86%E5%8C%96%E7%95%8C%E9%9D%A2/"/>
    <id>/2018/12/10/用VNC搭建Ubuntu VNC可视化界面/</id>
    <published>2018-12-10T11:48:46.000Z</published>
    <updated>2019-01-08T03:59:28.801Z</updated>
    
    <content type="html"><![CDATA[<h2 id="安装配置软件"><a href="#安装配置软件" class="headerlink" title="安装配置软件"></a>安装配置软件</h2><ul><li><h3 id="VNC的安装与配置"><a href="#VNC的安装与配置" class="headerlink" title="VNC的安装与配置"></a>VNC的安装与配置</h3><p>安装之前先输入（获取最新套件的信息）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br></pre></td></tr></table></figure><p>输入以下命令安装VNC，安装过程中需要输入Y来确认</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install vnc4server</span><br></pre></td></tr></table></figure><p>启动VNC（第一次启动需要设置密码）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vncserver</span><br></pre></td></tr></table></figure><p>开机启动请参考：<a href="ubuntu-18-04-1-开机启动脚本.md">ubuntu-18-04-1-开机启动脚本</a></p><h3 id="设置vncservgnome-桌面环境安装与配置（可直接跳至第3步）"><a href="#设置vncservgnome-桌面环境安装与配置（可直接跳至第3步）" class="headerlink" title="设置vncservgnome 桌面环境安装与配置（可直接跳至第3步）"></a>设置vncservgnome 桌面环境安装与配置（可直接跳至第3步）</h3><p>安装x－windows的基础</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install x-window-system-core</span><br></pre></td></tr></table></figure><p>安装登录管理器</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gdm</span><br></pre></td></tr></table></figure><p>安装Ubuntu的桌面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ubuntu-desktop</span><br></pre></td></tr></table></figure><p>安装gnome配套软件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gnome-panel gnome-settings-daemon metacity nautilus gnome-terminal</span><br></pre></td></tr></table></figure><p><strong>修改VNC配置文件</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi ~/.vnc/xstartup</span><br></pre></td></tr></table></figure><p><strong>修改为：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"># Uncomment the following two lines for normal desktop:</span><br><span class="line">export XKL_XMODMAP_DISABLE=1</span><br><span class="line"> unset SESSION_MANAGER</span><br><span class="line"># exec /etc/X11/xinit/xinitrc</span><br><span class="line">unset DBUS_SESSION_BUS_ADDRESS</span><br><span class="line">gnome-panel &amp;</span><br><span class="line">gnmoe-settings-daemon &amp;</span><br><span class="line">metacity &amp;</span><br><span class="line">nautilus &amp;</span><br><span class="line">gnome-terminal &amp;</span><br></pre></td></tr></table></figure><p>杀掉原桌面进程，输入命令（其中的:1是桌面号）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vncserver -kill :1</span><br></pre></td></tr></table></figure><p>输入以下命令生成新的会话：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vncserver :1</span><br></pre></td></tr></table></figure></li></ul><h2 id="ubuntu卸载gnome桌面（可直接跳至第3步）"><a href="#ubuntu卸载gnome桌面（可直接跳至第3步）" class="headerlink" title="ubuntu卸载gnome桌面（可直接跳至第3步）"></a>ubuntu卸载gnome桌面（可直接跳至第3步）</h2><p> 之前安装好了ubuntu18.04，本来想装个gnome shell来美化一下桌面，结果出现了开机黑屏（灰屏）的现象，经网上查询发现是显卡驱动在gnome3的环境下产生了不兼容，具体解决方法我还没找到，情急之下只能先卸载掉gnome桌面环境。</p><ul><li><h3 id="卸载掉gnome-shell主程序"><a href="#卸载掉gnome-shell主程序" class="headerlink" title="卸载掉gnome-shell主程序"></a>卸载掉gnome-shell主程序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove gnome-shell</span><br></pre></td></tr></table></figure></li><li><h3 id="卸载掉gnome"><a href="#卸载掉gnome" class="headerlink" title="卸载掉gnome"></a>卸载掉gnome</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove gnome</span><br></pre></td></tr></table></figure></li><li><h3 id="卸载不需要的依赖关系"><a href="#卸载不需要的依赖关系" class="headerlink" title="卸载不需要的依赖关系"></a>卸载不需要的依赖关系</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get autoremove</span><br></pre></td></tr></table></figure></li><li><h3 id="彻底卸载删除gnome的相关配置文件"><a href="#彻底卸载删除gnome的相关配置文件" class="headerlink" title="彻底卸载删除gnome的相关配置文件"></a>彻底卸载删除gnome的相关配置文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get purge gnome</span><br></pre></td></tr></table></figure></li><li><h3 id="清理安装gnome时候留下的缓存程序软件包"><a href="#清理安装gnome时候留下的缓存程序软件包" class="headerlink" title="清理安装gnome时候留下的缓存程序软件包"></a>清理安装gnome时候留下的缓存程序软件包</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get autoclean</span><br><span class="line">sudo apt-get clean</span><br></pre></td></tr></table></figure></li></ul><h2 id="ubuntu运行VNC-Server无桌面时的解决方案"><a href="#ubuntu运行VNC-Server无桌面时的解决方案" class="headerlink" title="ubuntu运行VNC Server无桌面时的解决方案"></a>ubuntu运行VNC Server无桌面时的解决方案</h2><p>配置vnc server实在是一个特别诡异的事，我在不同的ubuntu机器上配置服务时，总是遇到千奇百怪的问题，大部分情况下比较顺利，将<code>~/.vnc/xstartup</code>最后一句<code>x-window-manager&amp;</code>替换为<code>gnome-session&amp;</code>就能顺利地出现桌面，而有些则不行，需要改为<code>gnome-session --session=ubuntu-2d&amp;</code></p><ul><li><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>而今天遇到的ubuntu 18.04，则死活不行，用realvnc viewer连接之后，只有灰灰的一个背景，没有桌面，没有terminal。</p><p>查阅了很多博文，有说需要安装<code>gnome-session-fallback</code>的，有说需要安装<code>gdm</code>的，也有用<code>kde</code>的，除了kde我没有尝试，另外两种验证无效，依然只有一个灰色背景。</p><p>最后用xfce4桌面解决，选择些方案一是因为xfce相对较小，gnome-session死活不行的情况下，再将一个kde未免太过兴师动众，xfce我使用过一段时间，是一个相当轻量级的GUI环境，清爽易用，功能一点不含糊。决定之后，一次尝试即成功。</p></li><li><h3 id="安装xfce"><a href="#安装xfce" class="headerlink" title="安装xfce"></a>安装xfce</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install gnome-core xfce4</span><br></pre></td></tr></table></figure></li><li><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><p>编辑<code>~/.vnc/xstartup</code>文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">unset SESSION_MANAGER</span><br><span class="line">unset DBUS_SESSION_BUS_ADDRESS</span><br><span class="line">startxfce4 &amp;</span><br><span class="line">[ -x /etc/vnc/xstartup ] &amp;&amp; exec /etc/vnc/xstartup</span><br><span class="line">[ -r $HOME/.Xresources ] &amp;&amp; xrdb $HOME/.Xresources</span><br><span class="line">xsetroot -solid grey</span><br><span class="line">vncconfig -iconic &amp;</span><br></pre></td></tr></table></figure><p>输入以下命令生成新的会话：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vncserver :1</span><br></pre></td></tr></table></figure></li></ul><h2 id="本地使用VNC连接"><a href="#本地使用VNC连接" class="headerlink" title="本地使用VNC连接"></a>本地使用VNC连接</h2><ol><li>本地安装VNC后，使用ip地址:1（其中的:1是桌面号）的方式连接</li><li>输入之前设置的VNC密码后点击连接</li></ol><h2 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h2><ul><li><h3 id="下载地址"><a href="#下载地址" class="headerlink" title="下载地址"></a>下载地址</h3><p><a href="https://www.realvnc.com/en/connect/download/viewer/" target="_blank" rel="noopener">VNC Viewer和VNC Server</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;安装配置软件&quot;&gt;&lt;a href=&quot;#安装配置软件&quot; class=&quot;headerlink&quot; title=&quot;安装配置软件&quot;&gt;&lt;/a&gt;安装配置软件&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;VNC的安装与配置&quot;&gt;&lt;a href=&quot;#VNC的安装与配置&quot; class=&quot;h
      
    
    </summary>
    
      <category term="Linux" scheme="/categories/Linux/"/>
    
    
      <category term="Ubuntu" scheme="/tags/Ubuntu/"/>
    
      <category term="技巧" scheme="/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="配置" scheme="/tags/%E9%85%8D%E7%BD%AE/"/>
    
      <category term="VNC" scheme="/tags/VNC/"/>
    
  </entry>
  
  <entry>
    <title>Linux下安装Java JDK8</title>
    <link href="/2018/12/10/Linux%E4%B8%8B%E5%AE%89%E8%A3%85Java-JDK8/"/>
    <id>/2018/12/10/Linux下安装Java-JDK8/</id>
    <published>2018-12-10T11:44:56.000Z</published>
    <updated>2018-12-10T11:46:35.507Z</updated>
    
    <content type="html"><![CDATA[<ul><li><h3 id="手动下载压缩包安装oracle-Java-JDK"><a href="#手动下载压缩包安装oracle-Java-JDK" class="headerlink" title="手动下载压缩包安装oracle Java JDK"></a>手动下载压缩包安装oracle Java JDK</h3><ol><li><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">前往oracle Java官网下载JDK</a></p></li><li><p>解压缩到指定目录（以jdk-8u144-linux-x64.tar.gz为例）</p><ul><li><p>创建目录:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir /usr/lib/jvm</span><br></pre></td></tr></table></figure></li><li><p>解压缩到该目录:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo tar -zxvf jdk-7u60-linux-x64.gz -C /usr/lib/jvm</span><br></pre></td></tr></table></figure></li></ul></li><li><p>修改环境变量:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi ~/.bashrc</span><br></pre></td></tr></table></figure><p>在文件末尾追加下面内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#set oracle jdk environment</span><br><span class="line">export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_144  ## 这里要注意目录要换成自己解压的jdk 目录</span><br><span class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre  </span><br><span class="line">export CLASSPATH=.:$&#123;JAVA_HOME&#125;/lib:$&#123;JRE_HOME&#125;/lib  </span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br></pre></td></tr></table></figure><p>使环境变量马上生效：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source ~/.bashrc</span><br></pre></td></tr></table></figure></li><li><p>查看java版本，看看是否安装成功：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure></li></ol></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;手动下载压缩包安装oracle-Java-JDK&quot;&gt;&lt;a href=&quot;#手动下载压缩包安装oracle-Java-JDK&quot; class=&quot;headerlink&quot; title=&quot;手动下载压缩包安装oracle Java JDK&quot;&gt;&lt;/a&gt;手动下载压
      
    
    </summary>
    
      <category term="Linux" scheme="/categories/Linux/"/>
    
    
      <category term="技巧" scheme="/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="配置" scheme="/tags/%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>Linux的使用技巧</title>
    <link href="/2018/12/10/Linux%E7%9A%84%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7/"/>
    <id>/2018/12/10/Linux的使用技巧/</id>
    <published>2018-12-10T11:21:02.000Z</published>
    <updated>2019-01-08T03:56:11.290Z</updated>
    
    <content type="html"><![CDATA[<h2 id="修改用户名"><a href="#修改用户名" class="headerlink" title="修改用户名"></a>修改用户名</h2><p>例：将admin改为test（ubuntu）</p><ul><li><h3 id="修改-etc-passwd用户信息文件"><a href="#修改-etc-passwd用户信息文件" class="headerlink" title="修改 /etc/passwd用户信息文件"></a>修改 /etc/passwd用户信息文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/passwd</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#admin:x:1001:1001:admin,,,:/home/admin:/bin/bash</span><br><span class="line">#把用户名admin改成rest</span><br><span class="line">#test:x:1001:1001:admin,,,:/home/test:/bin/bash</span><br></pre></td></tr></table></figure><p><strong>注：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">admin:x:1001:1001:admin,,,:/home/admin:/bin/bash</span><br><span class="line">中的admin,,,不可修改，若修改后重启，你将会因为密码错误而不能成功登入系统（只得去机房重新注册用户了）</span><br></pre></td></tr></table></figure></li><li><h3 id="修改-etc-shadow用户密码文件"><a href="#修改-etc-shadow用户密码文件" class="headerlink" title="修改 /etc/shadow用户密码文件"></a>修改 /etc/shadow用户密码文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/shadow</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#admin:Dnakfw28zf38w:8764:0:168:7:::</span><br><span class="line">#由于密码加密方式存放，只修改用户名即可（密码不变）</span><br><span class="line">#test:Dnakfw28zf38w:8764:0:168:7:::</span><br></pre></td></tr></table></figure></li><li><h3 id="再修改-etc-group用户组文件"><a href="#再修改-etc-group用户组文件" class="headerlink" title="再修改 /etc/group用户组文件"></a>再修改 /etc/group用户组文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/group</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#admin:x:1:root,bin,admin</span><br><span class="line">#修改admin组为test组</span><br><span class="line">#test:x:1:root,bin,test</span><br></pre></td></tr></table></figure></li><li><h3 id="修改用户的家目录"><a href="#修改用户的家目录" class="headerlink" title="修改用户的家目录"></a>修改用户的家目录</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /home/admin /home/test</span><br></pre></td></tr></table></figure></li><li><h3 id="xx-is-not-in-the-sudoers-file-问题解决"><a href="#xx-is-not-in-the-sudoers-file-问题解决" class="headerlink" title="xx is not in the sudoers file 问题解决"></a>xx is not in the sudoers file 问题解决</h3><p>首先利用whereis 命令查找sudoers配置文件的目录（默认会在/etc/sudoers)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whereis sudoers</span><br></pre></td></tr></table></figure><p>然后就可以利用vi编辑器来把用户添加到sudoers之中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sudoers</span><br></pre></td></tr></table></figure><p>然后找到root    ALL=(ALL)       ALL 或者 root    ALL=(ALL:ALL) ALL所在的位置，把所要添加的用户添加到文件之中</p><p>下面是添加完的结果。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Allow root to run any commands anywhere</span><br><span class="line"></span><br><span class="line">root    ALL=(ALL)       ALL</span><br><span class="line">maliangALL=(ALL)       ALL（这一行是添加的内容，maliang是我的用户名）</span><br></pre></td></tr></table></figure></li></ul><h2 id="修改用户密码"><a href="#修改用户密码" class="headerlink" title="修改用户密码"></a>修改用户密码</h2><p>在终端运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd username</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">改变口令为 username。</span><br><span class="line">(当前)UNIX 口令：&lt;输入现在的密码&gt; </span><br><span class="line">输入新的 UNIX 口令： &lt;输入新密码&gt; </span><br><span class="line">重新输入新的 UNIX 口令：&lt;重新输入新密码&gt;</span><br><span class="line"></span><br><span class="line">passwd：已成功更新密码</span><br></pre></td></tr></table></figure><h2 id="开启root用户和使用root用户登陆"><a href="#开启root用户和使用root用户登陆" class="headerlink" title="开启root用户和使用root用户登陆"></a>开启root用户和使用root用户登陆</h2><ol><li><p><strong>以普通用户登录系统，创建root用户的密码</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd root</span><br></pre></td></tr></table></figure></li><li><p><strong>修改文件<code>sudo vi /usr/share/lightdm/lightdm.conf.d/50-ubuntu.conf</code>文件，增加两行：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">greeter-show-manual-login=true</span><br><span class="line">allow-guest=false</span><br></pre></td></tr></table></figure><p>保存</p></li><li><p><strong>修改<code>/etc/pam.d/gdm-autologin</code>、<code>/etc/pam.d/gdm-password</code>文件和<code>/root/.profile</code>文件</strong>（<em>ubuntu-18.04需要此步骤</em>）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/pam.d/gdm-autologin</span><br></pre></td></tr></table></figure><p>注释掉：<code>auth    required        pam_succeed_if.so user != root quiet_success</code> 保存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/pam.d/gdm-password</span><br></pre></td></tr></table></figure><p>注释掉：<code>auth    required        pam_succeed_if.so user != root quiet_success</code> 保存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /root/.profile</span><br></pre></td></tr></table></figure><p>将文件末尾的<code>mesg n || true</code>这一行修改成<code>tty -s &amp;&amp; mesg n || true</code> 保存</p></li><li><p><strong>重启系统，输入root用户名和密码，登录系统</strong></p></li></ol><ul><li><p><strong>解决Ubuntu18.04不能用Xshell使用root用户登录</strong></p><p>今天使用Xshell6连接Ubuntu18.04时，连接普通用户可以，但是连接root用户不行（但是实体机或者虚拟机可以root用户登录）</p><p>解决方案是：</p><p>在Ubuntu18.04中 修改 <code>/etc/ssh/sshd_config</code>这个文件：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ssh/sshd_config</span><br></pre></td></tr></table></figure><p>这是没修改前的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"># Authentication:</span><br><span class="line"></span><br><span class="line">#LoginGraceTime 2m</span><br><span class="line">#PermitRootLogin prohibit-password</span><br><span class="line">#StrictModes yes</span><br><span class="line">#MaxAuthTries 6</span><br><span class="line">#MaxSessions 10</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>修改后的：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">...</span><br><span class="line"># Authentication:</span><br><span class="line"></span><br><span class="line">LoginGraceTime 2m</span><br><span class="line">#PermitRootLogin prohibit-password</span><br><span class="line">PermitRootLogin yes</span><br><span class="line">StrictModes yes</span><br><span class="line">#MaxAuthTries 6</span><br><span class="line">#MaxSessions 10</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>然后再在终端输入一下命令：<code>/etc/init.d/ssh restart</code>  来重启ssh服务</p><p>重新使用root连接，就可以了</p></li></ul><h2 id="找出文件所在的位置"><a href="#找出文件所在的位置" class="headerlink" title="找出文件所在的位置"></a>找出文件所在的位置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">whereis sudoers（你要找的文件名）</span><br></pre></td></tr></table></figure><h2 id="查看端口占用并杀死-kill"><a href="#查看端口占用并杀死-kill" class="headerlink" title="查看端口占用并杀死(kill)"></a>查看端口占用并杀死(kill)</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 查看</span><br><span class="line">sudo netstat -tlnp|grep 9090</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 杀死</span><br><span class="line">kill -9 31540</span><br></pre></td></tr></table></figure><h2 id="如何从Yum库下载rpm包但不安装"><a href="#如何从Yum库下载rpm包但不安装" class="headerlink" title="如何从Yum库下载rpm包但不安装"></a>如何从Yum库下载rpm包但不安装</h2><p>方法一（推荐）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 将一个包（包含所有依赖）下载到一个指定的目录(如/opt/gccmkdir/)：</span><br><span class="line">yum install -y gcc --downloadonly --downloaddir=/opt/gccmkdir/</span><br></pre></td></tr></table></figure><p>方法二</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># --resolve 表示为下载依赖</span><br><span class="line">yumdownloader lsof --resolve --destdir=/data/mydepot/</span><br></pre></td></tr></table></figure><p>方法三（推荐）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 把/etc/yum.conf配置中的keepcache=0参数修改为keepcache=1</span><br><span class="line"># 再yum 下载：</span><br><span class="line">yum install -y gcc</span><br><span class="line">#默认情况下，RPM包会保存在下面的目录中:</span><br><span class="line">/var/cache/yum/x86_64/[centos/fedora-version]/[repository]/packages</span><br></pre></td></tr></table></figure><h2 id="apt-get-与-yum安装有啥区别"><a href="#apt-get-与-yum安装有啥区别" class="headerlink" title="apt-get 与 yum安装有啥区别"></a>apt-get 与 yum安装有啥区别</h2><p>rpm包和deb包是两种Linux系统下最常见的安装包格式，在安装一些软件或服务的时候免不了要和它们打交道。<br>rpm包主要应用在RedHat系列包括 Fedora等发行版的Linux系统上，<br>deb包主要应用于Debian系列包括现在比较流行的Ubuntu等发行版上。 </p><p>我们知道如果要安装现成的这两种包的话，安装rpm包的命令是“rpm -参数”，安装deb包的命令是“dpkg -参数”。而Linux系统很方便和人性化的一点就是很多软件或服务根本就不用我们去下载，直接使用相应的命令就可以管理了，可能这就是传说中的 “云”的概念。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">yum可以用于运作rpm包，例如在Fedora系统上对某个软件的管理：</span><br><span class="line">安装：yum install &lt;package_name&gt; </span><br><span class="line">卸载：yum remove &lt;package_name&gt; </span><br><span class="line">更新：yum update &lt;package_name&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get可以用于运作deb包，例如在Ubuntu系统上对某个软件的管理：</span><br><span class="line">安装：apt-get install &lt;package_name&gt; </span><br><span class="line">卸载：apt-get remove &lt;package_name&gt; </span><br><span class="line">更新：apt-get update &lt;package_name&gt;</span><br></pre></td></tr></table></figure><h2 id="安装rpm包"><a href="#安装rpm包" class="headerlink" title="安装rpm包"></a>安装rpm包</h2><p>进入系统下存放对应.rpm文件的目录，执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /opt/gccmkdir/</span><br><span class="line">rpm -Uvh *.rpm --nodeps --force</span><br></pre></td></tr></table></figure><p><strong>注：rpm -Uvh *.rpm –nodeps –force</strong></p><ol><li>-Uvh就是升级软件包–Update</li><li>*.rpm就是所有的.rpm包；</li><li>–nodeps就是安装时不检查依赖关系，比如你这个rpm需要A，但是你没装A，这样你的包就装不上，用了–nodeps你就能装上了；</li><li>–force就是强制安装，比如你装过这个rpm的版本1，如果你想装这个rpm的版本2，就需要用–force强制安装。</li></ol><h2 id="查看Linux版本方法"><a href="#查看Linux版本方法" class="headerlink" title="查看Linux版本方法"></a>查看Linux版本方法</h2><p>方法一</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># lsb_release -a</span><br><span class="line">LSB Version:    :core-3.1-ia32:core-3.1-noarch:graphics-3.1-ia32:graphics-3.1-noarch</span><br><span class="line">Distributor ID: CentOS</span><br><span class="line">Description:    CentOS release 5.4 (Final)</span><br><span class="line">Release:        5.4</span><br><span class="line">Codename:       Final</span><br></pre></td></tr></table></figure><p>方法二</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cat /etc/redhat-release</span><br><span class="line">CentOS release 5.4 (Final)</span><br></pre></td></tr></table></figure><p>方法三</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># rpm -q centos-release</span><br><span class="line">centos-release-5-4.el5.centos.1</span><br></pre></td></tr></table></figure><h2 id="linux运行jar包"><a href="#linux运行jar包" class="headerlink" title="linux运行jar包"></a>linux运行jar包</h2><p>要运行java的项目需要先将项目打包成war包或者jar包，打包成war包需要将war包部署到tomcat服务器上才能运行。而打包成jar包可以直接使用java命令执行。在linux系统中运行jar包主要有以下四种方式。</p><ol><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar XXX.jar</span><br></pre></td></tr></table></figure><p>这是最基本的jar包执行方式，但是当我们用ctrl+c中断或者关闭窗口时，程序也会中断执行。</p></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar XXX.jar &amp;</span><br></pre></td></tr></table></figure><p>&amp;代表在后台运行，使用ctrl+c不会中断程序的运行，但是关闭窗口会中断程序的运行。</p></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -jar XXX.jar &amp;</span><br></pre></td></tr></table></figure><p>使用这种方式运行的程序日志会输出到当前目录下的nohup.out文件，使用ctrl+c中断或者关闭窗口都不会中断程序的执行。</p></li><li><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -jar XXX.jar &gt;temp.out &amp;</span><br></pre></td></tr></table></figure><p>‘&gt;temp.out’的意思是将日志输出重定向到temp.out文件，使用ctrl+c中断或者关闭窗口都不会中断程序的执行。</p></li></ol><h2 id="XShell上传、下载本地文件到linux服务器"><a href="#XShell上传、下载本地文件到linux服务器" class="headerlink" title="XShell上传、下载本地文件到linux服务器"></a>XShell上传、下载本地文件到linux服务器</h2><p>在linux主机上，安装上传下载工具包rz及sz; 如果不知道你要安装包的具体名称，可以使用yum provides */name 进行查找系统自带软件包的信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@host ~]# yum provides */rz</span><br><span class="line">...</span><br><span class="line">lrzsz-0.12.20-36.el7.x86_64 : The lrz and lsz modem communications programs</span><br><span class="line">Repo        : base</span><br><span class="line">Matched from:</span><br><span class="line">Filename    : /usr/bin/rz</span><br></pre></td></tr></table></figure><p>一般会列出软件包的名称及版本，还有安装路径；查询到软件包名后，使用yum install -y 包名 进行安装。</p><p><strong>lrzsz包安装完成后包括上传rz、下载sz命令</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@host ~]# yum install -y lrzsz</span><br></pre></td></tr></table></figure><p>上传命令为rz；下再命令为sz</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#上传（windows-&gt;linux）文件-弹出窗口选择需要上传的文件</span><br><span class="line">[root@host ~]# rz</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#指定下载（linux-&gt;windows）哪个文件-弹出窗口选择需要保存的路径</span><br><span class="line">[root@host ~]# sz 文件名称</span><br></pre></td></tr></table></figure><h2 id="ubuntu安装ssh服务"><a href="#ubuntu安装ssh服务" class="headerlink" title="ubuntu安装ssh服务"></a>ubuntu安装ssh服务</h2><p>SSH分客户端<strong>openssh-client</strong>和<strong>openssh-server</strong></p><ol><li>如果你只是想登陆别的机器的SSH只需要安装openssh-client（ubuntu有默认安装，如果没有则<code>sudo apt-get install openssh-client</code>）</li><li>如果要使本机开放SSH服务就需要安装openssh-serversudo（<code>apt-get install openssh-server</code>）</li></ol><p>有时候当你执行<code>sudo apt-get XXX</code>这种命令时出现类似下面的输出错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">E: Could not get lock /var/lib/dpkg/lock - open (11 Resource temporarily unavailable)</span><br><span class="line">E: Unable to lock the administration directory (/var/lib/dpkg/) is another process using it?</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">E: Could not ge lock /var/lib/apt/lists/lock - open (11: Resource temporarily</span><br><span class="line">unavailable)</span><br><span class="line">E: Unable to lock directory /var/lib/apt/lists/ </span><br><span class="line">E: Could not get lock /var/lib/dpkg/lock - open (11: Resource temporarily unavailable) </span><br><span class="line">E: Unable to lock the administration directory (/var/lib/dpkg/), is another process using it?</span><br></pre></td></tr></table></figure><p><strong>解释</strong></p><p>出现这个问题的原因是，还有一个线程在使用<strong>apt-get</strong>进行下载的操作。但是奇怪的是，我就是没有找到其他使用了<strong>apt-get</strong>指令的终端界面。那么如何解决这个问题呢，难道要重新启动电脑吗，重启电脑是可以解决这个问题，但是我接下来教你的方法，才是真正的解决方法。</p><p><strong>解决办法</strong></p><p>先搜索所有运行着的线程</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -A | grep apt-get</span><br></pre></td></tr></table></figure><p>你会得到类似下面的输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root 752  0.0  0.0   4508  1628 ?  Ss 01:13 0:00 /bin/sh /usr/lib/apt/apt.systemd.daily</span><br><span class="line">_apt 2098  0.1  0.1  49572  5524 ?   S    01:18   0:06 /usr/lib/apt/methods/http</span><br><span class="line">aobo 4425  0.0  0.0  18484   980 pts/1    S+   02:13   0:00 grep --color=auto apt</span><br></pre></td></tr></table></figure><p>第2列就是线程号(kill processnumber)。我们将<strong>apt</strong>相关的进程给关闭掉，需要使用<code>sudo</code>权限：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo kill 2098</span><br></pre></td></tr></table></figure><p>输出：</p><p>bash: kill: (2098) - Operation not permitted</p><p><strong>然后确认sshserver是否启动了：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps -e |grep ssh</span><br></pre></td></tr></table></figure><p>如果看到sshd那说明ssh-server已经启动了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;修改用户名&quot;&gt;&lt;a href=&quot;#修改用户名&quot; class=&quot;headerlink&quot; title=&quot;修改用户名&quot;&gt;&lt;/a&gt;修改用户名&lt;/h2&gt;&lt;p&gt;例：将admin改为test（ubuntu）&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;h3 id=&quot;修改-etc-passwd用
      
    
    </summary>
    
      <category term="Linux" scheme="/categories/Linux/"/>
    
    
      <category term="Ubuntu" scheme="/tags/Ubuntu/"/>
    
      <category term="技巧" scheme="/tags/%E6%8A%80%E5%B7%A7/"/>
    
      <category term="配置" scheme="/tags/%E9%85%8D%E7%BD%AE/"/>
    
      <category term="CentOS" scheme="/tags/CentOS/"/>
    
      <category term="RedHat" scheme="/tags/RedHat/"/>
    
  </entry>
  
</feed>
