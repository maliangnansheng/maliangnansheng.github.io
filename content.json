{"meta":{"title":"马亮南生的博客","subtitle":null,"description":null,"author":"马亮南生","url":"http://yoursite.com"},"pages":[{"title":"categories","date":"2018-12-06T11:48:02.000Z","updated":"2018-12-06T11:48:02.109Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2018-12-06T11:46:40.000Z","updated":"2018-12-06T11:46:40.230Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Hello World","slug":"hello-world - 副本 (5)","date":"2018-12-06T12:07:34.042Z","updated":"2018-12-06T08:36:19.861Z","comments":true,"path":"2018/12/06/hello-world - 副本 (5)/","link":"","permalink":"http://yoursite.com/2018/12/06/hello-world - 副本 (5)/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world - 副本 (4)","date":"2018-12-06T12:07:33.712Z","updated":"2018-12-06T08:36:19.861Z","comments":true,"path":"2018/12/06/hello-world - 副本 (4)/","link":"","permalink":"http://yoursite.com/2018/12/06/hello-world - 副本 (4)/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world - 副本 (3)","date":"2018-12-06T12:07:33.377Z","updated":"2018-12-06T08:36:19.861Z","comments":true,"path":"2018/12/06/hello-world - 副本 (3)/","link":"","permalink":"http://yoursite.com/2018/12/06/hello-world - 副本 (3)/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world - 副本 (2)","date":"2018-12-06T12:07:33.005Z","updated":"2018-12-06T08:36:19.861Z","comments":true,"path":"2018/12/06/hello-world - 副本 (2)/","link":"","permalink":"http://yoursite.com/2018/12/06/hello-world - 副本 (2)/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world - 副本","date":"2018-12-06T12:07:32.476Z","updated":"2018-12-06T08:36:19.861Z","comments":true,"path":"2018/12/06/hello-world - 副本/","link":"","permalink":"http://yoursite.com/2018/12/06/hello-world - 副本/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"我的第一篇文章","slug":"我的第一篇文章 - 副本 (2)","date":"2018-12-06T09:14:17.000Z","updated":"2018-12-06T09:15:36.421Z","comments":true,"path":"2018/12/06/我的第一篇文章 - 副本 (2)/","link":"","permalink":"http://yoursite.com/2018/12/06/我的第一篇文章 - 副本 (2)/","excerpt":"","text":"RedHat7.2 下离线安装之myshell.sh说明一、准备将准备的所有依赖包（test文件夹中）拷贝至离线服务器某目录下（例如：/opt）12#转移包到/mnt/sudo mv test /mnt/ 二、前提 安装gcc和zlib 进入RedHat下存放对应.rpm文件的目录，执行 12cd /mnt/test/gccmkdir/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/zlibmkdir/rpm -Uvh *.rpm --nodeps --force 注：rpm -Uvh *.rpm –nodeps –force -Uvh就是升级软件包–Update *.rpm就是所有的.rpm包； –nodeps就是安装时不检查依赖关系，比如你这个rpm需要A，但是你没装A，这样你的包就装不上，用了–nodeps你就能装上了； –force就是强制安装，比如你装过这个rpm的版本1，如果你想装这个rpm的版本2，就需要用–force强制安装。 三、正式开始各种所需包，提前准备；或者安装的过程中发现缺啥包，再去对应着下载也行。 pip安装1234cd /mnt/test/tar -zxvf pip-9.0.1.tar.gzcd pip-9.0.1python setup.py install 安装 Python 1234567cd /mnt/test/tar zxvf Python-3.6.0.tgzcd /mnt/test/Python-3.6.0#编译安装./configure --with-sslmakesudo make install 安装 tensorflow-gpu 12345678910111213141516cd /mnt/test/pip3 install six-1.11.0-py2.py3-none-any.whlpip3 install termcolor-1.1.0.tar.gzpip3 install gast-0.2.0.tar.gzpip3 install protobuf-3.5.2-cp36-cp36m-manylinux1_x86_64.whlpip3 install numpy-1.15.3-cp36-cp36m-manylinux1_x86_64.whlpip3 install wheel-0.30.0-py2.py3-none-any.whlpip3 install astor-0.6.2-py2.py3-none-any.whlpip3 install Werkzeug-0.14.1-py2.py3-none-any.whlpip3 install Markdown-2.6.11-py2.py3-none-any.whlpip3 install tensorboard-1.9.0-py3-none-any.whlpip3 install absl-py-0.1.11.tar.gzpip3 install grpcio-1.10.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install tensorflow_gpu-1.9.0-cp36-cp36m-manylinux1_x86_64.whl 安装 Keras 1234567pip3 install PyYAML-3.13.tar.gzpip3 install h5py-2.8.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install Keras_Preprocessing-1.0.5-py2.py3-none-any.whlpip3 install Keras_Applications-1.0.6-py2.py3-none-any.whlpip3 install scipy-1.1.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install Keras-2.2.4-py2.py3-none-any.whl 安装 opencv_python 1pip3 install opencv_python-3.4.2.17-cp36-cp36m-manylinux1_x86_64.whl 安装 Pillow 1pip3 install Pillow-5.3.0-cp36-cp36m-manylinux1_x86_64.whl 安装 dlocr 12345678pip3 install python_dateutil-2.7.5-py2.py3-none-any.whlpip3 install pytz-2018.7-py2.py3-none-any.whlpip3 install pandas-0.23.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install xmltodict-0.11.0-py2.py3-none-any.whlpip3 install pyparsing-2.3.0-py2.py3-none-any.whlpip3 install cycler-0.10.0-py2.py3-none-any.whlpip3 install matplotlib-2.0.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install dlocr-0.1.tar.gz 安装 thrift 1pip3 install thrift-0.11.0.tar.gz 安装 libSM、libXrender、libXext、openssl和openssl-devel进入CentOS下存放对应.rpm文件的目录，执行 12cd /mnt/test/Libsm/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/libXrender/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/libXext/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/opensslrpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/openssl-develrpm -Uvh *.rpm --nodeps --force 注：rpm -Uvh *.rpm –nodeps –force -Uvh就是升级软件包–Update *.rpm就是所有的.rpm包； –nodeps就是安装时不检查依赖关系，比如你这个rpm需要A，但是你没装A，这样你的包就装不上，用了–nodeps你就能装上了； –force就是强制安装，比如你装过这个rpm的版本1，如果你想装这个rpm的版本2，就需要用–force强制安装。 四、结束大功告成…","categories":[],"tags":[]},{"title":"我的第一篇文章","slug":"我的第一篇文章 - 副本 (4)","date":"2018-12-06T09:14:17.000Z","updated":"2018-12-06T09:15:36.421Z","comments":true,"path":"2018/12/06/我的第一篇文章 - 副本 (4)/","link":"","permalink":"http://yoursite.com/2018/12/06/我的第一篇文章 - 副本 (4)/","excerpt":"","text":"RedHat7.2 下离线安装之myshell.sh说明一、准备将准备的所有依赖包（test文件夹中）拷贝至离线服务器某目录下（例如：/opt）12#转移包到/mnt/sudo mv test /mnt/ 二、前提 安装gcc和zlib 进入RedHat下存放对应.rpm文件的目录，执行 12cd /mnt/test/gccmkdir/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/zlibmkdir/rpm -Uvh *.rpm --nodeps --force 注：rpm -Uvh *.rpm –nodeps –force -Uvh就是升级软件包–Update *.rpm就是所有的.rpm包； –nodeps就是安装时不检查依赖关系，比如你这个rpm需要A，但是你没装A，这样你的包就装不上，用了–nodeps你就能装上了； –force就是强制安装，比如你装过这个rpm的版本1，如果你想装这个rpm的版本2，就需要用–force强制安装。 三、正式开始各种所需包，提前准备；或者安装的过程中发现缺啥包，再去对应着下载也行。 pip安装1234cd /mnt/test/tar -zxvf pip-9.0.1.tar.gzcd pip-9.0.1python setup.py install 安装 Python 1234567cd /mnt/test/tar zxvf Python-3.6.0.tgzcd /mnt/test/Python-3.6.0#编译安装./configure --with-sslmakesudo make install 安装 tensorflow-gpu 12345678910111213141516cd /mnt/test/pip3 install six-1.11.0-py2.py3-none-any.whlpip3 install termcolor-1.1.0.tar.gzpip3 install gast-0.2.0.tar.gzpip3 install protobuf-3.5.2-cp36-cp36m-manylinux1_x86_64.whlpip3 install numpy-1.15.3-cp36-cp36m-manylinux1_x86_64.whlpip3 install wheel-0.30.0-py2.py3-none-any.whlpip3 install astor-0.6.2-py2.py3-none-any.whlpip3 install Werkzeug-0.14.1-py2.py3-none-any.whlpip3 install Markdown-2.6.11-py2.py3-none-any.whlpip3 install tensorboard-1.9.0-py3-none-any.whlpip3 install absl-py-0.1.11.tar.gzpip3 install grpcio-1.10.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install tensorflow_gpu-1.9.0-cp36-cp36m-manylinux1_x86_64.whl 安装 Keras 1234567pip3 install PyYAML-3.13.tar.gzpip3 install h5py-2.8.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install Keras_Preprocessing-1.0.5-py2.py3-none-any.whlpip3 install Keras_Applications-1.0.6-py2.py3-none-any.whlpip3 install scipy-1.1.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install Keras-2.2.4-py2.py3-none-any.whl 安装 opencv_python 1pip3 install opencv_python-3.4.2.17-cp36-cp36m-manylinux1_x86_64.whl 安装 Pillow 1pip3 install Pillow-5.3.0-cp36-cp36m-manylinux1_x86_64.whl 安装 dlocr 12345678pip3 install python_dateutil-2.7.5-py2.py3-none-any.whlpip3 install pytz-2018.7-py2.py3-none-any.whlpip3 install pandas-0.23.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install xmltodict-0.11.0-py2.py3-none-any.whlpip3 install pyparsing-2.3.0-py2.py3-none-any.whlpip3 install cycler-0.10.0-py2.py3-none-any.whlpip3 install matplotlib-2.0.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install dlocr-0.1.tar.gz 安装 thrift 1pip3 install thrift-0.11.0.tar.gz 安装 libSM、libXrender、libXext、openssl和openssl-devel进入CentOS下存放对应.rpm文件的目录，执行 12cd /mnt/test/Libsm/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/libXrender/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/libXext/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/opensslrpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/openssl-develrpm -Uvh *.rpm --nodeps --force 注：rpm -Uvh *.rpm –nodeps –force -Uvh就是升级软件包–Update *.rpm就是所有的.rpm包； –nodeps就是安装时不检查依赖关系，比如你这个rpm需要A，但是你没装A，这样你的包就装不上，用了–nodeps你就能装上了； –force就是强制安装，比如你装过这个rpm的版本1，如果你想装这个rpm的版本2，就需要用–force强制安装。 四、结束大功告成…","categories":[],"tags":[]},{"title":"我的第一篇文章","slug":"我的第一篇文章 - 副本 (3)","date":"2018-12-06T09:14:17.000Z","updated":"2018-12-06T09:15:36.421Z","comments":true,"path":"2018/12/06/我的第一篇文章 - 副本 (3)/","link":"","permalink":"http://yoursite.com/2018/12/06/我的第一篇文章 - 副本 (3)/","excerpt":"","text":"RedHat7.2 下离线安装之myshell.sh说明一、准备将准备的所有依赖包（test文件夹中）拷贝至离线服务器某目录下（例如：/opt）12#转移包到/mnt/sudo mv test /mnt/ 二、前提 安装gcc和zlib 进入RedHat下存放对应.rpm文件的目录，执行 12cd /mnt/test/gccmkdir/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/zlibmkdir/rpm -Uvh *.rpm --nodeps --force 注：rpm -Uvh *.rpm –nodeps –force -Uvh就是升级软件包–Update *.rpm就是所有的.rpm包； –nodeps就是安装时不检查依赖关系，比如你这个rpm需要A，但是你没装A，这样你的包就装不上，用了–nodeps你就能装上了； –force就是强制安装，比如你装过这个rpm的版本1，如果你想装这个rpm的版本2，就需要用–force强制安装。 三、正式开始各种所需包，提前准备；或者安装的过程中发现缺啥包，再去对应着下载也行。 pip安装1234cd /mnt/test/tar -zxvf pip-9.0.1.tar.gzcd pip-9.0.1python setup.py install 安装 Python 1234567cd /mnt/test/tar zxvf Python-3.6.0.tgzcd /mnt/test/Python-3.6.0#编译安装./configure --with-sslmakesudo make install 安装 tensorflow-gpu 12345678910111213141516cd /mnt/test/pip3 install six-1.11.0-py2.py3-none-any.whlpip3 install termcolor-1.1.0.tar.gzpip3 install gast-0.2.0.tar.gzpip3 install protobuf-3.5.2-cp36-cp36m-manylinux1_x86_64.whlpip3 install numpy-1.15.3-cp36-cp36m-manylinux1_x86_64.whlpip3 install wheel-0.30.0-py2.py3-none-any.whlpip3 install astor-0.6.2-py2.py3-none-any.whlpip3 install Werkzeug-0.14.1-py2.py3-none-any.whlpip3 install Markdown-2.6.11-py2.py3-none-any.whlpip3 install tensorboard-1.9.0-py3-none-any.whlpip3 install absl-py-0.1.11.tar.gzpip3 install grpcio-1.10.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install tensorflow_gpu-1.9.0-cp36-cp36m-manylinux1_x86_64.whl 安装 Keras 1234567pip3 install PyYAML-3.13.tar.gzpip3 install h5py-2.8.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install Keras_Preprocessing-1.0.5-py2.py3-none-any.whlpip3 install Keras_Applications-1.0.6-py2.py3-none-any.whlpip3 install scipy-1.1.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install Keras-2.2.4-py2.py3-none-any.whl 安装 opencv_python 1pip3 install opencv_python-3.4.2.17-cp36-cp36m-manylinux1_x86_64.whl 安装 Pillow 1pip3 install Pillow-5.3.0-cp36-cp36m-manylinux1_x86_64.whl 安装 dlocr 12345678pip3 install python_dateutil-2.7.5-py2.py3-none-any.whlpip3 install pytz-2018.7-py2.py3-none-any.whlpip3 install pandas-0.23.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install xmltodict-0.11.0-py2.py3-none-any.whlpip3 install pyparsing-2.3.0-py2.py3-none-any.whlpip3 install cycler-0.10.0-py2.py3-none-any.whlpip3 install matplotlib-2.0.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install dlocr-0.1.tar.gz 安装 thrift 1pip3 install thrift-0.11.0.tar.gz 安装 libSM、libXrender、libXext、openssl和openssl-devel进入CentOS下存放对应.rpm文件的目录，执行 12cd /mnt/test/Libsm/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/libXrender/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/libXext/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/opensslrpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/openssl-develrpm -Uvh *.rpm --nodeps --force 注：rpm -Uvh *.rpm –nodeps –force -Uvh就是升级软件包–Update *.rpm就是所有的.rpm包； –nodeps就是安装时不检查依赖关系，比如你这个rpm需要A，但是你没装A，这样你的包就装不上，用了–nodeps你就能装上了； –force就是强制安装，比如你装过这个rpm的版本1，如果你想装这个rpm的版本2，就需要用–force强制安装。 四、结束大功告成…","categories":[],"tags":[]},{"title":"我的第一篇文章","slug":"我的第一篇文章 - 副本 (5)","date":"2018-12-06T09:14:17.000Z","updated":"2018-12-06T09:15:36.421Z","comments":true,"path":"2018/12/06/我的第一篇文章 - 副本 (5)/","link":"","permalink":"http://yoursite.com/2018/12/06/我的第一篇文章 - 副本 (5)/","excerpt":"","text":"RedHat7.2 下离线安装之myshell.sh说明一、准备将准备的所有依赖包（test文件夹中）拷贝至离线服务器某目录下（例如：/opt）12#转移包到/mnt/sudo mv test /mnt/ 二、前提 安装gcc和zlib 进入RedHat下存放对应.rpm文件的目录，执行 12cd /mnt/test/gccmkdir/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/zlibmkdir/rpm -Uvh *.rpm --nodeps --force 注：rpm -Uvh *.rpm –nodeps –force -Uvh就是升级软件包–Update *.rpm就是所有的.rpm包； –nodeps就是安装时不检查依赖关系，比如你这个rpm需要A，但是你没装A，这样你的包就装不上，用了–nodeps你就能装上了； –force就是强制安装，比如你装过这个rpm的版本1，如果你想装这个rpm的版本2，就需要用–force强制安装。 三、正式开始各种所需包，提前准备；或者安装的过程中发现缺啥包，再去对应着下载也行。 pip安装1234cd /mnt/test/tar -zxvf pip-9.0.1.tar.gzcd pip-9.0.1python setup.py install 安装 Python 1234567cd /mnt/test/tar zxvf Python-3.6.0.tgzcd /mnt/test/Python-3.6.0#编译安装./configure --with-sslmakesudo make install 安装 tensorflow-gpu 12345678910111213141516cd /mnt/test/pip3 install six-1.11.0-py2.py3-none-any.whlpip3 install termcolor-1.1.0.tar.gzpip3 install gast-0.2.0.tar.gzpip3 install protobuf-3.5.2-cp36-cp36m-manylinux1_x86_64.whlpip3 install numpy-1.15.3-cp36-cp36m-manylinux1_x86_64.whlpip3 install wheel-0.30.0-py2.py3-none-any.whlpip3 install astor-0.6.2-py2.py3-none-any.whlpip3 install Werkzeug-0.14.1-py2.py3-none-any.whlpip3 install Markdown-2.6.11-py2.py3-none-any.whlpip3 install tensorboard-1.9.0-py3-none-any.whlpip3 install absl-py-0.1.11.tar.gzpip3 install grpcio-1.10.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install tensorflow_gpu-1.9.0-cp36-cp36m-manylinux1_x86_64.whl 安装 Keras 1234567pip3 install PyYAML-3.13.tar.gzpip3 install h5py-2.8.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install Keras_Preprocessing-1.0.5-py2.py3-none-any.whlpip3 install Keras_Applications-1.0.6-py2.py3-none-any.whlpip3 install scipy-1.1.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install Keras-2.2.4-py2.py3-none-any.whl 安装 opencv_python 1pip3 install opencv_python-3.4.2.17-cp36-cp36m-manylinux1_x86_64.whl 安装 Pillow 1pip3 install Pillow-5.3.0-cp36-cp36m-manylinux1_x86_64.whl 安装 dlocr 12345678pip3 install python_dateutil-2.7.5-py2.py3-none-any.whlpip3 install pytz-2018.7-py2.py3-none-any.whlpip3 install pandas-0.23.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install xmltodict-0.11.0-py2.py3-none-any.whlpip3 install pyparsing-2.3.0-py2.py3-none-any.whlpip3 install cycler-0.10.0-py2.py3-none-any.whlpip3 install matplotlib-2.0.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install dlocr-0.1.tar.gz 安装 thrift 1pip3 install thrift-0.11.0.tar.gz 安装 libSM、libXrender、libXext、openssl和openssl-devel进入CentOS下存放对应.rpm文件的目录，执行 12cd /mnt/test/Libsm/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/libXrender/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/libXext/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/opensslrpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/openssl-develrpm -Uvh *.rpm --nodeps --force 注：rpm -Uvh *.rpm –nodeps –force -Uvh就是升级软件包–Update *.rpm就是所有的.rpm包； –nodeps就是安装时不检查依赖关系，比如你这个rpm需要A，但是你没装A，这样你的包就装不上，用了–nodeps你就能装上了； –force就是强制安装，比如你装过这个rpm的版本1，如果你想装这个rpm的版本2，就需要用–force强制安装。 四、结束大功告成…","categories":[],"tags":[]},{"title":"我的第一篇文章","slug":"我的第一篇文章 - 副本","date":"2018-12-06T09:14:17.000Z","updated":"2018-12-06T09:15:36.421Z","comments":true,"path":"2018/12/06/我的第一篇文章 - 副本/","link":"","permalink":"http://yoursite.com/2018/12/06/我的第一篇文章 - 副本/","excerpt":"","text":"RedHat7.2 下离线安装之myshell.sh说明一、准备将准备的所有依赖包（test文件夹中）拷贝至离线服务器某目录下（例如：/opt）12#转移包到/mnt/sudo mv test /mnt/ 二、前提 安装gcc和zlib 进入RedHat下存放对应.rpm文件的目录，执行 12cd /mnt/test/gccmkdir/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/zlibmkdir/rpm -Uvh *.rpm --nodeps --force 注：rpm -Uvh *.rpm –nodeps –force -Uvh就是升级软件包–Update *.rpm就是所有的.rpm包； –nodeps就是安装时不检查依赖关系，比如你这个rpm需要A，但是你没装A，这样你的包就装不上，用了–nodeps你就能装上了； –force就是强制安装，比如你装过这个rpm的版本1，如果你想装这个rpm的版本2，就需要用–force强制安装。 三、正式开始各种所需包，提前准备；或者安装的过程中发现缺啥包，再去对应着下载也行。 pip安装1234cd /mnt/test/tar -zxvf pip-9.0.1.tar.gzcd pip-9.0.1python setup.py install 安装 Python 1234567cd /mnt/test/tar zxvf Python-3.6.0.tgzcd /mnt/test/Python-3.6.0#编译安装./configure --with-sslmakesudo make install 安装 tensorflow-gpu 12345678910111213141516cd /mnt/test/pip3 install six-1.11.0-py2.py3-none-any.whlpip3 install termcolor-1.1.0.tar.gzpip3 install gast-0.2.0.tar.gzpip3 install protobuf-3.5.2-cp36-cp36m-manylinux1_x86_64.whlpip3 install numpy-1.15.3-cp36-cp36m-manylinux1_x86_64.whlpip3 install wheel-0.30.0-py2.py3-none-any.whlpip3 install astor-0.6.2-py2.py3-none-any.whlpip3 install Werkzeug-0.14.1-py2.py3-none-any.whlpip3 install Markdown-2.6.11-py2.py3-none-any.whlpip3 install tensorboard-1.9.0-py3-none-any.whlpip3 install absl-py-0.1.11.tar.gzpip3 install grpcio-1.10.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install tensorflow_gpu-1.9.0-cp36-cp36m-manylinux1_x86_64.whl 安装 Keras 1234567pip3 install PyYAML-3.13.tar.gzpip3 install h5py-2.8.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install Keras_Preprocessing-1.0.5-py2.py3-none-any.whlpip3 install Keras_Applications-1.0.6-py2.py3-none-any.whlpip3 install scipy-1.1.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install Keras-2.2.4-py2.py3-none-any.whl 安装 opencv_python 1pip3 install opencv_python-3.4.2.17-cp36-cp36m-manylinux1_x86_64.whl 安装 Pillow 1pip3 install Pillow-5.3.0-cp36-cp36m-manylinux1_x86_64.whl 安装 dlocr 12345678pip3 install python_dateutil-2.7.5-py2.py3-none-any.whlpip3 install pytz-2018.7-py2.py3-none-any.whlpip3 install pandas-0.23.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install xmltodict-0.11.0-py2.py3-none-any.whlpip3 install pyparsing-2.3.0-py2.py3-none-any.whlpip3 install cycler-0.10.0-py2.py3-none-any.whlpip3 install matplotlib-2.0.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install dlocr-0.1.tar.gz 安装 thrift 1pip3 install thrift-0.11.0.tar.gz 安装 libSM、libXrender、libXext、openssl和openssl-devel进入CentOS下存放对应.rpm文件的目录，执行 12cd /mnt/test/Libsm/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/libXrender/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/libXext/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/opensslrpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/openssl-develrpm -Uvh *.rpm --nodeps --force 注：rpm -Uvh *.rpm –nodeps –force -Uvh就是升级软件包–Update *.rpm就是所有的.rpm包； –nodeps就是安装时不检查依赖关系，比如你这个rpm需要A，但是你没装A，这样你的包就装不上，用了–nodeps你就能装上了； –force就是强制安装，比如你装过这个rpm的版本1，如果你想装这个rpm的版本2，就需要用–force强制安装。 四、结束大功告成…","categories":[],"tags":[]},{"title":"我的第一篇文章","slug":"我的第一篇文章","date":"2018-12-06T09:14:17.000Z","updated":"2018-12-06T09:15:36.421Z","comments":true,"path":"2018/12/06/我的第一篇文章/","link":"","permalink":"http://yoursite.com/2018/12/06/我的第一篇文章/","excerpt":"","text":"RedHat7.2 下离线安装之myshell.sh说明一、准备将准备的所有依赖包（test文件夹中）拷贝至离线服务器某目录下（例如：/opt）12#转移包到/mnt/sudo mv test /mnt/ 二、前提 安装gcc和zlib 进入RedHat下存放对应.rpm文件的目录，执行 12cd /mnt/test/gccmkdir/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/zlibmkdir/rpm -Uvh *.rpm --nodeps --force 注：rpm -Uvh *.rpm –nodeps –force -Uvh就是升级软件包–Update *.rpm就是所有的.rpm包； –nodeps就是安装时不检查依赖关系，比如你这个rpm需要A，但是你没装A，这样你的包就装不上，用了–nodeps你就能装上了； –force就是强制安装，比如你装过这个rpm的版本1，如果你想装这个rpm的版本2，就需要用–force强制安装。 三、正式开始各种所需包，提前准备；或者安装的过程中发现缺啥包，再去对应着下载也行。 pip安装1234cd /mnt/test/tar -zxvf pip-9.0.1.tar.gzcd pip-9.0.1python setup.py install 安装 Python 1234567cd /mnt/test/tar zxvf Python-3.6.0.tgzcd /mnt/test/Python-3.6.0#编译安装./configure --with-sslmakesudo make install 安装 tensorflow-gpu 12345678910111213141516cd /mnt/test/pip3 install six-1.11.0-py2.py3-none-any.whlpip3 install termcolor-1.1.0.tar.gzpip3 install gast-0.2.0.tar.gzpip3 install protobuf-3.5.2-cp36-cp36m-manylinux1_x86_64.whlpip3 install numpy-1.15.3-cp36-cp36m-manylinux1_x86_64.whlpip3 install wheel-0.30.0-py2.py3-none-any.whlpip3 install astor-0.6.2-py2.py3-none-any.whlpip3 install Werkzeug-0.14.1-py2.py3-none-any.whlpip3 install Markdown-2.6.11-py2.py3-none-any.whlpip3 install tensorboard-1.9.0-py3-none-any.whlpip3 install absl-py-0.1.11.tar.gzpip3 install grpcio-1.10.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install tensorflow_gpu-1.9.0-cp36-cp36m-manylinux1_x86_64.whl 安装 Keras 1234567pip3 install PyYAML-3.13.tar.gzpip3 install h5py-2.8.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install Keras_Preprocessing-1.0.5-py2.py3-none-any.whlpip3 install Keras_Applications-1.0.6-py2.py3-none-any.whlpip3 install scipy-1.1.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install Keras-2.2.4-py2.py3-none-any.whl 安装 opencv_python 1pip3 install opencv_python-3.4.2.17-cp36-cp36m-manylinux1_x86_64.whl 安装 Pillow 1pip3 install Pillow-5.3.0-cp36-cp36m-manylinux1_x86_64.whl 安装 dlocr 12345678pip3 install python_dateutil-2.7.5-py2.py3-none-any.whlpip3 install pytz-2018.7-py2.py3-none-any.whlpip3 install pandas-0.23.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install xmltodict-0.11.0-py2.py3-none-any.whlpip3 install pyparsing-2.3.0-py2.py3-none-any.whlpip3 install cycler-0.10.0-py2.py3-none-any.whlpip3 install matplotlib-2.0.0-cp36-cp36m-manylinux1_x86_64.whlpip3 install dlocr-0.1.tar.gz 安装 thrift 1pip3 install thrift-0.11.0.tar.gz 安装 libSM、libXrender、libXext、openssl和openssl-devel进入CentOS下存放对应.rpm文件的目录，执行 12cd /mnt/test/Libsm/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/libXrender/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/libXext/rpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/opensslrpm -Uvh *.rpm --nodeps --force 12cd /mnt/test/openssl-develrpm -Uvh *.rpm --nodeps --force 注：rpm -Uvh *.rpm –nodeps –force -Uvh就是升级软件包–Update *.rpm就是所有的.rpm包； –nodeps就是安装时不检查依赖关系，比如你这个rpm需要A，但是你没装A，这样你的包就装不上，用了–nodeps你就能装上了； –force就是强制安装，比如你装过这个rpm的版本1，如果你想装这个rpm的版本2，就需要用–force强制安装。 四、结束大功告成…","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-12-06T08:36:19.860Z","updated":"2018-12-06T08:36:19.861Z","comments":true,"path":"2018/12/06/hello-world/","link":"","permalink":"http://yoursite.com/2018/12/06/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}